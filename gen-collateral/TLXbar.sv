// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module TLXbar(
  input          clock,
                 reset,
                 auto_in_11_a_valid,
  input  [2:0]   auto_in_11_a_bits_opcode,
                 auto_in_11_a_bits_param,
  input  [3:0]   auto_in_11_a_bits_size,
  input  [2:0]   auto_in_11_a_bits_source,
  input  [31:0]  auto_in_11_a_bits_address,
  input  [15:0]  auto_in_11_a_bits_mask,
  input  [127:0] auto_in_11_a_bits_data,
  input          auto_in_11_a_bits_corrupt,
                 auto_in_11_b_ready,
                 auto_in_11_c_valid,
  input  [2:0]   auto_in_11_c_bits_opcode,
                 auto_in_11_c_bits_param,
  input  [3:0]   auto_in_11_c_bits_size,
  input  [2:0]   auto_in_11_c_bits_source,
  input  [31:0]  auto_in_11_c_bits_address,
  input  [127:0] auto_in_11_c_bits_data,
  input          auto_in_11_c_bits_corrupt,
                 auto_in_11_d_ready,
                 auto_in_11_e_valid,
  input  [3:0]   auto_in_11_e_bits_sink,
  input          auto_in_10_a_valid,
  input  [2:0]   auto_in_10_a_bits_opcode,
                 auto_in_10_a_bits_param,
  input  [3:0]   auto_in_10_a_bits_size,
  input  [2:0]   auto_in_10_a_bits_source,
  input  [31:0]  auto_in_10_a_bits_address,
  input  [15:0]  auto_in_10_a_bits_mask,
  input  [127:0] auto_in_10_a_bits_data,
  input          auto_in_10_a_bits_corrupt,
                 auto_in_10_b_ready,
                 auto_in_10_c_valid,
  input  [2:0]   auto_in_10_c_bits_opcode,
                 auto_in_10_c_bits_param,
  input  [3:0]   auto_in_10_c_bits_size,
  input  [2:0]   auto_in_10_c_bits_source,
  input  [31:0]  auto_in_10_c_bits_address,
  input  [127:0] auto_in_10_c_bits_data,
  input          auto_in_10_c_bits_corrupt,
                 auto_in_10_d_ready,
                 auto_in_10_e_valid,
  input  [3:0]   auto_in_10_e_bits_sink,
  input          auto_in_9_a_valid,
  input  [2:0]   auto_in_9_a_bits_opcode,
                 auto_in_9_a_bits_param,
  input  [3:0]   auto_in_9_a_bits_size,
  input  [2:0]   auto_in_9_a_bits_source,
  input  [31:0]  auto_in_9_a_bits_address,
  input  [15:0]  auto_in_9_a_bits_mask,
  input  [127:0] auto_in_9_a_bits_data,
  input          auto_in_9_a_bits_corrupt,
                 auto_in_9_b_ready,
                 auto_in_9_c_valid,
  input  [2:0]   auto_in_9_c_bits_opcode,
                 auto_in_9_c_bits_param,
  input  [3:0]   auto_in_9_c_bits_size,
  input  [2:0]   auto_in_9_c_bits_source,
  input  [31:0]  auto_in_9_c_bits_address,
  input  [127:0] auto_in_9_c_bits_data,
  input          auto_in_9_c_bits_corrupt,
                 auto_in_9_d_ready,
                 auto_in_9_e_valid,
  input  [3:0]   auto_in_9_e_bits_sink,
  input          auto_in_8_a_valid,
  input  [2:0]   auto_in_8_a_bits_opcode,
                 auto_in_8_a_bits_param,
  input  [3:0]   auto_in_8_a_bits_size,
  input  [2:0]   auto_in_8_a_bits_source,
  input  [31:0]  auto_in_8_a_bits_address,
  input  [15:0]  auto_in_8_a_bits_mask,
  input  [127:0] auto_in_8_a_bits_data,
  input          auto_in_8_a_bits_corrupt,
                 auto_in_8_b_ready,
                 auto_in_8_c_valid,
  input  [2:0]   auto_in_8_c_bits_opcode,
                 auto_in_8_c_bits_param,
  input  [3:0]   auto_in_8_c_bits_size,
  input  [2:0]   auto_in_8_c_bits_source,
  input  [31:0]  auto_in_8_c_bits_address,
  input  [127:0] auto_in_8_c_bits_data,
  input          auto_in_8_c_bits_corrupt,
                 auto_in_8_d_ready,
                 auto_in_8_e_valid,
  input  [3:0]   auto_in_8_e_bits_sink,
  input          auto_in_7_a_valid,
  input  [2:0]   auto_in_7_a_bits_opcode,
                 auto_in_7_a_bits_param,
  input  [3:0]   auto_in_7_a_bits_size,
  input  [2:0]   auto_in_7_a_bits_source,
  input  [31:0]  auto_in_7_a_bits_address,
  input  [15:0]  auto_in_7_a_bits_mask,
  input  [127:0] auto_in_7_a_bits_data,
  input          auto_in_7_a_bits_corrupt,
                 auto_in_7_b_ready,
                 auto_in_7_c_valid,
  input  [2:0]   auto_in_7_c_bits_opcode,
                 auto_in_7_c_bits_param,
  input  [3:0]   auto_in_7_c_bits_size,
  input  [2:0]   auto_in_7_c_bits_source,
  input  [31:0]  auto_in_7_c_bits_address,
  input  [127:0] auto_in_7_c_bits_data,
  input          auto_in_7_c_bits_corrupt,
                 auto_in_7_d_ready,
                 auto_in_7_e_valid,
  input  [3:0]   auto_in_7_e_bits_sink,
  input          auto_in_6_a_valid,
  input  [2:0]   auto_in_6_a_bits_opcode,
                 auto_in_6_a_bits_param,
  input  [3:0]   auto_in_6_a_bits_size,
  input  [2:0]   auto_in_6_a_bits_source,
  input  [31:0]  auto_in_6_a_bits_address,
  input  [15:0]  auto_in_6_a_bits_mask,
  input  [127:0] auto_in_6_a_bits_data,
  input          auto_in_6_a_bits_corrupt,
                 auto_in_6_b_ready,
                 auto_in_6_c_valid,
  input  [2:0]   auto_in_6_c_bits_opcode,
                 auto_in_6_c_bits_param,
  input  [3:0]   auto_in_6_c_bits_size,
  input  [2:0]   auto_in_6_c_bits_source,
  input  [31:0]  auto_in_6_c_bits_address,
  input  [127:0] auto_in_6_c_bits_data,
  input          auto_in_6_c_bits_corrupt,
                 auto_in_6_d_ready,
                 auto_in_6_e_valid,
  input  [3:0]   auto_in_6_e_bits_sink,
  input          auto_in_5_a_valid,
  input  [2:0]   auto_in_5_a_bits_opcode,
                 auto_in_5_a_bits_param,
  input  [3:0]   auto_in_5_a_bits_size,
  input  [2:0]   auto_in_5_a_bits_source,
  input  [31:0]  auto_in_5_a_bits_address,
  input  [15:0]  auto_in_5_a_bits_mask,
  input  [127:0] auto_in_5_a_bits_data,
  input          auto_in_5_a_bits_corrupt,
                 auto_in_5_b_ready,
                 auto_in_5_c_valid,
  input  [2:0]   auto_in_5_c_bits_opcode,
                 auto_in_5_c_bits_param,
  input  [3:0]   auto_in_5_c_bits_size,
  input  [2:0]   auto_in_5_c_bits_source,
  input  [31:0]  auto_in_5_c_bits_address,
  input  [127:0] auto_in_5_c_bits_data,
  input          auto_in_5_c_bits_corrupt,
                 auto_in_5_d_ready,
                 auto_in_5_e_valid,
  input  [3:0]   auto_in_5_e_bits_sink,
  input          auto_in_4_a_valid,
  input  [2:0]   auto_in_4_a_bits_opcode,
                 auto_in_4_a_bits_param,
  input  [3:0]   auto_in_4_a_bits_size,
  input  [2:0]   auto_in_4_a_bits_source,
  input  [31:0]  auto_in_4_a_bits_address,
  input  [15:0]  auto_in_4_a_bits_mask,
  input  [127:0] auto_in_4_a_bits_data,
  input          auto_in_4_a_bits_corrupt,
                 auto_in_4_b_ready,
                 auto_in_4_c_valid,
  input  [2:0]   auto_in_4_c_bits_opcode,
                 auto_in_4_c_bits_param,
  input  [3:0]   auto_in_4_c_bits_size,
  input  [2:0]   auto_in_4_c_bits_source,
  input  [31:0]  auto_in_4_c_bits_address,
  input  [127:0] auto_in_4_c_bits_data,
  input          auto_in_4_c_bits_corrupt,
                 auto_in_4_d_ready,
                 auto_in_4_e_valid,
  input  [3:0]   auto_in_4_e_bits_sink,
  input          auto_in_3_a_valid,
  input  [2:0]   auto_in_3_a_bits_opcode,
                 auto_in_3_a_bits_param,
  input  [3:0]   auto_in_3_a_bits_size,
                 auto_in_3_a_bits_source,
  input  [31:0]  auto_in_3_a_bits_address,
  input  [15:0]  auto_in_3_a_bits_mask,
  input  [127:0] auto_in_3_a_bits_data,
  input          auto_in_3_a_bits_corrupt,
                 auto_in_3_b_ready,
                 auto_in_3_c_valid,
  input  [2:0]   auto_in_3_c_bits_opcode,
                 auto_in_3_c_bits_param,
  input  [3:0]   auto_in_3_c_bits_size,
                 auto_in_3_c_bits_source,
  input  [31:0]  auto_in_3_c_bits_address,
  input  [127:0] auto_in_3_c_bits_data,
  input          auto_in_3_c_bits_corrupt,
                 auto_in_3_d_ready,
                 auto_in_3_e_valid,
  input  [3:0]   auto_in_3_e_bits_sink,
  input          auto_in_2_a_valid,
  input  [2:0]   auto_in_2_a_bits_opcode,
                 auto_in_2_a_bits_param,
  input  [3:0]   auto_in_2_a_bits_size,
                 auto_in_2_a_bits_source,
  input  [31:0]  auto_in_2_a_bits_address,
  input  [15:0]  auto_in_2_a_bits_mask,
  input  [127:0] auto_in_2_a_bits_data,
  input          auto_in_2_a_bits_corrupt,
                 auto_in_2_b_ready,
                 auto_in_2_c_valid,
  input  [2:0]   auto_in_2_c_bits_opcode,
                 auto_in_2_c_bits_param,
  input  [3:0]   auto_in_2_c_bits_size,
                 auto_in_2_c_bits_source,
  input  [31:0]  auto_in_2_c_bits_address,
  input  [127:0] auto_in_2_c_bits_data,
  input          auto_in_2_c_bits_corrupt,
                 auto_in_2_d_ready,
                 auto_in_2_e_valid,
  input  [3:0]   auto_in_2_e_bits_sink,
  input          auto_in_1_a_valid,
  input  [2:0]   auto_in_1_a_bits_opcode,
                 auto_in_1_a_bits_param,
  input  [3:0]   auto_in_1_a_bits_size,
                 auto_in_1_a_bits_source,
  input  [31:0]  auto_in_1_a_bits_address,
  input  [15:0]  auto_in_1_a_bits_mask,
  input  [127:0] auto_in_1_a_bits_data,
  input          auto_in_1_a_bits_corrupt,
                 auto_in_1_b_ready,
                 auto_in_1_c_valid,
  input  [2:0]   auto_in_1_c_bits_opcode,
                 auto_in_1_c_bits_param,
  input  [3:0]   auto_in_1_c_bits_size,
                 auto_in_1_c_bits_source,
  input  [31:0]  auto_in_1_c_bits_address,
  input  [127:0] auto_in_1_c_bits_data,
  input          auto_in_1_c_bits_corrupt,
                 auto_in_1_d_ready,
                 auto_in_1_e_valid,
  input  [3:0]   auto_in_1_e_bits_sink,
  input          auto_in_0_a_valid,
  input  [2:0]   auto_in_0_a_bits_opcode,
                 auto_in_0_a_bits_param,
  input  [3:0]   auto_in_0_a_bits_size,
                 auto_in_0_a_bits_source,
  input  [31:0]  auto_in_0_a_bits_address,
  input  [15:0]  auto_in_0_a_bits_mask,
  input  [127:0] auto_in_0_a_bits_data,
  input          auto_in_0_a_bits_corrupt,
                 auto_in_0_d_ready,
                 auto_out_1_a_ready,
                 auto_out_1_b_valid,
  input  [1:0]   auto_out_1_b_bits_param,
  input  [6:0]   auto_out_1_b_bits_source,
  input  [31:0]  auto_out_1_b_bits_address,
  input          auto_out_1_c_ready,
                 auto_out_1_d_valid,
  input  [2:0]   auto_out_1_d_bits_opcode,
  input  [1:0]   auto_out_1_d_bits_param,
  input  [2:0]   auto_out_1_d_bits_size,
  input  [6:0]   auto_out_1_d_bits_source,
  input  [3:0]   auto_out_1_d_bits_sink,
  input          auto_out_1_d_bits_denied,
  input  [127:0] auto_out_1_d_bits_data,
  input          auto_out_1_d_bits_corrupt,
                 auto_out_0_a_ready,
                 auto_out_0_d_valid,
  input  [2:0]   auto_out_0_d_bits_opcode,
  input  [1:0]   auto_out_0_d_bits_param,
  input  [3:0]   auto_out_0_d_bits_size,
  input  [6:0]   auto_out_0_d_bits_source,
  input          auto_out_0_d_bits_sink,
                 auto_out_0_d_bits_denied,
  input  [127:0] auto_out_0_d_bits_data,
  input          auto_out_0_d_bits_corrupt,
  output         auto_in_11_a_ready,
                 auto_in_11_b_valid,
  output [1:0]   auto_in_11_b_bits_param,
  output [2:0]   auto_in_11_b_bits_source,
  output [31:0]  auto_in_11_b_bits_address,
  output         auto_in_11_c_ready,
                 auto_in_11_d_valid,
  output [2:0]   auto_in_11_d_bits_opcode,
  output [1:0]   auto_in_11_d_bits_param,
  output [3:0]   auto_in_11_d_bits_size,
  output [2:0]   auto_in_11_d_bits_source,
  output [3:0]   auto_in_11_d_bits_sink,
  output         auto_in_11_d_bits_denied,
  output [127:0] auto_in_11_d_bits_data,
  output         auto_in_11_d_bits_corrupt,
                 auto_in_11_e_ready,
                 auto_in_10_a_ready,
                 auto_in_10_b_valid,
  output [1:0]   auto_in_10_b_bits_param,
  output [2:0]   auto_in_10_b_bits_source,
  output [31:0]  auto_in_10_b_bits_address,
  output         auto_in_10_c_ready,
                 auto_in_10_d_valid,
  output [2:0]   auto_in_10_d_bits_opcode,
  output [1:0]   auto_in_10_d_bits_param,
  output [3:0]   auto_in_10_d_bits_size,
  output [2:0]   auto_in_10_d_bits_source,
  output [3:0]   auto_in_10_d_bits_sink,
  output         auto_in_10_d_bits_denied,
  output [127:0] auto_in_10_d_bits_data,
  output         auto_in_10_d_bits_corrupt,
                 auto_in_10_e_ready,
                 auto_in_9_a_ready,
                 auto_in_9_b_valid,
  output [1:0]   auto_in_9_b_bits_param,
  output [2:0]   auto_in_9_b_bits_source,
  output [31:0]  auto_in_9_b_bits_address,
  output         auto_in_9_c_ready,
                 auto_in_9_d_valid,
  output [2:0]   auto_in_9_d_bits_opcode,
  output [1:0]   auto_in_9_d_bits_param,
  output [3:0]   auto_in_9_d_bits_size,
  output [2:0]   auto_in_9_d_bits_source,
  output [3:0]   auto_in_9_d_bits_sink,
  output         auto_in_9_d_bits_denied,
  output [127:0] auto_in_9_d_bits_data,
  output         auto_in_9_d_bits_corrupt,
                 auto_in_9_e_ready,
                 auto_in_8_a_ready,
                 auto_in_8_b_valid,
  output [1:0]   auto_in_8_b_bits_param,
  output [2:0]   auto_in_8_b_bits_source,
  output [31:0]  auto_in_8_b_bits_address,
  output         auto_in_8_c_ready,
                 auto_in_8_d_valid,
  output [2:0]   auto_in_8_d_bits_opcode,
  output [1:0]   auto_in_8_d_bits_param,
  output [3:0]   auto_in_8_d_bits_size,
  output [2:0]   auto_in_8_d_bits_source,
  output [3:0]   auto_in_8_d_bits_sink,
  output         auto_in_8_d_bits_denied,
  output [127:0] auto_in_8_d_bits_data,
  output         auto_in_8_d_bits_corrupt,
                 auto_in_8_e_ready,
                 auto_in_7_a_ready,
                 auto_in_7_b_valid,
  output [1:0]   auto_in_7_b_bits_param,
  output [2:0]   auto_in_7_b_bits_source,
  output [31:0]  auto_in_7_b_bits_address,
  output         auto_in_7_c_ready,
                 auto_in_7_d_valid,
  output [2:0]   auto_in_7_d_bits_opcode,
  output [1:0]   auto_in_7_d_bits_param,
  output [3:0]   auto_in_7_d_bits_size,
  output [2:0]   auto_in_7_d_bits_source,
  output [3:0]   auto_in_7_d_bits_sink,
  output         auto_in_7_d_bits_denied,
  output [127:0] auto_in_7_d_bits_data,
  output         auto_in_7_d_bits_corrupt,
                 auto_in_7_e_ready,
                 auto_in_6_a_ready,
                 auto_in_6_b_valid,
  output [1:0]   auto_in_6_b_bits_param,
  output [2:0]   auto_in_6_b_bits_source,
  output [31:0]  auto_in_6_b_bits_address,
  output         auto_in_6_c_ready,
                 auto_in_6_d_valid,
  output [2:0]   auto_in_6_d_bits_opcode,
  output [1:0]   auto_in_6_d_bits_param,
  output [3:0]   auto_in_6_d_bits_size,
  output [2:0]   auto_in_6_d_bits_source,
  output [3:0]   auto_in_6_d_bits_sink,
  output         auto_in_6_d_bits_denied,
  output [127:0] auto_in_6_d_bits_data,
  output         auto_in_6_d_bits_corrupt,
                 auto_in_6_e_ready,
                 auto_in_5_a_ready,
                 auto_in_5_b_valid,
  output [1:0]   auto_in_5_b_bits_param,
  output [2:0]   auto_in_5_b_bits_source,
  output [31:0]  auto_in_5_b_bits_address,
  output         auto_in_5_c_ready,
                 auto_in_5_d_valid,
  output [2:0]   auto_in_5_d_bits_opcode,
  output [1:0]   auto_in_5_d_bits_param,
  output [3:0]   auto_in_5_d_bits_size,
  output [2:0]   auto_in_5_d_bits_source,
  output [3:0]   auto_in_5_d_bits_sink,
  output         auto_in_5_d_bits_denied,
  output [127:0] auto_in_5_d_bits_data,
  output         auto_in_5_d_bits_corrupt,
                 auto_in_5_e_ready,
                 auto_in_4_a_ready,
                 auto_in_4_b_valid,
  output [1:0]   auto_in_4_b_bits_param,
  output [2:0]   auto_in_4_b_bits_source,
  output [31:0]  auto_in_4_b_bits_address,
  output         auto_in_4_c_ready,
                 auto_in_4_d_valid,
  output [2:0]   auto_in_4_d_bits_opcode,
  output [1:0]   auto_in_4_d_bits_param,
  output [3:0]   auto_in_4_d_bits_size,
  output [2:0]   auto_in_4_d_bits_source,
  output [3:0]   auto_in_4_d_bits_sink,
  output         auto_in_4_d_bits_denied,
  output [127:0] auto_in_4_d_bits_data,
  output         auto_in_4_d_bits_corrupt,
                 auto_in_4_e_ready,
                 auto_in_3_a_ready,
                 auto_in_3_b_valid,
  output [1:0]   auto_in_3_b_bits_param,
  output [3:0]   auto_in_3_b_bits_source,
  output [31:0]  auto_in_3_b_bits_address,
  output         auto_in_3_c_ready,
                 auto_in_3_d_valid,
  output [2:0]   auto_in_3_d_bits_opcode,
  output [1:0]   auto_in_3_d_bits_param,
  output [3:0]   auto_in_3_d_bits_size,
                 auto_in_3_d_bits_source,
                 auto_in_3_d_bits_sink,
  output         auto_in_3_d_bits_denied,
  output [127:0] auto_in_3_d_bits_data,
  output         auto_in_3_d_bits_corrupt,
                 auto_in_3_e_ready,
                 auto_in_2_a_ready,
                 auto_in_2_b_valid,
  output [1:0]   auto_in_2_b_bits_param,
  output [3:0]   auto_in_2_b_bits_source,
  output [31:0]  auto_in_2_b_bits_address,
  output         auto_in_2_c_ready,
                 auto_in_2_d_valid,
  output [2:0]   auto_in_2_d_bits_opcode,
  output [1:0]   auto_in_2_d_bits_param,
  output [3:0]   auto_in_2_d_bits_size,
                 auto_in_2_d_bits_source,
                 auto_in_2_d_bits_sink,
  output         auto_in_2_d_bits_denied,
  output [127:0] auto_in_2_d_bits_data,
  output         auto_in_2_d_bits_corrupt,
                 auto_in_2_e_ready,
                 auto_in_1_a_ready,
                 auto_in_1_b_valid,
  output [1:0]   auto_in_1_b_bits_param,
  output [3:0]   auto_in_1_b_bits_source,
  output [31:0]  auto_in_1_b_bits_address,
  output         auto_in_1_c_ready,
                 auto_in_1_d_valid,
  output [2:0]   auto_in_1_d_bits_opcode,
  output [1:0]   auto_in_1_d_bits_param,
  output [3:0]   auto_in_1_d_bits_size,
                 auto_in_1_d_bits_source,
                 auto_in_1_d_bits_sink,
  output         auto_in_1_d_bits_denied,
  output [127:0] auto_in_1_d_bits_data,
  output         auto_in_1_d_bits_corrupt,
                 auto_in_1_e_ready,
                 auto_in_0_a_ready,
                 auto_in_0_d_valid,
  output [2:0]   auto_in_0_d_bits_opcode,
  output [1:0]   auto_in_0_d_bits_param,
  output [3:0]   auto_in_0_d_bits_size,
                 auto_in_0_d_bits_source,
                 auto_in_0_d_bits_sink,
  output         auto_in_0_d_bits_denied,
  output [127:0] auto_in_0_d_bits_data,
  output         auto_in_0_d_bits_corrupt,
                 auto_out_1_a_valid,
  output [2:0]   auto_out_1_a_bits_opcode,
                 auto_out_1_a_bits_param,
                 auto_out_1_a_bits_size,
  output [6:0]   auto_out_1_a_bits_source,
  output [31:0]  auto_out_1_a_bits_address,
  output [15:0]  auto_out_1_a_bits_mask,
  output [127:0] auto_out_1_a_bits_data,
  output         auto_out_1_a_bits_corrupt,
                 auto_out_1_b_ready,
                 auto_out_1_c_valid,
  output [2:0]   auto_out_1_c_bits_opcode,
                 auto_out_1_c_bits_param,
                 auto_out_1_c_bits_size,
  output [6:0]   auto_out_1_c_bits_source,
  output [31:0]  auto_out_1_c_bits_address,
  output [127:0] auto_out_1_c_bits_data,
  output         auto_out_1_c_bits_corrupt,
                 auto_out_1_d_ready,
                 auto_out_1_e_valid,
  output [3:0]   auto_out_1_e_bits_sink,
  output         auto_out_0_a_valid,
  output [2:0]   auto_out_0_a_bits_opcode,
                 auto_out_0_a_bits_param,
  output [3:0]   auto_out_0_a_bits_size,
  output [6:0]   auto_out_0_a_bits_source,
  output [30:0]  auto_out_0_a_bits_address,
  output [15:0]  auto_out_0_a_bits_mask,
  output [127:0] auto_out_0_a_bits_data,
  output         auto_out_0_a_bits_corrupt,
                 auto_out_0_d_ready
);

  wire        allowed_15_1;	// @[Arbiter.scala:122:24]
  wire        allowed_15_0;	// @[Arbiter.scala:122:24]
  wire        allowed_14_1;	// @[Arbiter.scala:122:24]
  wire        allowed_14_0;	// @[Arbiter.scala:122:24]
  wire        allowed_13_1;	// @[Arbiter.scala:122:24]
  wire        allowed_13_0;	// @[Arbiter.scala:122:24]
  wire        allowed_12_1;	// @[Arbiter.scala:122:24]
  wire        allowed_12_0;	// @[Arbiter.scala:122:24]
  wire        allowed_11_1;	// @[Arbiter.scala:122:24]
  wire        allowed_11_0;	// @[Arbiter.scala:122:24]
  wire        allowed_10_1;	// @[Arbiter.scala:122:24]
  wire        allowed_10_0;	// @[Arbiter.scala:122:24]
  wire        allowed_9_1;	// @[Arbiter.scala:122:24]
  wire        allowed_9_0;	// @[Arbiter.scala:122:24]
  wire        allowed_8_1;	// @[Arbiter.scala:122:24]
  wire        allowed_8_0;	// @[Arbiter.scala:122:24]
  wire        allowed_7_1;	// @[Arbiter.scala:122:24]
  wire        allowed_7_0;	// @[Arbiter.scala:122:24]
  wire        allowed_6_1;	// @[Arbiter.scala:122:24]
  wire        allowed_6_0;	// @[Arbiter.scala:122:24]
  wire        allowed_5_1;	// @[Arbiter.scala:122:24]
  wire        allowed_5_0;	// @[Arbiter.scala:122:24]
  wire        allowed_4_1;	// @[Arbiter.scala:122:24]
  wire        allowed_4_0;	// @[Arbiter.scala:122:24]
  wire        allowed_1_11;	// @[Arbiter.scala:122:24]
  wire        allowed_1_10;	// @[Arbiter.scala:122:24]
  wire        allowed_1_9;	// @[Arbiter.scala:122:24]
  wire        allowed_1_8;	// @[Arbiter.scala:122:24]
  wire        allowed_1_7;	// @[Arbiter.scala:122:24]
  wire        allowed_1_6;	// @[Arbiter.scala:122:24]
  wire        allowed_1_5;	// @[Arbiter.scala:122:24]
  wire        allowed_1_4;	// @[Arbiter.scala:122:24]
  wire        allowed_1_3;	// @[Arbiter.scala:122:24]
  wire        allowed_1_2;	// @[Arbiter.scala:122:24]
  wire        allowed_1_1;	// @[Arbiter.scala:122:24]
  wire        allowed_1_0;	// @[Arbiter.scala:122:24]
  wire        allowed_11;	// @[Arbiter.scala:122:24]
  wire        allowed_10;	// @[Arbiter.scala:122:24]
  wire        allowed_9;	// @[Arbiter.scala:122:24]
  wire        allowed_8;	// @[Arbiter.scala:122:24]
  wire        allowed_7;	// @[Arbiter.scala:122:24]
  wire        allowed_6;	// @[Arbiter.scala:122:24]
  wire        allowed_5;	// @[Arbiter.scala:122:24]
  wire        allowed_4;	// @[Arbiter.scala:122:24]
  wire        allowed_3;	// @[Arbiter.scala:122:24]
  wire        allowed_2;	// @[Arbiter.scala:122:24]
  wire        allowed_1;	// @[Arbiter.scala:122:24]
  wire        allowed_0;	// @[Arbiter.scala:122:24]
  wire [6:0]  portsAOI_filtered_1_bits_source = {3'h3, auto_in_0_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:29]
  wire [6:0]  portsAOI_filtered_1_1_bits_source = {3'h2, auto_in_1_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:29]
  wire [6:0]  portsAOI_filtered_2_1_bits_source = {3'h1, auto_in_2_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:29]
  wire [6:0]  portsAOI_filtered_3_1_bits_source = {3'h0, auto_in_3_a_bits_source};	// @[Bundles.scala:259:74, Xbar.scala:240:29]
  wire [6:0]  portsAOI_filtered_4_1_bits_source = {4'hF, auto_in_4_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:55]
  wire [6:0]  portsAOI_filtered_5_1_bits_source = {4'hE, auto_in_5_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:55]
  wire [6:0]  portsAOI_filtered_6_1_bits_source = {4'hD, auto_in_6_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:55]
  wire [6:0]  portsAOI_filtered_7_1_bits_source = {4'hC, auto_in_7_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:55]
  wire [6:0]  portsAOI_filtered_8_1_bits_source = {4'hB, auto_in_8_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:55]
  wire [6:0]  portsAOI_filtered_9_1_bits_source = {4'hA, auto_in_9_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:55]
  wire [6:0]  portsAOI_filtered_10_1_bits_source = {4'h9, auto_in_10_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:55]
  wire [6:0]  portsAOI_filtered_11_1_bits_source = {4'h8, auto_in_11_a_bits_source};	// @[Parameters.scala:54:32, Xbar.scala:240:55]
  wire [3:0]  out_95_bits_sink = {3'h0, auto_out_0_d_bits_sink};	// @[Bundles.scala:259:74, Xbar.scala:326:28]
  wire [3:0]  out_96_bits_size = {1'h0, auto_out_1_d_bits_size};	// @[BundleMap.scala:247:19]
  wire        requestBOI_1_1 = auto_out_1_b_bits_source[6:4] == 3'h2;	// @[Parameters.scala:54:{10,32}]
  wire        requestBOI_1_2 = auto_out_1_b_bits_source[6:4] == 3'h1;	// @[Parameters.scala:54:{10,32}]
  wire        requestBOI_1_3 = auto_out_1_b_bits_source[6:4] == 3'h0;	// @[Bundles.scala:259:74, Parameters.scala:54:{10,32}]
  wire        requestBOI_1_5 = auto_out_1_b_bits_source[6:3] == 4'hE;	// @[Parameters.scala:54:{10,32}]
  wire        requestBOI_1_6 = auto_out_1_b_bits_source[6:3] == 4'hD;	// @[Parameters.scala:54:{10,32}]
  wire        requestBOI_1_7 = auto_out_1_b_bits_source[6:3] == 4'hC;	// @[Parameters.scala:54:{10,32}]
  wire        requestBOI_1_8 = auto_out_1_b_bits_source[6:3] == 4'hB;	// @[Parameters.scala:54:{10,32}]
  wire        requestBOI_1_9 = auto_out_1_b_bits_source[6:3] == 4'hA;	// @[Parameters.scala:54:{10,32}]
  wire        requestBOI_1_10 = auto_out_1_b_bits_source[6:3] == 4'h9;	// @[Parameters.scala:54:{10,32}]
  wire        requestBOI_1_11 = auto_out_1_b_bits_source[6:3] == 4'h8;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_0_0 = auto_out_0_d_bits_source[6:4] == 3'h3;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_0_1 = auto_out_0_d_bits_source[6:4] == 3'h2;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_0_2 = auto_out_0_d_bits_source[6:4] == 3'h1;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_0_3 = auto_out_0_d_bits_source[6:4] == 3'h0;	// @[Bundles.scala:259:74, Parameters.scala:54:{10,32}]
  wire        requestDOI_0_5 = auto_out_0_d_bits_source[6:3] == 4'hE;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_0_6 = auto_out_0_d_bits_source[6:3] == 4'hD;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_0_7 = auto_out_0_d_bits_source[6:3] == 4'hC;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_0_8 = auto_out_0_d_bits_source[6:3] == 4'hB;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_0_9 = auto_out_0_d_bits_source[6:3] == 4'hA;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_0_10 = auto_out_0_d_bits_source[6:3] == 4'h9;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_0_11 = auto_out_0_d_bits_source[6:3] == 4'h8;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_1_0 = auto_out_1_d_bits_source[6:4] == 3'h3;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_1_1 = auto_out_1_d_bits_source[6:4] == 3'h2;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_1_2 = auto_out_1_d_bits_source[6:4] == 3'h1;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_1_3 = auto_out_1_d_bits_source[6:4] == 3'h0;	// @[Bundles.scala:259:74, Parameters.scala:54:{10,32}]
  wire        requestDOI_1_5 = auto_out_1_d_bits_source[6:3] == 4'hE;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_1_6 = auto_out_1_d_bits_source[6:3] == 4'hD;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_1_7 = auto_out_1_d_bits_source[6:3] == 4'hC;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_1_8 = auto_out_1_d_bits_source[6:3] == 4'hB;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_1_9 = auto_out_1_d_bits_source[6:3] == 4'hA;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_1_10 = auto_out_1_d_bits_source[6:3] == 4'h9;	// @[Parameters.scala:54:{10,32}]
  wire        requestDOI_1_11 = auto_out_1_d_bits_source[6:3] == 4'h8;	// @[Parameters.scala:54:{10,32}]
  wire        portsAOI_filtered_0_earlyValid = auto_in_0_a_valid & ~(auto_in_0_a_bits_address[31]);	// @[Parameters.scala:137:{45,65}, Xbar.scala:431:50]
  wire        portsAOI_filtered_1_earlyValid = auto_in_0_a_valid & auto_in_0_a_bits_address[31];	// @[Parameters.scala:137:45, Xbar.scala:431:50]
  wire        _portsAOI_in_0_a_ready_WIRE = ~(auto_in_0_a_bits_address[31]) & auto_out_0_a_ready & allowed_0 | auto_in_0_a_bits_address[31] & auto_out_1_a_ready & allowed_1_0;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:{45,65}]
  wire        portsAOI_filtered_1_0_earlyValid = auto_in_1_a_valid & ~(auto_in_1_a_bits_address[31]);	// @[Parameters.scala:137:{45,65}, Xbar.scala:431:50]
  wire        portsAOI_filtered_1_1_earlyValid = auto_in_1_a_valid & auto_in_1_a_bits_address[31];	// @[Parameters.scala:137:45, Xbar.scala:431:50]
  wire        _portsAOI_in_1_a_ready_WIRE = ~(auto_in_1_a_bits_address[31]) & auto_out_0_a_ready & allowed_1 | auto_in_1_a_bits_address[31] & auto_out_1_a_ready & allowed_1_1;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:{45,65}]
  wire        portsAOI_filtered_2_0_earlyValid = auto_in_2_a_valid & ~(auto_in_2_a_bits_address[31]);	// @[Parameters.scala:137:{45,65}, Xbar.scala:431:50]
  wire        portsAOI_filtered_2_1_earlyValid = auto_in_2_a_valid & auto_in_2_a_bits_address[31];	// @[Parameters.scala:137:45, Xbar.scala:431:50]
  wire        _portsAOI_in_2_a_ready_WIRE = ~(auto_in_2_a_bits_address[31]) & auto_out_0_a_ready & allowed_2 | auto_in_2_a_bits_address[31] & auto_out_1_a_ready & allowed_1_2;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:{45,65}]
  wire        portsAOI_filtered_3_0_earlyValid = auto_in_3_a_valid & ~(auto_in_3_a_bits_address[31]);	// @[Parameters.scala:137:{45,65}, Xbar.scala:431:50]
  wire        portsAOI_filtered_3_1_earlyValid = auto_in_3_a_valid & auto_in_3_a_bits_address[31];	// @[Parameters.scala:137:45, Xbar.scala:431:50]
  wire        _portsAOI_in_3_a_ready_WIRE = ~(auto_in_3_a_bits_address[31]) & auto_out_0_a_ready & allowed_3 | auto_in_3_a_bits_address[31] & auto_out_1_a_ready & allowed_1_3;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:{45,65}]
  wire        portsAOI_filtered_4_0_earlyValid = auto_in_4_a_valid & ~(auto_in_4_a_bits_address[31]);	// @[Parameters.scala:137:{45,65}, Xbar.scala:431:50]
  wire        portsAOI_filtered_4_1_earlyValid = auto_in_4_a_valid & auto_in_4_a_bits_address[31];	// @[Parameters.scala:137:45, Xbar.scala:431:50]
  wire        _portsAOI_in_4_a_ready_WIRE = ~(auto_in_4_a_bits_address[31]) & auto_out_0_a_ready & allowed_4 | auto_in_4_a_bits_address[31] & auto_out_1_a_ready & allowed_1_4;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:{45,65}]
  wire        portsAOI_filtered_5_0_earlyValid = auto_in_5_a_valid & ~(auto_in_5_a_bits_address[31]);	// @[Parameters.scala:137:{45,65}, Xbar.scala:431:50]
  wire        portsAOI_filtered_5_1_earlyValid = auto_in_5_a_valid & auto_in_5_a_bits_address[31];	// @[Parameters.scala:137:45, Xbar.scala:431:50]
  wire        _portsAOI_in_5_a_ready_WIRE = ~(auto_in_5_a_bits_address[31]) & auto_out_0_a_ready & allowed_5 | auto_in_5_a_bits_address[31] & auto_out_1_a_ready & allowed_1_5;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:{45,65}]
  wire        portsAOI_filtered_6_0_earlyValid = auto_in_6_a_valid & ~(auto_in_6_a_bits_address[31]);	// @[Parameters.scala:137:{45,65}, Xbar.scala:431:50]
  wire        portsAOI_filtered_6_1_earlyValid = auto_in_6_a_valid & auto_in_6_a_bits_address[31];	// @[Parameters.scala:137:45, Xbar.scala:431:50]
  wire        _portsAOI_in_6_a_ready_WIRE = ~(auto_in_6_a_bits_address[31]) & auto_out_0_a_ready & allowed_6 | auto_in_6_a_bits_address[31] & auto_out_1_a_ready & allowed_1_6;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:{45,65}]
  wire        portsAOI_filtered_7_0_earlyValid = auto_in_7_a_valid & ~(auto_in_7_a_bits_address[31]);	// @[Parameters.scala:137:{45,65}, Xbar.scala:431:50]
  wire        portsAOI_filtered_7_1_earlyValid = auto_in_7_a_valid & auto_in_7_a_bits_address[31];	// @[Parameters.scala:137:45, Xbar.scala:431:50]
  wire        _portsAOI_in_7_a_ready_WIRE = ~(auto_in_7_a_bits_address[31]) & auto_out_0_a_ready & allowed_7 | auto_in_7_a_bits_address[31] & auto_out_1_a_ready & allowed_1_7;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:{45,65}]
  wire        portsAOI_filtered_8_0_earlyValid = auto_in_8_a_valid & ~(auto_in_8_a_bits_address[31]);	// @[Parameters.scala:137:{45,65}, Xbar.scala:431:50]
  wire        portsAOI_filtered_8_1_earlyValid = auto_in_8_a_valid & auto_in_8_a_bits_address[31];	// @[Parameters.scala:137:45, Xbar.scala:431:50]
  wire        _portsAOI_in_8_a_ready_WIRE = ~(auto_in_8_a_bits_address[31]) & auto_out_0_a_ready & allowed_8 | auto_in_8_a_bits_address[31] & auto_out_1_a_ready & allowed_1_8;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:{45,65}]
  wire        portsAOI_filtered_9_0_earlyValid = auto_in_9_a_valid & ~(auto_in_9_a_bits_address[31]);	// @[Parameters.scala:137:{45,65}, Xbar.scala:431:50]
  wire        portsAOI_filtered_9_1_earlyValid = auto_in_9_a_valid & auto_in_9_a_bits_address[31];	// @[Parameters.scala:137:45, Xbar.scala:431:50]
  wire        _portsAOI_in_9_a_ready_WIRE = ~(auto_in_9_a_bits_address[31]) & auto_out_0_a_ready & allowed_9 | auto_in_9_a_bits_address[31] & auto_out_1_a_ready & allowed_1_9;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:{45,65}]
  wire        portsAOI_filtered_10_0_earlyValid = auto_in_10_a_valid & ~(auto_in_10_a_bits_address[31]);	// @[Parameters.scala:137:{45,65}, Xbar.scala:431:50]
  wire        portsAOI_filtered_10_1_earlyValid = auto_in_10_a_valid & auto_in_10_a_bits_address[31];	// @[Parameters.scala:137:45, Xbar.scala:431:50]
  wire        _portsAOI_in_10_a_ready_WIRE = ~(auto_in_10_a_bits_address[31]) & auto_out_0_a_ready & allowed_10 | auto_in_10_a_bits_address[31] & auto_out_1_a_ready & allowed_1_10;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:{45,65}]
  wire        portsAOI_filtered_11_0_earlyValid = auto_in_11_a_valid & ~(auto_in_11_a_bits_address[31]);	// @[Parameters.scala:137:{45,65}, Xbar.scala:431:50]
  wire        portsAOI_filtered_11_1_earlyValid = auto_in_11_a_valid & auto_in_11_a_bits_address[31];	// @[Parameters.scala:137:45, Xbar.scala:431:50]
  wire        _portsAOI_in_11_a_ready_WIRE = ~(auto_in_11_a_bits_address[31]) & auto_out_0_a_ready & allowed_11 | auto_in_11_a_bits_address[31] & auto_out_1_a_ready & allowed_1_11;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:137:{45,65}]
  wire        out_44_valid = auto_out_1_b_valid & requestBOI_1_1;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_49_valid = auto_out_1_b_valid & requestBOI_1_2;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_54_valid = auto_out_1_b_valid & requestBOI_1_3;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_59_valid = auto_out_1_b_valid & (&(auto_out_1_b_bits_source[6:3]));	// @[Parameters.scala:54:{10,32}, Xbar.scala:182:40]
  wire        out_64_valid = auto_out_1_b_valid & requestBOI_1_5;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_69_valid = auto_out_1_b_valid & requestBOI_1_6;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_74_valid = auto_out_1_b_valid & requestBOI_1_7;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_79_valid = auto_out_1_b_valid & requestBOI_1_8;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_84_valid = auto_out_1_b_valid & requestBOI_1_9;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_89_valid = auto_out_1_b_valid & requestBOI_1_10;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_94_valid = auto_out_1_b_valid & requestBOI_1_11;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_40_earlyValid = auto_out_0_d_valid & requestDOI_0_0;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_45_earlyValid = auto_out_0_d_valid & requestDOI_0_1;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_50_earlyValid = auto_out_0_d_valid & requestDOI_0_2;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_55_earlyValid = auto_out_0_d_valid & requestDOI_0_3;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_60_earlyValid = auto_out_0_d_valid & (&(auto_out_0_d_bits_source[6:3]));	// @[Parameters.scala:54:{10,32}, Xbar.scala:182:40]
  wire        out_65_earlyValid = auto_out_0_d_valid & requestDOI_0_5;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_70_earlyValid = auto_out_0_d_valid & requestDOI_0_6;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_75_earlyValid = auto_out_0_d_valid & requestDOI_0_7;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_80_earlyValid = auto_out_0_d_valid & requestDOI_0_8;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_85_earlyValid = auto_out_0_d_valid & requestDOI_0_9;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_90_earlyValid = auto_out_0_d_valid & requestDOI_0_10;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_95_earlyValid = auto_out_0_d_valid & requestDOI_0_11;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_41_earlyValid = auto_out_1_d_valid & requestDOI_1_0;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_46_earlyValid = auto_out_1_d_valid & requestDOI_1_1;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_51_earlyValid = auto_out_1_d_valid & requestDOI_1_2;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_56_earlyValid = auto_out_1_d_valid & requestDOI_1_3;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_61_earlyValid = auto_out_1_d_valid & (&(auto_out_1_d_bits_source[6:3]));	// @[Parameters.scala:54:{10,32}, Xbar.scala:182:40]
  wire        out_66_earlyValid = auto_out_1_d_valid & requestDOI_1_5;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_71_earlyValid = auto_out_1_d_valid & requestDOI_1_6;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_76_earlyValid = auto_out_1_d_valid & requestDOI_1_7;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_81_earlyValid = auto_out_1_d_valid & requestDOI_1_8;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_86_earlyValid = auto_out_1_d_valid & requestDOI_1_9;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_91_earlyValid = auto_out_1_d_valid & requestDOI_1_10;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  wire        out_96_earlyValid = auto_out_1_d_valid & requestDOI_1_11;	// @[Parameters.scala:54:32, Xbar.scala:182:40]
  reg  [7:0]  beatsLeft;	// @[Arbiter.scala:88:30]
  wire        idle = beatsLeft == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [11:0] readys_valid = {portsAOI_filtered_11_0_earlyValid, portsAOI_filtered_10_0_earlyValid, portsAOI_filtered_9_0_earlyValid, portsAOI_filtered_8_0_earlyValid, portsAOI_filtered_7_0_earlyValid, portsAOI_filtered_6_0_earlyValid, portsAOI_filtered_5_0_earlyValid, portsAOI_filtered_4_0_earlyValid, portsAOI_filtered_3_0_earlyValid, portsAOI_filtered_2_0_earlyValid, portsAOI_filtered_1_0_earlyValid, portsAOI_filtered_0_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:431:50]
  reg  [11:0] readys_mask;	// @[Arbiter.scala:24:23]
  wire [11:0] _readys_filter_T_1 = readys_valid & ~readys_mask;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [10:0] _GEN = _readys_filter_T_1[10:0] | _readys_filter_T_1[11:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_0 = portsAOI_filtered_11_0_earlyValid | _readys_filter_T_1[0];	// @[Arbiter.scala:25:28, Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_1 = portsAOI_filtered_10_0_earlyValid | portsAOI_filtered_11_0_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_2 = portsAOI_filtered_9_0_earlyValid | portsAOI_filtered_10_0_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_3 = portsAOI_filtered_8_0_earlyValid | portsAOI_filtered_9_0_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_4 = portsAOI_filtered_7_0_earlyValid | portsAOI_filtered_8_0_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_5 = portsAOI_filtered_6_0_earlyValid | portsAOI_filtered_7_0_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_6 = portsAOI_filtered_5_0_earlyValid | portsAOI_filtered_6_0_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_7 = portsAOI_filtered_4_0_earlyValid | portsAOI_filtered_5_0_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_8 = portsAOI_filtered_3_0_earlyValid | portsAOI_filtered_4_0_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_9 = _GEN[9] | _readys_filter_T_1[11];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [8:0]  _GEN_10 = _GEN[8:0] | _GEN[10:2];	// @[package.scala:254:43]
  wire        _GEN_11 = _GEN_0 | _GEN[1];	// @[package.scala:254:43]
  wire        _GEN_12 = _GEN_1 | _GEN[0];	// @[package.scala:254:43]
  wire        _GEN_13 = _GEN_2 | _GEN_0;	// @[package.scala:254:43]
  wire        _GEN_14 = _GEN_3 | _GEN_1;	// @[package.scala:254:43]
  wire        _GEN_15 = _GEN_4 | _GEN_2;	// @[package.scala:254:43]
  wire        _GEN_16 = _GEN_5 | _GEN_3;	// @[package.scala:254:43]
  wire        _GEN_17 = _GEN_6 | _GEN_4;	// @[package.scala:254:43]
  wire        _GEN_18 = _GEN_10[7] | _readys_filter_T_1[11];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_19 = _GEN_10[6] | _GEN[10];	// @[package.scala:254:43]
  wire        _GEN_20 = _GEN_10[5] | _GEN_9;	// @[package.scala:254:43]
  wire [4:0]  _GEN_21 = _GEN_10[4:0] | _GEN_10[8:4];	// @[package.scala:254:43]
  wire        _GEN_22 = _GEN_11 | _GEN_10[3];	// @[package.scala:254:43]
  wire        _GEN_23 = _GEN_12 | _GEN_10[2];	// @[package.scala:254:43]
  wire        _GEN_24 = _GEN_13 | _GEN_10[1];	// @[package.scala:254:43]
  wire [11:0] readys_readys = ~({readys_mask[11], _readys_filter_T_1[11] | readys_mask[10], _GEN[10] | readys_mask[9], _GEN_9 | readys_mask[8], _GEN_10[8] | readys_mask[7], _GEN_18 | readys_mask[6], _GEN_19 | readys_mask[5], _GEN_20 | readys_mask[4], _GEN_21[4] | readys_mask[3], _GEN_21[3] | _readys_filter_T_1[11] | readys_mask[2], _GEN_21[2] | _GEN[10] | readys_mask[1], _GEN_21[1] | _GEN_9 | readys_mask[0]} & {_GEN_21[0] | _GEN_10[8], _GEN_22 | _GEN_18, _GEN_23 | _GEN_19, _GEN_24 | _GEN_20, _GEN_14 | _GEN_10[0] | _GEN_21[4], _GEN_15 | _GEN_11 | _GEN_21[3], _GEN_16 | _GEN_12 | _GEN_21[2], _GEN_17 | _GEN_13 | _GEN_21[1], _GEN_7 | _GEN_5 | _GEN_14 | _GEN_21[0], _GEN_8 | _GEN_6 | _GEN_15 | _GEN_22, portsAOI_filtered_2_0_earlyValid | portsAOI_filtered_3_0_earlyValid | _GEN_7 | _GEN_16 | _GEN_23, portsAOI_filtered_1_0_earlyValid | portsAOI_filtered_2_0_earlyValid | _GEN_8 | _GEN_17 | _GEN_24});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:431:50, package.scala:254:43]
  wire        earlyWinner_0 = readys_readys[0] & portsAOI_filtered_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1 = readys_readys[1] & portsAOI_filtered_1_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_2 = readys_readys[2] & portsAOI_filtered_2_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_3 = readys_readys[3] & portsAOI_filtered_3_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_4 = readys_readys[4] & portsAOI_filtered_4_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_5 = readys_readys[5] & portsAOI_filtered_5_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_6 = readys_readys[6] & portsAOI_filtered_6_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_7 = readys_readys[7] & portsAOI_filtered_7_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_8 = readys_readys[8] & portsAOI_filtered_8_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_9 = readys_readys[9] & portsAOI_filtered_9_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_10 = readys_readys[10] & portsAOI_filtered_10_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_11 = readys_readys[11] & portsAOI_filtered_11_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        _out_0_a_earlyValid_T = portsAOI_filtered_0_earlyValid | portsAOI_filtered_1_0_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:431:50]
  reg         state_0;	// @[Arbiter.scala:117:26]
  reg         state_1;	// @[Arbiter.scala:117:26]
  reg         state_2;	// @[Arbiter.scala:117:26]
  reg         state_3;	// @[Arbiter.scala:117:26]
  reg         state_4;	// @[Arbiter.scala:117:26]
  reg         state_5;	// @[Arbiter.scala:117:26]
  reg         state_6;	// @[Arbiter.scala:117:26]
  reg         state_7;	// @[Arbiter.scala:117:26]
  reg         state_8;	// @[Arbiter.scala:117:26]
  reg         state_9;	// @[Arbiter.scala:117:26]
  reg         state_10;	// @[Arbiter.scala:117:26]
  reg         state_11;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_0 = idle ? earlyWinner_0 : state_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1 = idle ? earlyWinner_1 : state_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2 = idle ? earlyWinner_2 : state_2;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_3 = idle ? earlyWinner_3 : state_3;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_4 = idle ? earlyWinner_4 : state_4;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_5 = idle ? earlyWinner_5 : state_5;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_6 = idle ? earlyWinner_6 : state_6;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_7 = idle ? earlyWinner_7 : state_7;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_8 = idle ? earlyWinner_8 : state_8;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_9 = idle ? earlyWinner_9 : state_9;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_10 = idle ? earlyWinner_10 : state_10;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_11 = idle ? earlyWinner_11 : state_11;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_0 = idle ? readys_readys[0] : state_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1 = idle ? readys_readys[1] : state_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_2 = idle ? readys_readys[2] : state_2;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_3 = idle ? readys_readys[3] : state_3;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_4 = idle ? readys_readys[4] : state_4;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_5 = idle ? readys_readys[5] : state_5;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_6 = idle ? readys_readys[6] : state_6;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_7 = idle ? readys_readys[7] : state_7;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_8 = idle ? readys_readys[8] : state_8;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_9 = idle ? readys_readys[9] : state_9;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_10 = idle ? readys_readys[10] : state_10;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_11 = idle ? readys_readys[11] : state_11;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        x1_out_1_valid = idle ? _out_0_a_earlyValid_T | portsAOI_filtered_2_0_earlyValid | portsAOI_filtered_3_0_earlyValid | portsAOI_filtered_4_0_earlyValid | portsAOI_filtered_5_0_earlyValid | portsAOI_filtered_6_0_earlyValid | portsAOI_filtered_7_0_earlyValid | portsAOI_filtered_8_0_earlyValid | portsAOI_filtered_9_0_earlyValid | portsAOI_filtered_10_0_earlyValid | portsAOI_filtered_11_0_earlyValid : state_0 & portsAOI_filtered_0_earlyValid | state_1 & portsAOI_filtered_1_0_earlyValid | state_2 & portsAOI_filtered_2_0_earlyValid | state_3 & portsAOI_filtered_3_0_earlyValid | state_4 & portsAOI_filtered_4_0_earlyValid | state_5 & portsAOI_filtered_5_0_earlyValid | state_6 & portsAOI_filtered_6_0_earlyValid | state_7 & portsAOI_filtered_7_0_earlyValid | state_8 & portsAOI_filtered_8_0_earlyValid | state_9 & portsAOI_filtered_9_0_earlyValid | state_10 & portsAOI_filtered_10_0_earlyValid | state_11 & portsAOI_filtered_11_0_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73, Xbar.scala:431:50]
  reg  [7:0]  beatsLeft_1;	// @[Arbiter.scala:88:30]
  wire        idle_1 = beatsLeft_1 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [11:0] readys_valid_1 = {portsAOI_filtered_11_1_earlyValid, portsAOI_filtered_10_1_earlyValid, portsAOI_filtered_9_1_earlyValid, portsAOI_filtered_8_1_earlyValid, portsAOI_filtered_7_1_earlyValid, portsAOI_filtered_6_1_earlyValid, portsAOI_filtered_5_1_earlyValid, portsAOI_filtered_4_1_earlyValid, portsAOI_filtered_3_1_earlyValid, portsAOI_filtered_2_1_earlyValid, portsAOI_filtered_1_1_earlyValid, portsAOI_filtered_1_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:431:50]
  reg  [11:0] readys_mask_1;	// @[Arbiter.scala:24:23]
  wire [11:0] _readys_filter_T_3 = readys_valid_1 & ~readys_mask_1;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [10:0] _GEN_25 = _readys_filter_T_3[10:0] | _readys_filter_T_3[11:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_26 = portsAOI_filtered_11_1_earlyValid | _readys_filter_T_3[0];	// @[Arbiter.scala:25:28, Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_27 = portsAOI_filtered_10_1_earlyValid | portsAOI_filtered_11_1_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_28 = portsAOI_filtered_9_1_earlyValid | portsAOI_filtered_10_1_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_29 = portsAOI_filtered_8_1_earlyValid | portsAOI_filtered_9_1_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_30 = portsAOI_filtered_7_1_earlyValid | portsAOI_filtered_8_1_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_31 = portsAOI_filtered_6_1_earlyValid | portsAOI_filtered_7_1_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_32 = portsAOI_filtered_5_1_earlyValid | portsAOI_filtered_6_1_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_33 = portsAOI_filtered_4_1_earlyValid | portsAOI_filtered_5_1_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_34 = portsAOI_filtered_3_1_earlyValid | portsAOI_filtered_4_1_earlyValid;	// @[Xbar.scala:431:50, package.scala:254:43]
  wire        _GEN_35 = _GEN_25[9] | _readys_filter_T_3[11];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [8:0]  _GEN_36 = _GEN_25[8:0] | _GEN_25[10:2];	// @[package.scala:254:43]
  wire        _GEN_37 = _GEN_26 | _GEN_25[1];	// @[package.scala:254:43]
  wire        _GEN_38 = _GEN_27 | _GEN_25[0];	// @[package.scala:254:43]
  wire        _GEN_39 = _GEN_28 | _GEN_26;	// @[package.scala:254:43]
  wire        _GEN_40 = _GEN_29 | _GEN_27;	// @[package.scala:254:43]
  wire        _GEN_41 = _GEN_30 | _GEN_28;	// @[package.scala:254:43]
  wire        _GEN_42 = _GEN_31 | _GEN_29;	// @[package.scala:254:43]
  wire        _GEN_43 = _GEN_32 | _GEN_30;	// @[package.scala:254:43]
  wire        _GEN_44 = _GEN_36[7] | _readys_filter_T_3[11];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_45 = _GEN_36[6] | _GEN_25[10];	// @[package.scala:254:43]
  wire        _GEN_46 = _GEN_36[5] | _GEN_35;	// @[package.scala:254:43]
  wire [4:0]  _GEN_47 = _GEN_36[4:0] | _GEN_36[8:4];	// @[package.scala:254:43]
  wire        _GEN_48 = _GEN_37 | _GEN_36[3];	// @[package.scala:254:43]
  wire        _GEN_49 = _GEN_38 | _GEN_36[2];	// @[package.scala:254:43]
  wire        _GEN_50 = _GEN_39 | _GEN_36[1];	// @[package.scala:254:43]
  wire [11:0] readys_readys_1 = ~({readys_mask_1[11], _readys_filter_T_3[11] | readys_mask_1[10], _GEN_25[10] | readys_mask_1[9], _GEN_35 | readys_mask_1[8], _GEN_36[8] | readys_mask_1[7], _GEN_44 | readys_mask_1[6], _GEN_45 | readys_mask_1[5], _GEN_46 | readys_mask_1[4], _GEN_47[4] | readys_mask_1[3], _GEN_47[3] | _readys_filter_T_3[11] | readys_mask_1[2], _GEN_47[2] | _GEN_25[10] | readys_mask_1[1], _GEN_47[1] | _GEN_35 | readys_mask_1[0]} & {_GEN_47[0] | _GEN_36[8], _GEN_48 | _GEN_44, _GEN_49 | _GEN_45, _GEN_50 | _GEN_46, _GEN_40 | _GEN_36[0] | _GEN_47[4], _GEN_41 | _GEN_37 | _GEN_47[3], _GEN_42 | _GEN_38 | _GEN_47[2], _GEN_43 | _GEN_39 | _GEN_47[1], _GEN_33 | _GEN_31 | _GEN_40 | _GEN_47[0], _GEN_34 | _GEN_32 | _GEN_41 | _GEN_48, portsAOI_filtered_2_1_earlyValid | portsAOI_filtered_3_1_earlyValid | _GEN_33 | _GEN_42 | _GEN_49, portsAOI_filtered_1_1_earlyValid | portsAOI_filtered_2_1_earlyValid | _GEN_34 | _GEN_43 | _GEN_50});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:431:50, package.scala:254:43]
  wire        earlyWinner_1_0 = readys_readys_1[0] & portsAOI_filtered_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_1 = readys_readys_1[1] & portsAOI_filtered_1_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_2 = readys_readys_1[2] & portsAOI_filtered_2_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_3 = readys_readys_1[3] & portsAOI_filtered_3_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_4 = readys_readys_1[4] & portsAOI_filtered_4_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_5 = readys_readys_1[5] & portsAOI_filtered_5_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_6 = readys_readys_1[6] & portsAOI_filtered_6_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_7 = readys_readys_1[7] & portsAOI_filtered_7_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_8 = readys_readys_1[8] & portsAOI_filtered_8_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_9 = readys_readys_1[9] & portsAOI_filtered_9_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_10 = readys_readys_1[10] & portsAOI_filtered_10_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        earlyWinner_1_11 = readys_readys_1[11] & portsAOI_filtered_11_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:431:50]
  wire        _out_1_a_earlyValid_T = portsAOI_filtered_1_earlyValid | portsAOI_filtered_1_1_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:431:50]
  reg         state_1_0;	// @[Arbiter.scala:117:26]
  reg         state_1_1;	// @[Arbiter.scala:117:26]
  reg         state_1_2;	// @[Arbiter.scala:117:26]
  reg         state_1_3;	// @[Arbiter.scala:117:26]
  reg         state_1_4;	// @[Arbiter.scala:117:26]
  reg         state_1_5;	// @[Arbiter.scala:117:26]
  reg         state_1_6;	// @[Arbiter.scala:117:26]
  reg         state_1_7;	// @[Arbiter.scala:117:26]
  reg         state_1_8;	// @[Arbiter.scala:117:26]
  reg         state_1_9;	// @[Arbiter.scala:117:26]
  reg         state_1_10;	// @[Arbiter.scala:117:26]
  reg         state_1_11;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_1_0 = idle_1 ? earlyWinner_1_0 : state_1_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_1 = idle_1 ? earlyWinner_1_1 : state_1_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_2 = idle_1 ? earlyWinner_1_2 : state_1_2;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_3 = idle_1 ? earlyWinner_1_3 : state_1_3;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_4 = idle_1 ? earlyWinner_1_4 : state_1_4;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_5 = idle_1 ? earlyWinner_1_5 : state_1_5;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_6 = idle_1 ? earlyWinner_1_6 : state_1_6;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_7 = idle_1 ? earlyWinner_1_7 : state_1_7;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_8 = idle_1 ? earlyWinner_1_8 : state_1_8;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_9 = idle_1 ? earlyWinner_1_9 : state_1_9;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_10 = idle_1 ? earlyWinner_1_10 : state_1_10;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_1_11 = idle_1 ? earlyWinner_1_11 : state_1_11;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_1_0 = idle_1 ? readys_readys_1[0] : state_1_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_1 = idle_1 ? readys_readys_1[1] : state_1_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_2 = idle_1 ? readys_readys_1[2] : state_1_2;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_3 = idle_1 ? readys_readys_1[3] : state_1_3;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_4 = idle_1 ? readys_readys_1[4] : state_1_4;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_5 = idle_1 ? readys_readys_1[5] : state_1_5;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_6 = idle_1 ? readys_readys_1[6] : state_1_6;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_7 = idle_1 ? readys_readys_1[7] : state_1_7;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_8 = idle_1 ? readys_readys_1[8] : state_1_8;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_9 = idle_1 ? readys_readys_1[9] : state_1_9;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_10 = idle_1 ? readys_readys_1[10] : state_1_10;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_1_11 = idle_1 ? readys_readys_1[11] : state_1_11;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        bundleOut_1_out_1_valid = idle_1 ? _out_1_a_earlyValid_T | portsAOI_filtered_2_1_earlyValid | portsAOI_filtered_3_1_earlyValid | portsAOI_filtered_4_1_earlyValid | portsAOI_filtered_5_1_earlyValid | portsAOI_filtered_6_1_earlyValid | portsAOI_filtered_7_1_earlyValid | portsAOI_filtered_8_1_earlyValid | portsAOI_filtered_9_1_earlyValid | portsAOI_filtered_10_1_earlyValid | portsAOI_filtered_11_1_earlyValid : state_1_0 & portsAOI_filtered_1_earlyValid | state_1_1 & portsAOI_filtered_1_1_earlyValid | state_1_2 & portsAOI_filtered_2_1_earlyValid | state_1_3 & portsAOI_filtered_3_1_earlyValid | state_1_4 & portsAOI_filtered_4_1_earlyValid | state_1_5 & portsAOI_filtered_5_1_earlyValid | state_1_6 & portsAOI_filtered_6_1_earlyValid | state_1_7 & portsAOI_filtered_7_1_earlyValid | state_1_8 & portsAOI_filtered_8_1_earlyValid | state_1_9 & portsAOI_filtered_9_1_earlyValid | state_1_10 & portsAOI_filtered_10_1_earlyValid | state_1_11 & portsAOI_filtered_11_1_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73, Xbar.scala:431:50]
  reg  [7:0]  beatsLeft_2;	// @[Arbiter.scala:88:30]
  wire        idle_2 = beatsLeft_2 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [10:0] readys_valid_2 = {auto_in_11_c_valid, auto_in_10_c_valid, auto_in_9_c_valid, auto_in_8_c_valid, auto_in_7_c_valid, auto_in_6_c_valid, auto_in_5_c_valid, auto_in_4_c_valid, auto_in_3_c_valid, auto_in_2_c_valid, auto_in_1_c_valid};	// @[Cat.scala:33:92]
  reg  [10:0] readys_mask_2;	// @[Arbiter.scala:24:23]
  wire [10:0] _readys_filter_T_5 = readys_valid_2 & ~readys_mask_2;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [9:0]  _GEN_51 = _readys_filter_T_5[9:0] | _readys_filter_T_5[10:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_52 = auto_in_11_c_valid | _readys_filter_T_5[0];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_53 = auto_in_10_c_valid | auto_in_11_c_valid;	// @[package.scala:254:43]
  wire        _GEN_54 = auto_in_9_c_valid | auto_in_10_c_valid;	// @[package.scala:254:43]
  wire        _GEN_55 = auto_in_8_c_valid | auto_in_9_c_valid;	// @[package.scala:254:43]
  wire        _GEN_56 = auto_in_7_c_valid | auto_in_8_c_valid;	// @[package.scala:254:43]
  wire        _GEN_57 = auto_in_6_c_valid | auto_in_7_c_valid;	// @[package.scala:254:43]
  wire        _GEN_58 = auto_in_5_c_valid | auto_in_6_c_valid;	// @[package.scala:254:43]
  wire        _GEN_59 = auto_in_4_c_valid | auto_in_5_c_valid;	// @[package.scala:254:43]
  wire        _GEN_60 = _GEN_51[8] | _readys_filter_T_5[10];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [7:0]  _GEN_61 = _GEN_51[7:0] | _GEN_51[9:2];	// @[package.scala:254:43]
  wire        _GEN_62 = _GEN_52 | _GEN_51[1];	// @[package.scala:254:43]
  wire        _GEN_63 = _GEN_53 | _GEN_51[0];	// @[package.scala:254:43]
  wire        _GEN_64 = _GEN_54 | _GEN_52;	// @[package.scala:254:43]
  wire        _GEN_65 = _GEN_55 | _GEN_53;	// @[package.scala:254:43]
  wire        _GEN_66 = _GEN_56 | _GEN_54;	// @[package.scala:254:43]
  wire        _GEN_67 = _GEN_57 | _GEN_55;	// @[package.scala:254:43]
  wire        _GEN_68 = _GEN_61[6] | _readys_filter_T_5[10];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_69 = _GEN_61[5] | _GEN_51[9];	// @[package.scala:254:43]
  wire        _GEN_70 = _GEN_61[4] | _GEN_60;	// @[package.scala:254:43]
  wire [3:0]  _GEN_71 = _GEN_61[3:0] | _GEN_61[7:4];	// @[package.scala:254:43]
  wire        _GEN_72 = _GEN_62 | _GEN_61[3];	// @[package.scala:254:43]
  wire        _GEN_73 = _GEN_63 | _GEN_61[2];	// @[package.scala:254:43]
  wire [10:0] readys_readys_2 = ~({readys_mask_2[10], _readys_filter_T_5[10] | readys_mask_2[9], _GEN_51[9] | readys_mask_2[8], _GEN_60 | readys_mask_2[7], _GEN_61[7] | readys_mask_2[6], _GEN_68 | readys_mask_2[5], _GEN_69 | readys_mask_2[4], _GEN_70 | readys_mask_2[3], _GEN_71[3] | readys_mask_2[2], _GEN_71[2] | _readys_filter_T_5[10] | readys_mask_2[1], _GEN_71[1] | _GEN_51[9] | readys_mask_2[0]} & {_GEN_71[0] | _GEN_60, _GEN_72 | _GEN_61[7], _GEN_73 | _GEN_68, _GEN_64 | _GEN_61[1] | _GEN_69, _GEN_65 | _GEN_61[0] | _GEN_70, _GEN_66 | _GEN_62 | _GEN_71[3], _GEN_67 | _GEN_63 | _GEN_71[2], _GEN_58 | _GEN_56 | _GEN_64 | _GEN_71[1], _GEN_59 | _GEN_57 | _GEN_65 | _GEN_71[0], auto_in_3_c_valid | auto_in_4_c_valid | _GEN_58 | _GEN_66 | _GEN_72, auto_in_2_c_valid | auto_in_3_c_valid | _GEN_59 | _GEN_67 | _GEN_73});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, package.scala:254:43]
  wire        earlyWinner_2_0 = readys_readys_2[0] & auto_in_1_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_2_1 = readys_readys_2[1] & auto_in_2_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_2_2 = readys_readys_2[2] & auto_in_3_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_2_3 = readys_readys_2[3] & auto_in_4_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_2_4 = readys_readys_2[4] & auto_in_5_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_2_5 = readys_readys_2[5] & auto_in_6_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_2_6 = readys_readys_2[6] & auto_in_7_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_2_7 = readys_readys_2[7] & auto_in_8_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_2_8 = readys_readys_2[8] & auto_in_9_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_2_9 = readys_readys_2[9] & auto_in_10_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_2_10 = readys_readys_2[10] & auto_in_11_c_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        _sink_ACancel_earlyValid_T = auto_in_1_c_valid | auto_in_2_c_valid;	// @[Arbiter.scala:108:36]
  reg         state_2_0;	// @[Arbiter.scala:117:26]
  reg         state_2_1;	// @[Arbiter.scala:117:26]
  reg         state_2_2;	// @[Arbiter.scala:117:26]
  reg         state_2_3;	// @[Arbiter.scala:117:26]
  reg         state_2_4;	// @[Arbiter.scala:117:26]
  reg         state_2_5;	// @[Arbiter.scala:117:26]
  reg         state_2_6;	// @[Arbiter.scala:117:26]
  reg         state_2_7;	// @[Arbiter.scala:117:26]
  reg         state_2_8;	// @[Arbiter.scala:117:26]
  reg         state_2_9;	// @[Arbiter.scala:117:26]
  reg         state_2_10;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_2_0 = idle_2 ? earlyWinner_2_0 : state_2_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2_1 = idle_2 ? earlyWinner_2_1 : state_2_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2_2 = idle_2 ? earlyWinner_2_2 : state_2_2;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2_3 = idle_2 ? earlyWinner_2_3 : state_2_3;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2_4 = idle_2 ? earlyWinner_2_4 : state_2_4;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2_5 = idle_2 ? earlyWinner_2_5 : state_2_5;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2_6 = idle_2 ? earlyWinner_2_6 : state_2_6;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2_7 = idle_2 ? earlyWinner_2_7 : state_2_7;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2_8 = idle_2 ? earlyWinner_2_8 : state_2_8;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2_9 = idle_2 ? earlyWinner_2_9 : state_2_9;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_2_10 = idle_2 ? earlyWinner_2_10 : state_2_10;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        out_15_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[0] : state_2_0);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        out_16_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[1] : state_2_1);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        out_17_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[2] : state_2_2);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        out_18_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[3] : state_2_3);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        out_19_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[4] : state_2_4);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        out_20_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[5] : state_2_5);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        out_21_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[6] : state_2_6);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        out_22_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[7] : state_2_7);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        out_23_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[8] : state_2_8);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        out_24_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[9] : state_2_9);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        out_25_ready = auto_out_1_c_ready & (idle_2 ? readys_readys_2[10] : state_2_10);	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24, :124:31]
  wire        bundleOut_1_out_c_valid = idle_2 ? _sink_ACancel_earlyValid_T | auto_in_3_c_valid | auto_in_4_c_valid | auto_in_5_c_valid | auto_in_6_c_valid | auto_in_7_c_valid | auto_in_8_c_valid | auto_in_9_c_valid | auto_in_10_c_valid | auto_in_11_c_valid : state_2_0 & auto_in_1_c_valid | state_2_1 & auto_in_2_c_valid | state_2_2 & auto_in_3_c_valid | state_2_3 & auto_in_4_c_valid | state_2_4 & auto_in_5_c_valid | state_2_5 & auto_in_6_c_valid | state_2_6 & auto_in_7_c_valid | state_2_7 & auto_in_8_c_valid | state_2_8 & auto_in_9_c_valid | state_2_9 & auto_in_10_c_valid | state_2_10 & auto_in_11_c_valid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73]
  reg         beatsLeft_3;	// @[Arbiter.scala:88:30]
  wire [10:0] readys_valid_3 = {auto_in_11_e_valid, auto_in_10_e_valid, auto_in_9_e_valid, auto_in_8_e_valid, auto_in_7_e_valid, auto_in_6_e_valid, auto_in_5_e_valid, auto_in_4_e_valid, auto_in_3_e_valid, auto_in_2_e_valid, auto_in_1_e_valid};	// @[Cat.scala:33:92]
  reg  [10:0] readys_mask_3;	// @[Arbiter.scala:24:23]
  wire [10:0] _readys_filter_T_7 = readys_valid_3 & ~readys_mask_3;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [9:0]  _GEN_74 = _readys_filter_T_7[9:0] | _readys_filter_T_7[10:1];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_75 = auto_in_11_e_valid | _readys_filter_T_7[0];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_76 = auto_in_10_e_valid | auto_in_11_e_valid;	// @[package.scala:254:43]
  wire        _GEN_77 = auto_in_9_e_valid | auto_in_10_e_valid;	// @[package.scala:254:43]
  wire        _GEN_78 = auto_in_8_e_valid | auto_in_9_e_valid;	// @[package.scala:254:43]
  wire        _GEN_79 = auto_in_7_e_valid | auto_in_8_e_valid;	// @[package.scala:254:43]
  wire        _GEN_80 = auto_in_6_e_valid | auto_in_7_e_valid;	// @[package.scala:254:43]
  wire        _GEN_81 = auto_in_5_e_valid | auto_in_6_e_valid;	// @[package.scala:254:43]
  wire        _GEN_82 = auto_in_4_e_valid | auto_in_5_e_valid;	// @[package.scala:254:43]
  wire        _GEN_83 = _GEN_74[8] | _readys_filter_T_7[10];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire [7:0]  _GEN_84 = _GEN_74[7:0] | _GEN_74[9:2];	// @[package.scala:254:43]
  wire        _GEN_85 = _GEN_75 | _GEN_74[1];	// @[package.scala:254:43]
  wire        _GEN_86 = _GEN_76 | _GEN_74[0];	// @[package.scala:254:43]
  wire        _GEN_87 = _GEN_77 | _GEN_75;	// @[package.scala:254:43]
  wire        _GEN_88 = _GEN_78 | _GEN_76;	// @[package.scala:254:43]
  wire        _GEN_89 = _GEN_79 | _GEN_77;	// @[package.scala:254:43]
  wire        _GEN_90 = _GEN_80 | _GEN_78;	// @[package.scala:254:43]
  wire        _GEN_91 = _GEN_84[6] | _readys_filter_T_7[10];	// @[Arbiter.scala:25:28, package.scala:254:43]
  wire        _GEN_92 = _GEN_84[5] | _GEN_74[9];	// @[package.scala:254:43]
  wire        _GEN_93 = _GEN_84[4] | _GEN_83;	// @[package.scala:254:43]
  wire [3:0]  _GEN_94 = _GEN_84[3:0] | _GEN_84[7:4];	// @[package.scala:254:43]
  wire        _GEN_95 = _GEN_85 | _GEN_84[3];	// @[package.scala:254:43]
  wire        _GEN_96 = _GEN_86 | _GEN_84[2];	// @[package.scala:254:43]
  wire [10:0] readys_readys_3 = ~({readys_mask_3[10], _readys_filter_T_7[10] | readys_mask_3[9], _GEN_74[9] | readys_mask_3[8], _GEN_83 | readys_mask_3[7], _GEN_84[7] | readys_mask_3[6], _GEN_91 | readys_mask_3[5], _GEN_92 | readys_mask_3[4], _GEN_93 | readys_mask_3[3], _GEN_94[3] | readys_mask_3[2], _GEN_94[2] | _readys_filter_T_7[10] | readys_mask_3[1], _GEN_94[1] | _GEN_74[9] | readys_mask_3[0]} & {_GEN_94[0] | _GEN_83, _GEN_95 | _GEN_84[7], _GEN_96 | _GEN_91, _GEN_87 | _GEN_84[1] | _GEN_92, _GEN_88 | _GEN_84[0] | _GEN_93, _GEN_89 | _GEN_85 | _GEN_94[3], _GEN_90 | _GEN_86 | _GEN_94[2], _GEN_81 | _GEN_79 | _GEN_87 | _GEN_94[1], _GEN_82 | _GEN_80 | _GEN_88 | _GEN_94[0], auto_in_3_e_valid | auto_in_4_e_valid | _GEN_81 | _GEN_89 | _GEN_95, auto_in_2_e_valid | auto_in_3_e_valid | _GEN_82 | _GEN_90 | _GEN_96});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, package.scala:254:43]
  wire        earlyWinner_3_0 = readys_readys_3[0] & auto_in_1_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_3_1 = readys_readys_3[1] & auto_in_2_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_3_2 = readys_readys_3[2] & auto_in_3_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_3_3 = readys_readys_3[3] & auto_in_4_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_3_4 = readys_readys_3[4] & auto_in_5_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_3_5 = readys_readys_3[5] & auto_in_6_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_3_6 = readys_readys_3[6] & auto_in_7_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_3_7 = readys_readys_3[7] & auto_in_8_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_3_8 = readys_readys_3[8] & auto_in_9_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_3_9 = readys_readys_3[9] & auto_in_10_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        earlyWinner_3_10 = readys_readys_3[10] & auto_in_11_e_valid;	// @[Arbiter.scala:27:18, :96:86, :98:79]
  wire        _sink_ACancel_earlyValid_T_32 = auto_in_1_e_valid | auto_in_2_e_valid;	// @[Arbiter.scala:108:36]
  reg         state_3_0;	// @[Arbiter.scala:117:26]
  reg         state_3_1;	// @[Arbiter.scala:117:26]
  reg         state_3_2;	// @[Arbiter.scala:117:26]
  reg         state_3_3;	// @[Arbiter.scala:117:26]
  reg         state_3_4;	// @[Arbiter.scala:117:26]
  reg         state_3_5;	// @[Arbiter.scala:117:26]
  reg         state_3_6;	// @[Arbiter.scala:117:26]
  reg         state_3_7;	// @[Arbiter.scala:117:26]
  reg         state_3_8;	// @[Arbiter.scala:117:26]
  reg         state_3_9;	// @[Arbiter.scala:117:26]
  reg         state_3_10;	// @[Arbiter.scala:117:26]
  wire        out_27_ready = beatsLeft_3 ? state_3_0 : readys_readys_3[0];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        out_28_ready = beatsLeft_3 ? state_3_1 : readys_readys_3[1];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        out_29_ready = beatsLeft_3 ? state_3_2 : readys_readys_3[2];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        out_30_ready = beatsLeft_3 ? state_3_3 : readys_readys_3[3];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        out_31_ready = beatsLeft_3 ? state_3_4 : readys_readys_3[4];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        out_32_ready = beatsLeft_3 ? state_3_5 : readys_readys_3[5];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        out_33_ready = beatsLeft_3 ? state_3_6 : readys_readys_3[6];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        out_34_ready = beatsLeft_3 ? state_3_7 : readys_readys_3[7];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        out_35_ready = beatsLeft_3 ? state_3_8 : readys_readys_3[8];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        out_36_ready = beatsLeft_3 ? state_3_9 : readys_readys_3[9];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        out_37_ready = beatsLeft_3 ? state_3_10 : readys_readys_3[10];	// @[Arbiter.scala:27:18, :88:30, :96:86, :117:26, :122:24]
  wire        bundleOut_1_out_e_valid = beatsLeft_3 ? state_3_0 & auto_in_1_e_valid | state_3_1 & auto_in_2_e_valid | state_3_2 & auto_in_3_e_valid | state_3_3 & auto_in_4_e_valid | state_3_4 & auto_in_5_e_valid | state_3_5 & auto_in_6_e_valid | state_3_6 & auto_in_7_e_valid | state_3_7 & auto_in_8_e_valid | state_3_8 & auto_in_9_e_valid | state_3_9 & auto_in_10_e_valid | state_3_10 & auto_in_11_e_valid : _sink_ACancel_earlyValid_T_32 | auto_in_3_e_valid | auto_in_4_e_valid | auto_in_5_e_valid | auto_in_6_e_valid | auto_in_7_e_valid | auto_in_8_e_valid | auto_in_9_e_valid | auto_in_10_e_valid | auto_in_11_e_valid;	// @[Arbiter.scala:88:30, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73]
  reg  [7:0]  beatsLeft_4;	// @[Arbiter.scala:88:30]
  wire        idle_4 = beatsLeft_4 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [1:0]  readys_valid_4 = {out_41_earlyValid, out_40_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [1:0]  readys_mask_4;	// @[Arbiter.scala:24:23]
  wire [1:0]  _readys_filter_T_9 = readys_valid_4 & ~readys_mask_4;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  readys_readys_4 = ~({readys_mask_4[1], _readys_filter_T_9[1] | readys_mask_4[0]} & {|_readys_filter_T_9, out_41_earlyValid | _readys_filter_T_9[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_4_0 = readys_readys_4[0] & out_40_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_4_1 = readys_readys_4[1] & out_41_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_64 = out_40_earlyValid | out_41_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_4_0;	// @[Arbiter.scala:117:26]
  reg         state_4_1;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_4_0 = idle_4 ? earlyWinner_4_0 : state_4_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_4_1 = idle_4 ? earlyWinner_4_1 : state_4_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_4_0 = idle_4 ? readys_readys_4[0] : state_4_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_4_1 = idle_4 ? readys_readys_4[1] : state_4_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_42_valid = idle_4 ? _sink_ACancel_earlyValid_T_64 : state_4_0 & out_40_earlyValid | state_4_1 & out_41_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:29, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_42_bits_corrupt = muxStateEarly_4_0 & auto_out_0_d_bits_corrupt | muxStateEarly_4_1 & auto_out_1_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_42_bits_denied = muxStateEarly_4_0 & auto_out_0_d_bits_denied | muxStateEarly_4_1 & auto_out_1_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_42_bits_sink = (muxStateEarly_4_0 ? out_95_bits_sink : 4'h0) | (muxStateEarly_4_1 ? auto_out_1_d_bits_sink : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [3:0]  out_d_bits_source = (muxStateEarly_4_0 ? auto_out_0_d_bits_source[3:0] : 4'h0) | (muxStateEarly_4_1 ? auto_out_1_d_bits_source[3:0] : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [3:0]  out_42_bits_size = (muxStateEarly_4_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_4_1 ? out_96_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_42_bits_param = (muxStateEarly_4_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_4_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [2:0]  out_42_bits_opcode = (muxStateEarly_4_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_4_1 ? auto_out_1_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [7:0]  beatsLeft_5;	// @[Arbiter.scala:88:30]
  wire        idle_5 = beatsLeft_5 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [1:0]  readys_valid_5 = {out_46_earlyValid, out_45_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [1:0]  readys_mask_5;	// @[Arbiter.scala:24:23]
  wire [1:0]  _readys_filter_T_11 = readys_valid_5 & ~readys_mask_5;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  readys_readys_5 = ~({readys_mask_5[1], _readys_filter_T_11[1] | readys_mask_5[0]} & {|_readys_filter_T_11, out_46_earlyValid | _readys_filter_T_11[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_5_0 = readys_readys_5[0] & out_45_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_5_1 = readys_readys_5[1] & out_46_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_69 = out_45_earlyValid | out_46_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_5_0;	// @[Arbiter.scala:117:26]
  reg         state_5_1;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_5_0 = idle_5 ? earlyWinner_5_0 : state_5_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_5_1 = idle_5 ? earlyWinner_5_1 : state_5_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_5_0 = idle_5 ? readys_readys_5[0] : state_5_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_5_1 = idle_5 ? readys_readys_5[1] : state_5_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_47_valid = idle_5 ? _sink_ACancel_earlyValid_T_69 : state_5_0 & out_45_earlyValid | state_5_1 & out_46_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:29, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_47_bits_corrupt = muxStateEarly_5_0 & auto_out_0_d_bits_corrupt | muxStateEarly_5_1 & auto_out_1_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_47_bits_denied = muxStateEarly_5_0 & auto_out_0_d_bits_denied | muxStateEarly_5_1 & auto_out_1_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_47_bits_sink = (muxStateEarly_5_0 ? out_95_bits_sink : 4'h0) | (muxStateEarly_5_1 ? auto_out_1_d_bits_sink : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [3:0]  out_1_d_bits_source = (muxStateEarly_5_0 ? auto_out_0_d_bits_source[3:0] : 4'h0) | (muxStateEarly_5_1 ? auto_out_1_d_bits_source[3:0] : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [3:0]  out_47_bits_size = (muxStateEarly_5_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_5_1 ? out_96_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_47_bits_param = (muxStateEarly_5_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_5_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [2:0]  out_47_bits_opcode = (muxStateEarly_5_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_5_1 ? auto_out_1_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [7:0]  beatsLeft_6;	// @[Arbiter.scala:88:30]
  wire        idle_6 = beatsLeft_6 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [1:0]  readys_valid_6 = {out_51_earlyValid, out_50_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [1:0]  readys_mask_6;	// @[Arbiter.scala:24:23]
  wire [1:0]  _readys_filter_T_13 = readys_valid_6 & ~readys_mask_6;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  readys_readys_6 = ~({readys_mask_6[1], _readys_filter_T_13[1] | readys_mask_6[0]} & {|_readys_filter_T_13, out_51_earlyValid | _readys_filter_T_13[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_6_0 = readys_readys_6[0] & out_50_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_6_1 = readys_readys_6[1] & out_51_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_74 = out_50_earlyValid | out_51_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_6_0;	// @[Arbiter.scala:117:26]
  reg         state_6_1;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_6_0 = idle_6 ? earlyWinner_6_0 : state_6_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_6_1 = idle_6 ? earlyWinner_6_1 : state_6_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_6_0 = idle_6 ? readys_readys_6[0] : state_6_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_6_1 = idle_6 ? readys_readys_6[1] : state_6_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_52_valid = idle_6 ? _sink_ACancel_earlyValid_T_74 : state_6_0 & out_50_earlyValid | state_6_1 & out_51_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:29, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_52_bits_corrupt = muxStateEarly_6_0 & auto_out_0_d_bits_corrupt | muxStateEarly_6_1 & auto_out_1_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_52_bits_denied = muxStateEarly_6_0 & auto_out_0_d_bits_denied | muxStateEarly_6_1 & auto_out_1_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_52_bits_sink = (muxStateEarly_6_0 ? out_95_bits_sink : 4'h0) | (muxStateEarly_6_1 ? auto_out_1_d_bits_sink : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [3:0]  out_2_d_bits_source = (muxStateEarly_6_0 ? auto_out_0_d_bits_source[3:0] : 4'h0) | (muxStateEarly_6_1 ? auto_out_1_d_bits_source[3:0] : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [3:0]  out_52_bits_size = (muxStateEarly_6_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_6_1 ? out_96_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_52_bits_param = (muxStateEarly_6_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_6_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [2:0]  out_52_bits_opcode = (muxStateEarly_6_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_6_1 ? auto_out_1_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [7:0]  beatsLeft_7;	// @[Arbiter.scala:88:30]
  wire        idle_7 = beatsLeft_7 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [1:0]  readys_valid_7 = {out_56_earlyValid, out_55_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [1:0]  readys_mask_7;	// @[Arbiter.scala:24:23]
  wire [1:0]  _readys_filter_T_15 = readys_valid_7 & ~readys_mask_7;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  readys_readys_7 = ~({readys_mask_7[1], _readys_filter_T_15[1] | readys_mask_7[0]} & {|_readys_filter_T_15, out_56_earlyValid | _readys_filter_T_15[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_7_0 = readys_readys_7[0] & out_55_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_7_1 = readys_readys_7[1] & out_56_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_79 = out_55_earlyValid | out_56_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_7_0;	// @[Arbiter.scala:117:26]
  reg         state_7_1;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_7_0 = idle_7 ? earlyWinner_7_0 : state_7_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_7_1 = idle_7 ? earlyWinner_7_1 : state_7_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_7_0 = idle_7 ? readys_readys_7[0] : state_7_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_7_1 = idle_7 ? readys_readys_7[1] : state_7_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_57_valid = idle_7 ? _sink_ACancel_earlyValid_T_79 : state_7_0 & out_55_earlyValid | state_7_1 & out_56_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:29, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_57_bits_corrupt = muxStateEarly_7_0 & auto_out_0_d_bits_corrupt | muxStateEarly_7_1 & auto_out_1_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_57_bits_denied = muxStateEarly_7_0 & auto_out_0_d_bits_denied | muxStateEarly_7_1 & auto_out_1_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_57_bits_sink = (muxStateEarly_7_0 ? out_95_bits_sink : 4'h0) | (muxStateEarly_7_1 ? auto_out_1_d_bits_sink : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [3:0]  out_3_d_bits_source = (muxStateEarly_7_0 ? auto_out_0_d_bits_source[3:0] : 4'h0) | (muxStateEarly_7_1 ? auto_out_1_d_bits_source[3:0] : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [3:0]  out_57_bits_size = (muxStateEarly_7_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_7_1 ? out_96_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_57_bits_param = (muxStateEarly_7_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_7_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [2:0]  out_57_bits_opcode = (muxStateEarly_7_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_7_1 ? auto_out_1_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [7:0]  beatsLeft_8;	// @[Arbiter.scala:88:30]
  wire        idle_8 = beatsLeft_8 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [1:0]  readys_valid_8 = {out_61_earlyValid, out_60_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [1:0]  readys_mask_8;	// @[Arbiter.scala:24:23]
  wire [1:0]  _readys_filter_T_17 = readys_valid_8 & ~readys_mask_8;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  readys_readys_8 = ~({readys_mask_8[1], _readys_filter_T_17[1] | readys_mask_8[0]} & {|_readys_filter_T_17, out_61_earlyValid | _readys_filter_T_17[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_8_0 = readys_readys_8[0] & out_60_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_8_1 = readys_readys_8[1] & out_61_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_84 = out_60_earlyValid | out_61_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_8_0;	// @[Arbiter.scala:117:26]
  reg         state_8_1;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_8_0 = idle_8 ? earlyWinner_8_0 : state_8_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_8_1 = idle_8 ? earlyWinner_8_1 : state_8_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_8_0 = idle_8 ? readys_readys_8[0] : state_8_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_8_1 = idle_8 ? readys_readys_8[1] : state_8_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_62_valid = idle_8 ? _sink_ACancel_earlyValid_T_84 : state_8_0 & out_60_earlyValid | state_8_1 & out_61_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:29, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_62_bits_corrupt = muxStateEarly_8_0 & auto_out_0_d_bits_corrupt | muxStateEarly_8_1 & auto_out_1_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_62_bits_denied = muxStateEarly_8_0 & auto_out_0_d_bits_denied | muxStateEarly_8_1 & auto_out_1_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_62_bits_sink = (muxStateEarly_8_0 ? out_95_bits_sink : 4'h0) | (muxStateEarly_8_1 ? auto_out_1_d_bits_sink : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [2:0]  out_4_d_bits_source = (muxStateEarly_8_0 ? auto_out_0_d_bits_source[2:0] : 3'h0) | (muxStateEarly_8_1 ? auto_out_1_d_bits_source[2:0] : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [3:0]  out_62_bits_size = (muxStateEarly_8_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_8_1 ? out_96_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_62_bits_param = (muxStateEarly_8_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_8_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [2:0]  out_62_bits_opcode = (muxStateEarly_8_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_8_1 ? auto_out_1_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [7:0]  beatsLeft_9;	// @[Arbiter.scala:88:30]
  wire        idle_9 = beatsLeft_9 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [1:0]  readys_valid_9 = {out_66_earlyValid, out_65_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [1:0]  readys_mask_9;	// @[Arbiter.scala:24:23]
  wire [1:0]  _readys_filter_T_19 = readys_valid_9 & ~readys_mask_9;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  readys_readys_9 = ~({readys_mask_9[1], _readys_filter_T_19[1] | readys_mask_9[0]} & {|_readys_filter_T_19, out_66_earlyValid | _readys_filter_T_19[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_9_0 = readys_readys_9[0] & out_65_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_9_1 = readys_readys_9[1] & out_66_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_89 = out_65_earlyValid | out_66_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_9_0;	// @[Arbiter.scala:117:26]
  reg         state_9_1;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_9_0 = idle_9 ? earlyWinner_9_0 : state_9_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_9_1 = idle_9 ? earlyWinner_9_1 : state_9_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_9_0 = idle_9 ? readys_readys_9[0] : state_9_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_9_1 = idle_9 ? readys_readys_9[1] : state_9_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_67_valid = idle_9 ? _sink_ACancel_earlyValid_T_89 : state_9_0 & out_65_earlyValid | state_9_1 & out_66_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:29, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_67_bits_corrupt = muxStateEarly_9_0 & auto_out_0_d_bits_corrupt | muxStateEarly_9_1 & auto_out_1_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_67_bits_denied = muxStateEarly_9_0 & auto_out_0_d_bits_denied | muxStateEarly_9_1 & auto_out_1_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_67_bits_sink = (muxStateEarly_9_0 ? out_95_bits_sink : 4'h0) | (muxStateEarly_9_1 ? auto_out_1_d_bits_sink : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [2:0]  out_5_d_bits_source = (muxStateEarly_9_0 ? auto_out_0_d_bits_source[2:0] : 3'h0) | (muxStateEarly_9_1 ? auto_out_1_d_bits_source[2:0] : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [3:0]  out_67_bits_size = (muxStateEarly_9_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_9_1 ? out_96_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_67_bits_param = (muxStateEarly_9_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_9_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [2:0]  out_67_bits_opcode = (muxStateEarly_9_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_9_1 ? auto_out_1_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [7:0]  beatsLeft_10;	// @[Arbiter.scala:88:30]
  wire        idle_10 = beatsLeft_10 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [1:0]  readys_valid_10 = {out_71_earlyValid, out_70_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [1:0]  readys_mask_10;	// @[Arbiter.scala:24:23]
  wire [1:0]  _readys_filter_T_21 = readys_valid_10 & ~readys_mask_10;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  readys_readys_10 = ~({readys_mask_10[1], _readys_filter_T_21[1] | readys_mask_10[0]} & {|_readys_filter_T_21, out_71_earlyValid | _readys_filter_T_21[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_10_0 = readys_readys_10[0] & out_70_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_10_1 = readys_readys_10[1] & out_71_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_94 = out_70_earlyValid | out_71_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_10_0;	// @[Arbiter.scala:117:26]
  reg         state_10_1;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_10_0 = idle_10 ? earlyWinner_10_0 : state_10_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_10_1 = idle_10 ? earlyWinner_10_1 : state_10_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_10_0 = idle_10 ? readys_readys_10[0] : state_10_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_10_1 = idle_10 ? readys_readys_10[1] : state_10_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_72_valid = idle_10 ? _sink_ACancel_earlyValid_T_94 : state_10_0 & out_70_earlyValid | state_10_1 & out_71_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:29, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_72_bits_corrupt = muxStateEarly_10_0 & auto_out_0_d_bits_corrupt | muxStateEarly_10_1 & auto_out_1_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_72_bits_denied = muxStateEarly_10_0 & auto_out_0_d_bits_denied | muxStateEarly_10_1 & auto_out_1_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_72_bits_sink = (muxStateEarly_10_0 ? out_95_bits_sink : 4'h0) | (muxStateEarly_10_1 ? auto_out_1_d_bits_sink : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [2:0]  out_6_d_bits_source = (muxStateEarly_10_0 ? auto_out_0_d_bits_source[2:0] : 3'h0) | (muxStateEarly_10_1 ? auto_out_1_d_bits_source[2:0] : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [3:0]  out_72_bits_size = (muxStateEarly_10_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_10_1 ? out_96_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_72_bits_param = (muxStateEarly_10_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_10_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [2:0]  out_72_bits_opcode = (muxStateEarly_10_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_10_1 ? auto_out_1_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [7:0]  beatsLeft_11;	// @[Arbiter.scala:88:30]
  wire        idle_11 = beatsLeft_11 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [1:0]  readys_valid_11 = {out_76_earlyValid, out_75_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [1:0]  readys_mask_11;	// @[Arbiter.scala:24:23]
  wire [1:0]  _readys_filter_T_23 = readys_valid_11 & ~readys_mask_11;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  readys_readys_11 = ~({readys_mask_11[1], _readys_filter_T_23[1] | readys_mask_11[0]} & {|_readys_filter_T_23, out_76_earlyValid | _readys_filter_T_23[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_11_0 = readys_readys_11[0] & out_75_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_11_1 = readys_readys_11[1] & out_76_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_99 = out_75_earlyValid | out_76_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_11_0;	// @[Arbiter.scala:117:26]
  reg         state_11_1;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_11_0 = idle_11 ? earlyWinner_11_0 : state_11_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_11_1 = idle_11 ? earlyWinner_11_1 : state_11_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_11_0 = idle_11 ? readys_readys_11[0] : state_11_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_11_1 = idle_11 ? readys_readys_11[1] : state_11_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_77_valid = idle_11 ? _sink_ACancel_earlyValid_T_99 : state_11_0 & out_75_earlyValid | state_11_1 & out_76_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:29, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_77_bits_corrupt = muxStateEarly_11_0 & auto_out_0_d_bits_corrupt | muxStateEarly_11_1 & auto_out_1_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_77_bits_denied = muxStateEarly_11_0 & auto_out_0_d_bits_denied | muxStateEarly_11_1 & auto_out_1_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_77_bits_sink = (muxStateEarly_11_0 ? out_95_bits_sink : 4'h0) | (muxStateEarly_11_1 ? auto_out_1_d_bits_sink : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [2:0]  out_7_d_bits_source = (muxStateEarly_11_0 ? auto_out_0_d_bits_source[2:0] : 3'h0) | (muxStateEarly_11_1 ? auto_out_1_d_bits_source[2:0] : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [3:0]  out_77_bits_size = (muxStateEarly_11_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_11_1 ? out_96_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_77_bits_param = (muxStateEarly_11_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_11_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [2:0]  out_77_bits_opcode = (muxStateEarly_11_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_11_1 ? auto_out_1_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [7:0]  beatsLeft_12;	// @[Arbiter.scala:88:30]
  wire        idle_12 = beatsLeft_12 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [1:0]  readys_valid_12 = {out_81_earlyValid, out_80_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [1:0]  readys_mask_12;	// @[Arbiter.scala:24:23]
  wire [1:0]  _readys_filter_T_25 = readys_valid_12 & ~readys_mask_12;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  readys_readys_12 = ~({readys_mask_12[1], _readys_filter_T_25[1] | readys_mask_12[0]} & {|_readys_filter_T_25, out_81_earlyValid | _readys_filter_T_25[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_12_0 = readys_readys_12[0] & out_80_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_12_1 = readys_readys_12[1] & out_81_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_104 = out_80_earlyValid | out_81_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_12_0;	// @[Arbiter.scala:117:26]
  reg         state_12_1;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_12_0 = idle_12 ? earlyWinner_12_0 : state_12_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_12_1 = idle_12 ? earlyWinner_12_1 : state_12_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_12_0 = idle_12 ? readys_readys_12[0] : state_12_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_12_1 = idle_12 ? readys_readys_12[1] : state_12_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_82_valid = idle_12 ? _sink_ACancel_earlyValid_T_104 : state_12_0 & out_80_earlyValid | state_12_1 & out_81_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:29, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_82_bits_corrupt = muxStateEarly_12_0 & auto_out_0_d_bits_corrupt | muxStateEarly_12_1 & auto_out_1_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_82_bits_denied = muxStateEarly_12_0 & auto_out_0_d_bits_denied | muxStateEarly_12_1 & auto_out_1_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_82_bits_sink = (muxStateEarly_12_0 ? out_95_bits_sink : 4'h0) | (muxStateEarly_12_1 ? auto_out_1_d_bits_sink : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [2:0]  out_8_d_bits_source = (muxStateEarly_12_0 ? auto_out_0_d_bits_source[2:0] : 3'h0) | (muxStateEarly_12_1 ? auto_out_1_d_bits_source[2:0] : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [3:0]  out_82_bits_size = (muxStateEarly_12_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_12_1 ? out_96_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_82_bits_param = (muxStateEarly_12_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_12_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [2:0]  out_82_bits_opcode = (muxStateEarly_12_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_12_1 ? auto_out_1_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [7:0]  beatsLeft_13;	// @[Arbiter.scala:88:30]
  wire        idle_13 = beatsLeft_13 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [1:0]  readys_valid_13 = {out_86_earlyValid, out_85_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [1:0]  readys_mask_13;	// @[Arbiter.scala:24:23]
  wire [1:0]  _readys_filter_T_27 = readys_valid_13 & ~readys_mask_13;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  readys_readys_13 = ~({readys_mask_13[1], _readys_filter_T_27[1] | readys_mask_13[0]} & {|_readys_filter_T_27, out_86_earlyValid | _readys_filter_T_27[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_13_0 = readys_readys_13[0] & out_85_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_13_1 = readys_readys_13[1] & out_86_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_109 = out_85_earlyValid | out_86_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_13_0;	// @[Arbiter.scala:117:26]
  reg         state_13_1;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_13_0 = idle_13 ? earlyWinner_13_0 : state_13_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_13_1 = idle_13 ? earlyWinner_13_1 : state_13_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_13_0 = idle_13 ? readys_readys_13[0] : state_13_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_13_1 = idle_13 ? readys_readys_13[1] : state_13_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_87_valid = idle_13 ? _sink_ACancel_earlyValid_T_109 : state_13_0 & out_85_earlyValid | state_13_1 & out_86_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:29, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_87_bits_corrupt = muxStateEarly_13_0 & auto_out_0_d_bits_corrupt | muxStateEarly_13_1 & auto_out_1_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_87_bits_denied = muxStateEarly_13_0 & auto_out_0_d_bits_denied | muxStateEarly_13_1 & auto_out_1_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_87_bits_sink = (muxStateEarly_13_0 ? out_95_bits_sink : 4'h0) | (muxStateEarly_13_1 ? auto_out_1_d_bits_sink : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [2:0]  out_9_d_bits_source = (muxStateEarly_13_0 ? auto_out_0_d_bits_source[2:0] : 3'h0) | (muxStateEarly_13_1 ? auto_out_1_d_bits_source[2:0] : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [3:0]  out_87_bits_size = (muxStateEarly_13_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_13_1 ? out_96_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_87_bits_param = (muxStateEarly_13_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_13_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [2:0]  out_87_bits_opcode = (muxStateEarly_13_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_13_1 ? auto_out_1_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [7:0]  beatsLeft_14;	// @[Arbiter.scala:88:30]
  wire        idle_14 = beatsLeft_14 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [1:0]  readys_valid_14 = {out_91_earlyValid, out_90_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [1:0]  readys_mask_14;	// @[Arbiter.scala:24:23]
  wire [1:0]  _readys_filter_T_29 = readys_valid_14 & ~readys_mask_14;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  readys_readys_14 = ~({readys_mask_14[1], _readys_filter_T_29[1] | readys_mask_14[0]} & {|_readys_filter_T_29, out_91_earlyValid | _readys_filter_T_29[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_14_0 = readys_readys_14[0] & out_90_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_14_1 = readys_readys_14[1] & out_91_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_114 = out_90_earlyValid | out_91_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_14_0;	// @[Arbiter.scala:117:26]
  reg         state_14_1;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_14_0 = idle_14 ? earlyWinner_14_0 : state_14_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_14_1 = idle_14 ? earlyWinner_14_1 : state_14_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_14_0 = idle_14 ? readys_readys_14[0] : state_14_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_14_1 = idle_14 ? readys_readys_14[1] : state_14_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_92_valid = idle_14 ? _sink_ACancel_earlyValid_T_114 : state_14_0 & out_90_earlyValid | state_14_1 & out_91_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:29, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_92_bits_corrupt = muxStateEarly_14_0 & auto_out_0_d_bits_corrupt | muxStateEarly_14_1 & auto_out_1_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_92_bits_denied = muxStateEarly_14_0 & auto_out_0_d_bits_denied | muxStateEarly_14_1 & auto_out_1_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_92_bits_sink = (muxStateEarly_14_0 ? out_95_bits_sink : 4'h0) | (muxStateEarly_14_1 ? auto_out_1_d_bits_sink : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [2:0]  out_10_d_bits_source = (muxStateEarly_14_0 ? auto_out_0_d_bits_source[2:0] : 3'h0) | (muxStateEarly_14_1 ? auto_out_1_d_bits_source[2:0] : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [3:0]  out_92_bits_size = (muxStateEarly_14_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_14_1 ? out_96_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_92_bits_param = (muxStateEarly_14_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_14_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [2:0]  out_92_bits_opcode = (muxStateEarly_14_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_14_1 ? auto_out_1_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  reg  [7:0]  beatsLeft_15;	// @[Arbiter.scala:88:30]
  wire        idle_15 = beatsLeft_15 == 8'h0;	// @[Arbiter.scala:88:30, :89:28, Edges.scala:221:14]
  wire [1:0]  readys_valid_15 = {out_96_earlyValid, out_95_earlyValid};	// @[Cat.scala:33:92, Xbar.scala:182:40]
  reg  [1:0]  readys_mask_15;	// @[Arbiter.scala:24:23]
  wire [1:0]  _readys_filter_T_31 = readys_valid_15 & ~readys_mask_15;	// @[Arbiter.scala:24:23, :25:{28,30}, Cat.scala:33:92]
  wire [1:0]  readys_readys_15 = ~({readys_mask_15[1], _readys_filter_T_31[1] | readys_mask_15[0]} & {|_readys_filter_T_31, out_96_earlyValid | _readys_filter_T_31[0]});	// @[Arbiter.scala:24:23, :25:28, :26:58, :27:{18,29,39,48}, Xbar.scala:182:40, package.scala:254:43]
  wire        earlyWinner_15_0 = readys_readys_15[0] & out_95_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        earlyWinner_15_1 = readys_readys_15[1] & out_96_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :98:79, Xbar.scala:182:40]
  wire        _sink_ACancel_earlyValid_T_119 = out_95_earlyValid | out_96_earlyValid;	// @[Arbiter.scala:108:36, Xbar.scala:182:40]
  reg         state_15_0;	// @[Arbiter.scala:117:26]
  reg         state_15_1;	// @[Arbiter.scala:117:26]
  wire        muxStateEarly_15_0 = idle_15 ? earlyWinner_15_0 : state_15_0;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire        muxStateEarly_15_1 = idle_15 ? earlyWinner_15_1 : state_15_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  assign allowed_15_0 = idle_15 ? readys_readys_15[0] : state_15_0;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  assign allowed_15_1 = idle_15 ? readys_readys_15[1] : state_15_1;	// @[Arbiter.scala:27:18, :89:28, :96:86, :117:26, :122:24]
  wire        out_97_valid = idle_15 ? _sink_ACancel_earlyValid_T_119 : state_15_0 & out_95_earlyValid | state_15_1 & out_96_earlyValid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:29, Mux.scala:27:73, Xbar.scala:182:40]
  wire        out_97_bits_corrupt = muxStateEarly_15_0 & auto_out_0_d_bits_corrupt | muxStateEarly_15_1 & auto_out_1_d_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire        out_97_bits_denied = muxStateEarly_15_0 & auto_out_0_d_bits_denied | muxStateEarly_15_1 & auto_out_1_d_bits_denied;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  wire [3:0]  out_97_bits_sink = (muxStateEarly_15_0 ? out_95_bits_sink : 4'h0) | (muxStateEarly_15_1 ? auto_out_1_d_bits_sink : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Xbar.scala:326:28]
  wire [2:0]  out_11_d_bits_source = (muxStateEarly_15_0 ? auto_out_0_d_bits_source[2:0] : 3'h0) | (muxStateEarly_15_1 ? auto_out_1_d_bits_source[2:0] : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [3:0]  out_97_bits_size = (muxStateEarly_15_0 ? auto_out_0_d_bits_size : 4'h0) | (muxStateEarly_15_1 ? out_96_bits_size : 4'h0);	// @[Arbiter.scala:118:30, BundleMap.scala:247:19, Bundles.scala:259:74, Mux.scala:27:73]
  wire [1:0]  out_97_bits_param = (muxStateEarly_15_0 ? auto_out_0_d_bits_param : 2'h0) | (muxStateEarly_15_1 ? auto_out_1_d_bits_param : 2'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [2:0]  out_97_bits_opcode = (muxStateEarly_15_0 ? auto_out_0_d_bits_opcode : 3'h0) | (muxStateEarly_15_1 ? auto_out_1_d_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  wire [11:0] _readys_mask_T = readys_readys & readys_valid;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [11:0] _readys_mask_T_3 = _readys_mask_T | {_readys_mask_T[10:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [11:0] _readys_mask_T_6 = _readys_mask_T_3 | {_readys_mask_T_3[9:0], 2'h0};	// @[Bundles.scala:259:74, package.scala:245:{43,53}]
  wire [11:0] _readys_mask_T_9 = _readys_mask_T_6 | {_readys_mask_T_6[7:0], 4'h0};	// @[Bundles.scala:259:74, package.scala:245:{43,53}]
  wire [11:0] _readys_mask_T_14 = readys_readys_1 & readys_valid_1;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [11:0] _readys_mask_T_17 = _readys_mask_T_14 | {_readys_mask_T_14[10:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [11:0] _readys_mask_T_20 = _readys_mask_T_17 | {_readys_mask_T_17[9:0], 2'h0};	// @[Bundles.scala:259:74, package.scala:245:{43,53}]
  wire [11:0] _readys_mask_T_23 = _readys_mask_T_20 | {_readys_mask_T_20[7:0], 4'h0};	// @[Bundles.scala:259:74, package.scala:245:{43,53}]
  wire [26:0] _beatsCI_decode_T_45 = 27'hFFF << auto_in_11_c_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsCI_decode_T_41 = 27'hFFF << auto_in_10_c_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsCI_decode_T_37 = 27'hFFF << auto_in_9_c_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsCI_decode_T_33 = 27'hFFF << auto_in_8_c_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsCI_decode_T_29 = 27'hFFF << auto_in_7_c_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsCI_decode_T_25 = 27'hFFF << auto_in_6_c_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsCI_decode_T_21 = 27'hFFF << auto_in_5_c_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsCI_decode_T_17 = 27'hFFF << auto_in_4_c_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsCI_decode_T_13 = 27'hFFF << auto_in_3_c_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsCI_decode_T_9 = 27'hFFF << auto_in_2_c_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsCI_decode_T_5 = 27'hFFF << auto_in_1_c_bits_size;	// @[package.scala:235:71]
  wire [10:0] _readys_mask_T_28 = readys_readys_2 & readys_valid_2;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [10:0] _readys_mask_T_31 = _readys_mask_T_28 | {_readys_mask_T_28[9:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [10:0] _readys_mask_T_34 = _readys_mask_T_31 | {_readys_mask_T_31[8:0], 2'h0};	// @[Bundles.scala:259:74, package.scala:245:{43,53}]
  wire [10:0] _readys_mask_T_37 = _readys_mask_T_34 | {_readys_mask_T_34[6:0], 4'h0};	// @[Bundles.scala:259:74, package.scala:245:{43,53}]
  wire [10:0] _readys_mask_T_42 = readys_readys_3 & readys_valid_3;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [10:0] _readys_mask_T_45 = _readys_mask_T_42 | {_readys_mask_T_42[9:0], 1'h0};	// @[Arbiter.scala:29:29, package.scala:245:{43,53}]
  wire [10:0] _readys_mask_T_48 = _readys_mask_T_45 | {_readys_mask_T_45[8:0], 2'h0};	// @[Bundles.scala:259:74, package.scala:245:{43,53}]
  wire [10:0] _readys_mask_T_51 = _readys_mask_T_48 | {_readys_mask_T_48[6:0], 4'h0};	// @[Bundles.scala:259:74, package.scala:245:{43,53}]
  wire [1:0]  _readys_mask_T_56 = readys_readys_4 & readys_valid_4;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [1:0]  _readys_mask_T_61 = readys_readys_5 & readys_valid_5;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [1:0]  _readys_mask_T_66 = readys_readys_6 & readys_valid_6;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [1:0]  _readys_mask_T_71 = readys_readys_7 & readys_valid_7;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [1:0]  _readys_mask_T_76 = readys_readys_8 & readys_valid_8;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [1:0]  _readys_mask_T_81 = readys_readys_9 & readys_valid_9;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [1:0]  _readys_mask_T_86 = readys_readys_10 & readys_valid_10;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [1:0]  _readys_mask_T_91 = readys_readys_11 & readys_valid_11;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [1:0]  _readys_mask_T_96 = readys_readys_12 & readys_valid_12;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [1:0]  _readys_mask_T_101 = readys_readys_13 & readys_valid_13;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [1:0]  _readys_mask_T_106 = readys_readys_14 & readys_valid_14;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [1:0]  _readys_mask_T_111 = readys_readys_15 & readys_valid_15;	// @[Arbiter.scala:27:18, :29:29, Cat.scala:33:92]
  wire [26:0] _beatsAI_decode_T_1 = 27'hFFF << auto_in_0_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_5 = 27'hFFF << auto_in_1_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_9 = 27'hFFF << auto_in_2_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_13 = 27'hFFF << auto_in_3_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_17 = 27'hFFF << auto_in_4_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_21 = 27'hFFF << auto_in_5_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_25 = 27'hFFF << auto_in_6_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_29 = 27'hFFF << auto_in_7_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_33 = 27'hFFF << auto_in_8_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_37 = 27'hFFF << auto_in_9_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_41 = 27'hFFF << auto_in_10_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsAI_decode_T_45 = 27'hFFF << auto_in_11_a_bits_size;	// @[package.scala:235:71]
  wire [26:0] _beatsDO_decode_T_1 = 27'hFFF << auto_out_0_d_bits_size;	// @[package.scala:235:71]
  wire [20:0] _beatsDO_decode_T_5 = 21'h3F << auto_out_1_d_bits_size;	// @[package.scala:235:71]
  wire        latch = idle & auto_out_0_a_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_0 = readys_readys[0] & portsAOI_filtered_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1 = readys_readys[1] & portsAOI_filtered_1_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_2 = readys_readys[2] & portsAOI_filtered_2_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_3 = readys_readys[3] & portsAOI_filtered_3_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_4 = readys_readys[4] & portsAOI_filtered_4_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_5 = readys_readys[5] & portsAOI_filtered_5_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_6 = readys_readys[6] & portsAOI_filtered_6_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_7 = readys_readys[7] & portsAOI_filtered_7_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_8 = readys_readys[8] & portsAOI_filtered_8_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_9 = readys_readys[9] & portsAOI_filtered_9_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_10 = readys_readys[10] & portsAOI_filtered_10_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_11 = readys_readys[11] & portsAOI_filtered_11_0_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        latch_1 = idle_1 & auto_out_1_a_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_1_0 = readys_readys_1[0] & portsAOI_filtered_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_1 = readys_readys_1[1] & portsAOI_filtered_1_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_2 = readys_readys_1[2] & portsAOI_filtered_2_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_3 = readys_readys_1[3] & portsAOI_filtered_3_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_4 = readys_readys_1[4] & portsAOI_filtered_4_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_5 = readys_readys_1[5] & portsAOI_filtered_5_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_6 = readys_readys_1[6] & portsAOI_filtered_6_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_7 = readys_readys_1[7] & portsAOI_filtered_7_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_8 = readys_readys_1[8] & portsAOI_filtered_8_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_9 = readys_readys_1[9] & portsAOI_filtered_9_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_10 = readys_readys_1[10] & portsAOI_filtered_10_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        winnerQual_1_11 = readys_readys_1[11] & portsAOI_filtered_11_1_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:431:50]
  wire        latch_2 = idle_2 & auto_out_1_c_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_2_0 = readys_readys_2[0] & auto_in_1_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        winnerQual_2_1 = readys_readys_2[1] & auto_in_2_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        winnerQual_2_2 = readys_readys_2[2] & auto_in_3_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        winnerQual_2_3 = readys_readys_2[3] & auto_in_4_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        winnerQual_2_4 = readys_readys_2[4] & auto_in_5_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        winnerQual_2_5 = readys_readys_2[5] & auto_in_6_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        winnerQual_2_6 = readys_readys_2[6] & auto_in_7_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        winnerQual_2_7 = readys_readys_2[7] & auto_in_8_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        winnerQual_2_8 = readys_readys_2[8] & auto_in_9_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        winnerQual_2_9 = readys_readys_2[9] & auto_in_10_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        winnerQual_2_10 = readys_readys_2[10] & auto_in_11_c_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79]
  wire        latch_4 = idle_4 & auto_in_0_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_4_0 = readys_readys_4[0] & out_40_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_4_1 = readys_readys_4[1] & out_41_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_5 = idle_5 & auto_in_1_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_5_0 = readys_readys_5[0] & out_45_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_5_1 = readys_readys_5[1] & out_46_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_6 = idle_6 & auto_in_2_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_6_0 = readys_readys_6[0] & out_50_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_6_1 = readys_readys_6[1] & out_51_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_7 = idle_7 & auto_in_3_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_7_0 = readys_readys_7[0] & out_55_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_7_1 = readys_readys_7[1] & out_56_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_8 = idle_8 & auto_in_4_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_8_0 = readys_readys_8[0] & out_60_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_8_1 = readys_readys_8[1] & out_61_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_9 = idle_9 & auto_in_5_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_9_0 = readys_readys_9[0] & out_65_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_9_1 = readys_readys_9[1] & out_66_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_10 = idle_10 & auto_in_6_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_10_0 = readys_readys_10[0] & out_70_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_10_1 = readys_readys_10[1] & out_71_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_11 = idle_11 & auto_in_7_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_11_0 = readys_readys_11[0] & out_75_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_11_1 = readys_readys_11[1] & out_76_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_12 = idle_12 & auto_in_8_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_12_0 = readys_readys_12[0] & out_80_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_12_1 = readys_readys_12[1] & out_81_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_13 = idle_13 & auto_in_9_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_13_0 = readys_readys_13[0] & out_85_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_13_1 = readys_readys_13[1] & out_86_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_14 = idle_14 & auto_in_10_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_14_0 = readys_readys_14[0] & out_90_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_14_1 = readys_readys_14[1] & out_91_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        latch_15 = idle_15 & auto_in_11_d_ready;	// @[Arbiter.scala:89:28, :90:24]
  wire        winnerQual_15_0 = readys_readys_15[0] & out_95_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  wire        winnerQual_15_1 = readys_readys_15[1] & out_96_earlyValid;	// @[Arbiter.scala:27:18, :96:86, :99:79, Xbar.scala:182:40]
  always @(posedge clock) begin
    if (reset) begin
      beatsLeft <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask <= 12'hFFF;	// @[Arbiter.scala:24:23, package.scala:235:64]
      state_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_4 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_5 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_6 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_7 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_8 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_9 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_10 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_11 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_1 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_1 <= 12'hFFF;	// @[Arbiter.scala:24:23, package.scala:235:64]
      state_1_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_2 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_3 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_4 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_5 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_6 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_7 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_8 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_9 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_10 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_1_11 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_2 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_2 <= 11'h7FF;	// @[Arbiter.scala:24:23]
      state_2_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2_2 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2_3 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2_4 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2_5 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2_6 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2_7 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2_8 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2_9 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_2_10 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_3 <= 1'h0;	// @[Arbiter.scala:88:30]
      readys_mask_3 <= 11'h7FF;	// @[Arbiter.scala:24:23]
      state_3_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3_2 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3_3 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3_4 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3_5 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3_6 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3_7 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3_8 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3_9 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_3_10 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_4 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_4 <= 2'h3;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_4_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_4_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_5 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_5 <= 2'h3;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_5_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_5_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_6 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_6 <= 2'h3;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_6_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_6_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_7 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_7 <= 2'h3;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_7_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_7_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_8 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_8 <= 2'h3;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_8_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_8_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_9 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_9 <= 2'h3;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_9_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_9_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_10 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_10 <= 2'h3;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_10_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_10_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_11 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_11 <= 2'h3;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_11_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_11_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_12 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_12 <= 2'h3;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_12_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_12_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_13 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_13 <= 2'h3;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_13_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_13_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_14 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_14 <= 2'h3;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_14_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_14_1 <= 1'h0;	// @[Arbiter.scala:117:26]
      beatsLeft_15 <= 8'h0;	// @[Arbiter.scala:88:30, Edges.scala:221:14]
      readys_mask_15 <= 2'h3;	// @[Arbiter.scala:24:23, Parameters.scala:54:32]
      state_15_0 <= 1'h0;	// @[Arbiter.scala:117:26]
      state_15_1 <= 1'h0;	// @[Arbiter.scala:117:26]
    end
    else begin
      if (latch)	// @[Arbiter.scala:90:24]
        beatsLeft <= (winnerQual_0 & ~(auto_in_0_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_1[11:4]) : 8'h0) | (winnerQual_1 & ~(auto_in_1_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_5[11:4]) : 8'h0) | (winnerQual_2 & ~(auto_in_2_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_9[11:4]) : 8'h0) | (winnerQual_3 & ~(auto_in_3_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_13[11:4]) : 8'h0) | (winnerQual_4 & ~(auto_in_4_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_17[11:4]) : 8'h0) | (winnerQual_5 & ~(auto_in_5_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_21[11:4]) : 8'h0) | (winnerQual_6 & ~(auto_in_6_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_25[11:4]) : 8'h0) | (winnerQual_7 & ~(auto_in_7_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_29[11:4]) : 8'h0) | (winnerQual_8 & ~(auto_in_8_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_33[11:4]) : 8'h0) | (winnerQual_9 & ~(auto_in_9_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_37[11:4]) : 8'h0) | (winnerQual_10 & ~(auto_in_10_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_41[11:4]) : 8'h0) | (winnerQual_11 & ~(auto_in_11_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_45[11:4]) : 8'h0);	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Edges.scala:92:{28,37}, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft <= beatsLeft - {7'h0, auto_out_0_a_ready & x1_out_1_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch & (|readys_valid))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask <= _readys_mask_T_9 | {_readys_mask_T_9[3:0], 8'h0};	// @[Arbiter.scala:24:23, Edges.scala:221:14, package.scala:245:{43,53}]
      if (idle) begin	// @[Arbiter.scala:89:28]
        state_0 <= winnerQual_0;	// @[Arbiter.scala:99:79, :117:26]
        state_1 <= winnerQual_1;	// @[Arbiter.scala:99:79, :117:26]
        state_2 <= winnerQual_2;	// @[Arbiter.scala:99:79, :117:26]
        state_3 <= winnerQual_3;	// @[Arbiter.scala:99:79, :117:26]
        state_4 <= winnerQual_4;	// @[Arbiter.scala:99:79, :117:26]
        state_5 <= winnerQual_5;	// @[Arbiter.scala:99:79, :117:26]
        state_6 <= winnerQual_6;	// @[Arbiter.scala:99:79, :117:26]
        state_7 <= winnerQual_7;	// @[Arbiter.scala:99:79, :117:26]
        state_8 <= winnerQual_8;	// @[Arbiter.scala:99:79, :117:26]
        state_9 <= winnerQual_9;	// @[Arbiter.scala:99:79, :117:26]
        state_10 <= winnerQual_10;	// @[Arbiter.scala:99:79, :117:26]
        state_11 <= winnerQual_11;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_1)	// @[Arbiter.scala:90:24]
        beatsLeft_1 <= (winnerQual_1_0 & ~(auto_in_0_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_1[11:4]) : 8'h0) | (winnerQual_1_1 & ~(auto_in_1_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_5[11:4]) : 8'h0) | (winnerQual_1_2 & ~(auto_in_2_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_9[11:4]) : 8'h0) | (winnerQual_1_3 & ~(auto_in_3_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_13[11:4]) : 8'h0) | (winnerQual_1_4 & ~(auto_in_4_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_17[11:4]) : 8'h0) | (winnerQual_1_5 & ~(auto_in_5_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_21[11:4]) : 8'h0) | (winnerQual_1_6 & ~(auto_in_6_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_25[11:4]) : 8'h0) | (winnerQual_1_7 & ~(auto_in_7_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_29[11:4]) : 8'h0) | (winnerQual_1_8 & ~(auto_in_8_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_33[11:4]) : 8'h0) | (winnerQual_1_9 & ~(auto_in_9_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_37[11:4]) : 8'h0) | (winnerQual_1_10 & ~(auto_in_10_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_41[11:4]) : 8'h0) | (winnerQual_1_11 & ~(auto_in_11_a_bits_opcode[2]) ? ~(_beatsAI_decode_T_45[11:4]) : 8'h0);	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Edges.scala:92:{28,37}, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_1 <= beatsLeft_1 - {7'h0, auto_out_1_a_ready & bundleOut_1_out_1_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_1 & (|readys_valid_1))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_1 <= _readys_mask_T_23 | {_readys_mask_T_23[3:0], 8'h0};	// @[Arbiter.scala:24:23, Edges.scala:221:14, package.scala:245:{43,53}]
      if (idle_1) begin	// @[Arbiter.scala:89:28]
        state_1_0 <= winnerQual_1_0;	// @[Arbiter.scala:99:79, :117:26]
        state_1_1 <= winnerQual_1_1;	// @[Arbiter.scala:99:79, :117:26]
        state_1_2 <= winnerQual_1_2;	// @[Arbiter.scala:99:79, :117:26]
        state_1_3 <= winnerQual_1_3;	// @[Arbiter.scala:99:79, :117:26]
        state_1_4 <= winnerQual_1_4;	// @[Arbiter.scala:99:79, :117:26]
        state_1_5 <= winnerQual_1_5;	// @[Arbiter.scala:99:79, :117:26]
        state_1_6 <= winnerQual_1_6;	// @[Arbiter.scala:99:79, :117:26]
        state_1_7 <= winnerQual_1_7;	// @[Arbiter.scala:99:79, :117:26]
        state_1_8 <= winnerQual_1_8;	// @[Arbiter.scala:99:79, :117:26]
        state_1_9 <= winnerQual_1_9;	// @[Arbiter.scala:99:79, :117:26]
        state_1_10 <= winnerQual_1_10;	// @[Arbiter.scala:99:79, :117:26]
        state_1_11 <= winnerQual_1_11;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_2)	// @[Arbiter.scala:90:24]
        beatsLeft_2 <= (winnerQual_2_0 & auto_in_1_c_bits_opcode[0] ? ~(_beatsCI_decode_T_5[11:4]) : 8'h0) | (winnerQual_2_1 & auto_in_2_c_bits_opcode[0] ? ~(_beatsCI_decode_T_9[11:4]) : 8'h0) | (winnerQual_2_2 & auto_in_3_c_bits_opcode[0] ? ~(_beatsCI_decode_T_13[11:4]) : 8'h0) | (winnerQual_2_3 & auto_in_4_c_bits_opcode[0] ? ~(_beatsCI_decode_T_17[11:4]) : 8'h0) | (winnerQual_2_4 & auto_in_5_c_bits_opcode[0] ? ~(_beatsCI_decode_T_21[11:4]) : 8'h0) | (winnerQual_2_5 & auto_in_6_c_bits_opcode[0] ? ~(_beatsCI_decode_T_25[11:4]) : 8'h0) | (winnerQual_2_6 & auto_in_7_c_bits_opcode[0] ? ~(_beatsCI_decode_T_29[11:4]) : 8'h0) | (winnerQual_2_7 & auto_in_8_c_bits_opcode[0] ? ~(_beatsCI_decode_T_33[11:4]) : 8'h0) | (winnerQual_2_8 & auto_in_9_c_bits_opcode[0] ? ~(_beatsCI_decode_T_37[11:4]) : 8'h0) | (winnerQual_2_9 & auto_in_10_c_bits_opcode[0] ? ~(_beatsCI_decode_T_41[11:4]) : 8'h0) | (winnerQual_2_10 & auto_in_11_c_bits_opcode[0] ? ~(_beatsCI_decode_T_45[11:4]) : 8'h0);	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Edges.scala:102:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_2 <= beatsLeft_2 - {7'h0, auto_out_1_c_ready & bundleOut_1_out_c_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_2 & (|readys_valid_2))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_2 <= _readys_mask_T_37 | {_readys_mask_T_37[2:0], 8'h0};	// @[Arbiter.scala:24:23, Edges.scala:221:14, package.scala:245:{43,53}]
      if (idle_2) begin	// @[Arbiter.scala:89:28]
        state_2_0 <= winnerQual_2_0;	// @[Arbiter.scala:99:79, :117:26]
        state_2_1 <= winnerQual_2_1;	// @[Arbiter.scala:99:79, :117:26]
        state_2_2 <= winnerQual_2_2;	// @[Arbiter.scala:99:79, :117:26]
        state_2_3 <= winnerQual_2_3;	// @[Arbiter.scala:99:79, :117:26]
        state_2_4 <= winnerQual_2_4;	// @[Arbiter.scala:99:79, :117:26]
        state_2_5 <= winnerQual_2_5;	// @[Arbiter.scala:99:79, :117:26]
        state_2_6 <= winnerQual_2_6;	// @[Arbiter.scala:99:79, :117:26]
        state_2_7 <= winnerQual_2_7;	// @[Arbiter.scala:99:79, :117:26]
        state_2_8 <= winnerQual_2_8;	// @[Arbiter.scala:99:79, :117:26]
        state_2_9 <= winnerQual_2_9;	// @[Arbiter.scala:99:79, :117:26]
        state_2_10 <= winnerQual_2_10;	// @[Arbiter.scala:99:79, :117:26]
      end
      beatsLeft_3 <= beatsLeft_3 & beatsLeft_3 - bundleOut_1_out_e_valid;	// @[Arbiter.scala:88:30, :114:{23,52}, :126:29]
      if (~beatsLeft_3 & (|readys_valid_3))	// @[Arbiter.scala:28:{18,27}, :88:30, :89:28, Cat.scala:33:92]
        readys_mask_3 <= _readys_mask_T_51 | {_readys_mask_T_51[2:0], 8'h0};	// @[Arbiter.scala:24:23, Edges.scala:221:14, package.scala:245:{43,53}]
      if (beatsLeft_3) begin	// @[Arbiter.scala:88:30]
      end
      else begin	// @[Arbiter.scala:88:30]
        state_3_0 <= readys_readys_3[0] & auto_in_1_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
        state_3_1 <= readys_readys_3[1] & auto_in_2_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
        state_3_2 <= readys_readys_3[2] & auto_in_3_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
        state_3_3 <= readys_readys_3[3] & auto_in_4_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
        state_3_4 <= readys_readys_3[4] & auto_in_5_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
        state_3_5 <= readys_readys_3[5] & auto_in_6_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
        state_3_6 <= readys_readys_3[6] & auto_in_7_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
        state_3_7 <= readys_readys_3[7] & auto_in_8_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
        state_3_8 <= readys_readys_3[8] & auto_in_9_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
        state_3_9 <= readys_readys_3[9] & auto_in_10_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
        state_3_10 <= readys_readys_3[10] & auto_in_11_e_valid;	// @[Arbiter.scala:27:18, :96:86, :99:79, :117:26]
      end
      if (latch_4)	// @[Arbiter.scala:90:24]
        beatsLeft_4 <= (winnerQual_4_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:4]) : 8'h0) | {6'h0, winnerQual_4_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:4]) : 2'h0};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_4 <= beatsLeft_4 - {7'h0, auto_in_0_d_ready & out_42_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_4 & (|readys_valid_4))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_4 <= _readys_mask_T_56 | {_readys_mask_T_56[0], 1'h0};	// @[Arbiter.scala:24:23, :29:29, package.scala:245:{43,53}]
      if (idle_4) begin	// @[Arbiter.scala:89:28]
        state_4_0 <= winnerQual_4_0;	// @[Arbiter.scala:99:79, :117:26]
        state_4_1 <= winnerQual_4_1;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_5)	// @[Arbiter.scala:90:24]
        beatsLeft_5 <= (winnerQual_5_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:4]) : 8'h0) | {6'h0, winnerQual_5_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:4]) : 2'h0};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_5 <= beatsLeft_5 - {7'h0, auto_in_1_d_ready & out_47_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_5 & (|readys_valid_5))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_5 <= _readys_mask_T_61 | {_readys_mask_T_61[0], 1'h0};	// @[Arbiter.scala:24:23, :29:29, package.scala:245:{43,53}]
      if (idle_5) begin	// @[Arbiter.scala:89:28]
        state_5_0 <= winnerQual_5_0;	// @[Arbiter.scala:99:79, :117:26]
        state_5_1 <= winnerQual_5_1;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_6)	// @[Arbiter.scala:90:24]
        beatsLeft_6 <= (winnerQual_6_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:4]) : 8'h0) | {6'h0, winnerQual_6_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:4]) : 2'h0};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_6 <= beatsLeft_6 - {7'h0, auto_in_2_d_ready & out_52_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_6 & (|readys_valid_6))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_6 <= _readys_mask_T_66 | {_readys_mask_T_66[0], 1'h0};	// @[Arbiter.scala:24:23, :29:29, package.scala:245:{43,53}]
      if (idle_6) begin	// @[Arbiter.scala:89:28]
        state_6_0 <= winnerQual_6_0;	// @[Arbiter.scala:99:79, :117:26]
        state_6_1 <= winnerQual_6_1;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_7)	// @[Arbiter.scala:90:24]
        beatsLeft_7 <= (winnerQual_7_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:4]) : 8'h0) | {6'h0, winnerQual_7_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:4]) : 2'h0};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_7 <= beatsLeft_7 - {7'h0, auto_in_3_d_ready & out_57_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_7 & (|readys_valid_7))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_7 <= _readys_mask_T_71 | {_readys_mask_T_71[0], 1'h0};	// @[Arbiter.scala:24:23, :29:29, package.scala:245:{43,53}]
      if (idle_7) begin	// @[Arbiter.scala:89:28]
        state_7_0 <= winnerQual_7_0;	// @[Arbiter.scala:99:79, :117:26]
        state_7_1 <= winnerQual_7_1;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_8)	// @[Arbiter.scala:90:24]
        beatsLeft_8 <= (winnerQual_8_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:4]) : 8'h0) | {6'h0, winnerQual_8_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:4]) : 2'h0};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_8 <= beatsLeft_8 - {7'h0, auto_in_4_d_ready & out_62_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_8 & (|readys_valid_8))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_8 <= _readys_mask_T_76 | {_readys_mask_T_76[0], 1'h0};	// @[Arbiter.scala:24:23, :29:29, package.scala:245:{43,53}]
      if (idle_8) begin	// @[Arbiter.scala:89:28]
        state_8_0 <= winnerQual_8_0;	// @[Arbiter.scala:99:79, :117:26]
        state_8_1 <= winnerQual_8_1;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_9)	// @[Arbiter.scala:90:24]
        beatsLeft_9 <= (winnerQual_9_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:4]) : 8'h0) | {6'h0, winnerQual_9_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:4]) : 2'h0};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_9 <= beatsLeft_9 - {7'h0, auto_in_5_d_ready & out_67_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_9 & (|readys_valid_9))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_9 <= _readys_mask_T_81 | {_readys_mask_T_81[0], 1'h0};	// @[Arbiter.scala:24:23, :29:29, package.scala:245:{43,53}]
      if (idle_9) begin	// @[Arbiter.scala:89:28]
        state_9_0 <= winnerQual_9_0;	// @[Arbiter.scala:99:79, :117:26]
        state_9_1 <= winnerQual_9_1;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_10)	// @[Arbiter.scala:90:24]
        beatsLeft_10 <= (winnerQual_10_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:4]) : 8'h0) | {6'h0, winnerQual_10_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:4]) : 2'h0};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_10 <= beatsLeft_10 - {7'h0, auto_in_6_d_ready & out_72_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_10 & (|readys_valid_10))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_10 <= _readys_mask_T_86 | {_readys_mask_T_86[0], 1'h0};	// @[Arbiter.scala:24:23, :29:29, package.scala:245:{43,53}]
      if (idle_10) begin	// @[Arbiter.scala:89:28]
        state_10_0 <= winnerQual_10_0;	// @[Arbiter.scala:99:79, :117:26]
        state_10_1 <= winnerQual_10_1;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_11)	// @[Arbiter.scala:90:24]
        beatsLeft_11 <= (winnerQual_11_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:4]) : 8'h0) | {6'h0, winnerQual_11_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:4]) : 2'h0};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_11 <= beatsLeft_11 - {7'h0, auto_in_7_d_ready & out_77_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_11 & (|readys_valid_11))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_11 <= _readys_mask_T_91 | {_readys_mask_T_91[0], 1'h0};	// @[Arbiter.scala:24:23, :29:29, package.scala:245:{43,53}]
      if (idle_11) begin	// @[Arbiter.scala:89:28]
        state_11_0 <= winnerQual_11_0;	// @[Arbiter.scala:99:79, :117:26]
        state_11_1 <= winnerQual_11_1;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_12)	// @[Arbiter.scala:90:24]
        beatsLeft_12 <= (winnerQual_12_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:4]) : 8'h0) | {6'h0, winnerQual_12_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:4]) : 2'h0};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_12 <= beatsLeft_12 - {7'h0, auto_in_8_d_ready & out_82_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_12 & (|readys_valid_12))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_12 <= _readys_mask_T_96 | {_readys_mask_T_96[0], 1'h0};	// @[Arbiter.scala:24:23, :29:29, package.scala:245:{43,53}]
      if (idle_12) begin	// @[Arbiter.scala:89:28]
        state_12_0 <= winnerQual_12_0;	// @[Arbiter.scala:99:79, :117:26]
        state_12_1 <= winnerQual_12_1;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_13)	// @[Arbiter.scala:90:24]
        beatsLeft_13 <= (winnerQual_13_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:4]) : 8'h0) | {6'h0, winnerQual_13_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:4]) : 2'h0};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_13 <= beatsLeft_13 - {7'h0, auto_in_9_d_ready & out_87_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_13 & (|readys_valid_13))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_13 <= _readys_mask_T_101 | {_readys_mask_T_101[0], 1'h0};	// @[Arbiter.scala:24:23, :29:29, package.scala:245:{43,53}]
      if (idle_13) begin	// @[Arbiter.scala:89:28]
        state_13_0 <= winnerQual_13_0;	// @[Arbiter.scala:99:79, :117:26]
        state_13_1 <= winnerQual_13_1;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_14)	// @[Arbiter.scala:90:24]
        beatsLeft_14 <= (winnerQual_14_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:4]) : 8'h0) | {6'h0, winnerQual_14_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:4]) : 2'h0};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_14 <= beatsLeft_14 - {7'h0, auto_in_10_d_ready & out_92_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_14 & (|readys_valid_14))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_14 <= _readys_mask_T_106 | {_readys_mask_T_106[0], 1'h0};	// @[Arbiter.scala:24:23, :29:29, package.scala:245:{43,53}]
      if (idle_14) begin	// @[Arbiter.scala:89:28]
        state_14_0 <= winnerQual_14_0;	// @[Arbiter.scala:99:79, :117:26]
        state_14_1 <= winnerQual_14_1;	// @[Arbiter.scala:99:79, :117:26]
      end
      if (latch_15)	// @[Arbiter.scala:90:24]
        beatsLeft_15 <= (winnerQual_15_0 & auto_out_0_d_bits_opcode[0] ? ~(_beatsDO_decode_T_1[11:4]) : 8'h0) | {6'h0, winnerQual_15_1 & auto_out_1_d_bits_opcode[0] ? ~(_beatsDO_decode_T_5[5:4]) : 2'h0};	// @[Arbiter.scala:88:30, :99:79, :112:73, :113:44, Bundles.scala:259:74, Edges.scala:106:36, :221:14, package.scala:235:{46,71,76}]
      else	// @[Arbiter.scala:90:24]
        beatsLeft_15 <= beatsLeft_15 - {7'h0, auto_in_11_d_ready & out_97_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, ReadyValidCancel.scala:49:33, Xbar.scala:265:23]
      if (latch_15 & (|readys_valid_15))	// @[Arbiter.scala:28:{18,27}, :90:24, Cat.scala:33:92]
        readys_mask_15 <= _readys_mask_T_111 | {_readys_mask_T_111[0], 1'h0};	// @[Arbiter.scala:24:23, :29:29, package.scala:245:{43,53}]
      if (idle_15) begin	// @[Arbiter.scala:89:28]
        state_15_0 <= winnerQual_15_0;	// @[Arbiter.scala:99:79, :117:26]
        state_15_1 <= winnerQual_15_1;	// @[Arbiter.scala:99:79, :117:26]
      end
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    wire         prefixOR_2 = earlyWinner_0 | earlyWinner_1;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_3 = prefixOR_2 | earlyWinner_2;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_4 = prefixOR_3 | earlyWinner_3;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_5 = prefixOR_4 | earlyWinner_4;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_6 = prefixOR_5 | earlyWinner_5;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_7 = prefixOR_6 | earlyWinner_6;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_8 = prefixOR_7 | earlyWinner_7;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_9 = prefixOR_8 | earlyWinner_8;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_10 = prefixOR_9 | earlyWinner_9;	// @[Arbiter.scala:98:79, :105:53]
    wire         _T_90 = portsAOI_filtered_0_earlyValid | portsAOI_filtered_1_0_earlyValid;	// @[Arbiter.scala:109:36, Xbar.scala:431:50]
    wire         prefixOR_2_1 = earlyWinner_1_0 | earlyWinner_1_1;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_3_1 = prefixOR_2_1 | earlyWinner_1_2;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_4_1 = prefixOR_3_1 | earlyWinner_1_3;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_5_1 = prefixOR_4_1 | earlyWinner_1_4;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_6_1 = prefixOR_5_1 | earlyWinner_1_5;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_7_1 = prefixOR_6_1 | earlyWinner_1_6;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_8_1 = prefixOR_7_1 | earlyWinner_1_7;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_9_1 = prefixOR_8_1 | earlyWinner_1_8;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_10_1 = prefixOR_9_1 | earlyWinner_1_9;	// @[Arbiter.scala:98:79, :105:53]
    wire         _T_378 = portsAOI_filtered_1_earlyValid | portsAOI_filtered_1_1_earlyValid;	// @[Arbiter.scala:109:36, Xbar.scala:431:50]
    wire         prefixOR_2_2 = earlyWinner_2_0 | earlyWinner_2_1;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_3_2 = prefixOR_2_2 | earlyWinner_2_2;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_4_2 = prefixOR_3_2 | earlyWinner_2_3;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_5_2 = prefixOR_4_2 | earlyWinner_2_4;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_6_2 = prefixOR_5_2 | earlyWinner_2_5;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_7_2 = prefixOR_6_2 | earlyWinner_2_6;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_8_2 = prefixOR_7_2 | earlyWinner_2_7;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_9_2 = prefixOR_8_2 | earlyWinner_2_8;	// @[Arbiter.scala:98:79, :105:53]
    wire         _T_659 = auto_in_1_c_valid | auto_in_2_c_valid;	// @[Arbiter.scala:109:36]
    wire         prefixOR_2_3 = earlyWinner_3_0 | earlyWinner_3_1;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_3_3 = prefixOR_2_3 | earlyWinner_3_2;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_4_3 = prefixOR_3_3 | earlyWinner_3_3;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_5_3 = prefixOR_4_3 | earlyWinner_3_4;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_6_3 = prefixOR_5_3 | earlyWinner_3_5;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_7_3 = prefixOR_6_3 | earlyWinner_3_6;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_8_3 = prefixOR_7_3 | earlyWinner_3_7;	// @[Arbiter.scala:98:79, :105:53]
    wire         prefixOR_9_3 = prefixOR_8_3 | earlyWinner_3_8;	// @[Arbiter.scala:98:79, :105:53]
    wire         _T_902 = auto_in_1_e_valid | auto_in_2_e_valid;	// @[Arbiter.scala:109:36]
    always @(posedge clock) begin	// @[Arbiter.scala:106:13]
      if (~reset & ~((~earlyWinner_0 | ~earlyWinner_1) & (~prefixOR_2 | ~earlyWinner_2) & (~prefixOR_3 | ~earlyWinner_3) & (~prefixOR_4 | ~earlyWinner_4) & (~prefixOR_5 | ~earlyWinner_5) & (~prefixOR_6 | ~earlyWinner_6) & (~prefixOR_7 | ~earlyWinner_7) & (~prefixOR_8 | ~earlyWinner_8) & (~prefixOR_9 | ~earlyWinner_9) & (~prefixOR_10 | ~earlyWinner_10) & (~(prefixOR_10 | earlyWinner_10) | ~earlyWinner_11))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_out_0_a_earlyValid_T | portsAOI_filtered_2_0_earlyValid | portsAOI_filtered_3_0_earlyValid | portsAOI_filtered_4_0_earlyValid | portsAOI_filtered_5_0_earlyValid | portsAOI_filtered_6_0_earlyValid | portsAOI_filtered_7_0_earlyValid | portsAOI_filtered_8_0_earlyValid | portsAOI_filtered_9_0_earlyValid | portsAOI_filtered_10_0_earlyValid | portsAOI_filtered_11_0_earlyValid) | earlyWinner_0 | earlyWinner_1 | earlyWinner_2 | earlyWinner_3 | earlyWinner_4 | earlyWinner_5 | earlyWinner_6 | earlyWinner_7 | earlyWinner_8 | earlyWinner_9 | earlyWinner_10 | earlyWinner_11)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}, Xbar.scala:431:50]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_90 | portsAOI_filtered_2_0_earlyValid | portsAOI_filtered_3_0_earlyValid | portsAOI_filtered_4_0_earlyValid | portsAOI_filtered_5_0_earlyValid | portsAOI_filtered_6_0_earlyValid | portsAOI_filtered_7_0_earlyValid | portsAOI_filtered_8_0_earlyValid | portsAOI_filtered_9_0_earlyValid | portsAOI_filtered_10_0_earlyValid | portsAOI_filtered_11_0_earlyValid) | _T_90 | portsAOI_filtered_2_0_earlyValid | portsAOI_filtered_3_0_earlyValid | portsAOI_filtered_4_0_earlyValid | portsAOI_filtered_5_0_earlyValid | portsAOI_filtered_6_0_earlyValid | portsAOI_filtered_7_0_earlyValid | portsAOI_filtered_8_0_earlyValid | portsAOI_filtered_9_0_earlyValid | portsAOI_filtered_10_0_earlyValid | portsAOI_filtered_11_0_earlyValid)) begin	// @[Arbiter.scala:109:{14,15,36,41}, Xbar.scala:431:50]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~((~earlyWinner_1_0 | ~earlyWinner_1_1) & (~prefixOR_2_1 | ~earlyWinner_1_2) & (~prefixOR_3_1 | ~earlyWinner_1_3) & (~prefixOR_4_1 | ~earlyWinner_1_4) & (~prefixOR_5_1 | ~earlyWinner_1_5) & (~prefixOR_6_1 | ~earlyWinner_1_6) & (~prefixOR_7_1 | ~earlyWinner_1_7) & (~prefixOR_8_1 | ~earlyWinner_1_8) & (~prefixOR_9_1 | ~earlyWinner_1_9) & (~prefixOR_10_1 | ~earlyWinner_1_10) & (~(prefixOR_10_1 | earlyWinner_1_10) | ~earlyWinner_1_11))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_out_1_a_earlyValid_T | portsAOI_filtered_2_1_earlyValid | portsAOI_filtered_3_1_earlyValid | portsAOI_filtered_4_1_earlyValid | portsAOI_filtered_5_1_earlyValid | portsAOI_filtered_6_1_earlyValid | portsAOI_filtered_7_1_earlyValid | portsAOI_filtered_8_1_earlyValid | portsAOI_filtered_9_1_earlyValid | portsAOI_filtered_10_1_earlyValid | portsAOI_filtered_11_1_earlyValid) | earlyWinner_1_0 | earlyWinner_1_1 | earlyWinner_1_2 | earlyWinner_1_3 | earlyWinner_1_4 | earlyWinner_1_5 | earlyWinner_1_6 | earlyWinner_1_7 | earlyWinner_1_8 | earlyWinner_1_9 | earlyWinner_1_10 | earlyWinner_1_11)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}, Xbar.scala:431:50]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_378 | portsAOI_filtered_2_1_earlyValid | portsAOI_filtered_3_1_earlyValid | portsAOI_filtered_4_1_earlyValid | portsAOI_filtered_5_1_earlyValid | portsAOI_filtered_6_1_earlyValid | portsAOI_filtered_7_1_earlyValid | portsAOI_filtered_8_1_earlyValid | portsAOI_filtered_9_1_earlyValid | portsAOI_filtered_10_1_earlyValid | portsAOI_filtered_11_1_earlyValid) | _T_378 | portsAOI_filtered_2_1_earlyValid | portsAOI_filtered_3_1_earlyValid | portsAOI_filtered_4_1_earlyValid | portsAOI_filtered_5_1_earlyValid | portsAOI_filtered_6_1_earlyValid | portsAOI_filtered_7_1_earlyValid | portsAOI_filtered_8_1_earlyValid | portsAOI_filtered_9_1_earlyValid | portsAOI_filtered_10_1_earlyValid | portsAOI_filtered_11_1_earlyValid)) begin	// @[Arbiter.scala:109:{14,15,36,41}, Xbar.scala:431:50]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~((~earlyWinner_2_0 | ~earlyWinner_2_1) & (~prefixOR_2_2 | ~earlyWinner_2_2) & (~prefixOR_3_2 | ~earlyWinner_2_3) & (~prefixOR_4_2 | ~earlyWinner_2_4) & (~prefixOR_5_2 | ~earlyWinner_2_5) & (~prefixOR_6_2 | ~earlyWinner_2_6) & (~prefixOR_7_2 | ~earlyWinner_2_7) & (~prefixOR_8_2 | ~earlyWinner_2_8) & (~prefixOR_9_2 | ~earlyWinner_2_9) & (~(prefixOR_9_2 | earlyWinner_2_9) | ~earlyWinner_2_10))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_sink_ACancel_earlyValid_T | auto_in_3_c_valid | auto_in_4_c_valid | auto_in_5_c_valid | auto_in_6_c_valid | auto_in_7_c_valid | auto_in_8_c_valid | auto_in_9_c_valid | auto_in_10_c_valid | auto_in_11_c_valid) | earlyWinner_2_0 | earlyWinner_2_1 | earlyWinner_2_2 | earlyWinner_2_3 | earlyWinner_2_4 | earlyWinner_2_5 | earlyWinner_2_6 | earlyWinner_2_7 | earlyWinner_2_8 | earlyWinner_2_9 | earlyWinner_2_10)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_659 | auto_in_3_c_valid | auto_in_4_c_valid | auto_in_5_c_valid | auto_in_6_c_valid | auto_in_7_c_valid | auto_in_8_c_valid | auto_in_9_c_valid | auto_in_10_c_valid | auto_in_11_c_valid) | _T_659 | auto_in_3_c_valid | auto_in_4_c_valid | auto_in_5_c_valid | auto_in_6_c_valid | auto_in_7_c_valid | auto_in_8_c_valid | auto_in_9_c_valid | auto_in_10_c_valid | auto_in_11_c_valid)) begin	// @[Arbiter.scala:109:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~((~earlyWinner_3_0 | ~earlyWinner_3_1) & (~prefixOR_2_3 | ~earlyWinner_3_2) & (~prefixOR_3_3 | ~earlyWinner_3_3) & (~prefixOR_4_3 | ~earlyWinner_3_4) & (~prefixOR_5_3 | ~earlyWinner_3_5) & (~prefixOR_6_3 | ~earlyWinner_3_6) & (~prefixOR_7_3 | ~earlyWinner_3_7) & (~prefixOR_8_3 | ~earlyWinner_3_8) & (~prefixOR_9_3 | ~earlyWinner_3_9) & (~(prefixOR_9_3 | earlyWinner_3_9) | ~earlyWinner_3_10))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_sink_ACancel_earlyValid_T_32 | auto_in_3_e_valid | auto_in_4_e_valid | auto_in_5_e_valid | auto_in_6_e_valid | auto_in_7_e_valid | auto_in_8_e_valid | auto_in_9_e_valid | auto_in_10_e_valid | auto_in_11_e_valid) | earlyWinner_3_0 | earlyWinner_3_1 | earlyWinner_3_2 | earlyWinner_3_3 | earlyWinner_3_4 | earlyWinner_3_5 | earlyWinner_3_6 | earlyWinner_3_7 | earlyWinner_3_8 | earlyWinner_3_9 | earlyWinner_3_10)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_902 | auto_in_3_e_valid | auto_in_4_e_valid | auto_in_5_e_valid | auto_in_6_e_valid | auto_in_7_e_valid | auto_in_8_e_valid | auto_in_9_e_valid | auto_in_10_e_valid | auto_in_11_e_valid) | _T_902 | auto_in_3_e_valid | auto_in_4_e_valid | auto_in_5_e_valid | auto_in_6_e_valid | auto_in_7_e_valid | auto_in_8_e_valid | auto_in_9_e_valid | auto_in_10_e_valid | auto_in_11_e_valid)) begin	// @[Arbiter.scala:109:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~(~earlyWinner_4_0 | ~earlyWinner_4_1)) begin	// @[Arbiter.scala:98:79, :106:{13,61,64,67}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~_sink_ACancel_earlyValid_T_64 | earlyWinner_4_0 | earlyWinner_4_1)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~earlyWinner_5_0 | ~earlyWinner_5_1)) begin	// @[Arbiter.scala:98:79, :106:{13,61,64,67}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~_sink_ACancel_earlyValid_T_69 | earlyWinner_5_0 | earlyWinner_5_1)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~earlyWinner_6_0 | ~earlyWinner_6_1)) begin	// @[Arbiter.scala:98:79, :106:{13,61,64,67}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~_sink_ACancel_earlyValid_T_74 | earlyWinner_6_0 | earlyWinner_6_1)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~earlyWinner_7_0 | ~earlyWinner_7_1)) begin	// @[Arbiter.scala:98:79, :106:{13,61,64,67}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~_sink_ACancel_earlyValid_T_79 | earlyWinner_7_0 | earlyWinner_7_1)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~earlyWinner_8_0 | ~earlyWinner_8_1)) begin	// @[Arbiter.scala:98:79, :106:{13,61,64,67}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~_sink_ACancel_earlyValid_T_84 | earlyWinner_8_0 | earlyWinner_8_1)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~earlyWinner_9_0 | ~earlyWinner_9_1)) begin	// @[Arbiter.scala:98:79, :106:{13,61,64,67}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~_sink_ACancel_earlyValid_T_89 | earlyWinner_9_0 | earlyWinner_9_1)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~earlyWinner_10_0 | ~earlyWinner_10_1)) begin	// @[Arbiter.scala:98:79, :106:{13,61,64,67}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~_sink_ACancel_earlyValid_T_94 | earlyWinner_10_0 | earlyWinner_10_1)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~earlyWinner_11_0 | ~earlyWinner_11_1)) begin	// @[Arbiter.scala:98:79, :106:{13,61,64,67}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~_sink_ACancel_earlyValid_T_99 | earlyWinner_11_0 | earlyWinner_11_1)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~earlyWinner_12_0 | ~earlyWinner_12_1)) begin	// @[Arbiter.scala:98:79, :106:{13,61,64,67}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~_sink_ACancel_earlyValid_T_104 | earlyWinner_12_0 | earlyWinner_12_1)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~earlyWinner_13_0 | ~earlyWinner_13_1)) begin	// @[Arbiter.scala:98:79, :106:{13,61,64,67}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~_sink_ACancel_earlyValid_T_109 | earlyWinner_13_0 | earlyWinner_13_1)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~earlyWinner_14_0 | ~earlyWinner_14_1)) begin	// @[Arbiter.scala:98:79, :106:{13,61,64,67}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~_sink_ACancel_earlyValid_T_114 | earlyWinner_14_0 | earlyWinner_14_1)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~earlyWinner_15_0 | ~earlyWinner_15_1)) begin	// @[Arbiter.scala:98:79, :106:{13,61,64,67}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~_sink_ACancel_earlyValid_T_119 | earlyWinner_15_0 | earlyWinner_15_1)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
    end // always @(posedge)
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        beatsLeft = _RANDOM_0[7:0];	// @[Arbiter.scala:88:30]
        readys_mask = _RANDOM_0[19:8];	// @[Arbiter.scala:24:23, :88:30]
        state_0 = _RANDOM_0[20];	// @[Arbiter.scala:88:30, :117:26]
        state_1 = _RANDOM_0[21];	// @[Arbiter.scala:88:30, :117:26]
        state_2 = _RANDOM_0[22];	// @[Arbiter.scala:88:30, :117:26]
        state_3 = _RANDOM_0[23];	// @[Arbiter.scala:88:30, :117:26]
        state_4 = _RANDOM_0[24];	// @[Arbiter.scala:88:30, :117:26]
        state_5 = _RANDOM_0[25];	// @[Arbiter.scala:88:30, :117:26]
        state_6 = _RANDOM_0[26];	// @[Arbiter.scala:88:30, :117:26]
        state_7 = _RANDOM_0[27];	// @[Arbiter.scala:88:30, :117:26]
        state_8 = _RANDOM_0[28];	// @[Arbiter.scala:88:30, :117:26]
        state_9 = _RANDOM_0[29];	// @[Arbiter.scala:88:30, :117:26]
        state_10 = _RANDOM_0[30];	// @[Arbiter.scala:88:30, :117:26]
        state_11 = _RANDOM_0[31];	// @[Arbiter.scala:88:30, :117:26]
        beatsLeft_1 = _RANDOM_1[7:0];	// @[Arbiter.scala:88:30]
        readys_mask_1 = _RANDOM_1[19:8];	// @[Arbiter.scala:24:23, :88:30]
        state_1_0 = _RANDOM_1[20];	// @[Arbiter.scala:88:30, :117:26]
        state_1_1 = _RANDOM_1[21];	// @[Arbiter.scala:88:30, :117:26]
        state_1_2 = _RANDOM_1[22];	// @[Arbiter.scala:88:30, :117:26]
        state_1_3 = _RANDOM_1[23];	// @[Arbiter.scala:88:30, :117:26]
        state_1_4 = _RANDOM_1[24];	// @[Arbiter.scala:88:30, :117:26]
        state_1_5 = _RANDOM_1[25];	// @[Arbiter.scala:88:30, :117:26]
        state_1_6 = _RANDOM_1[26];	// @[Arbiter.scala:88:30, :117:26]
        state_1_7 = _RANDOM_1[27];	// @[Arbiter.scala:88:30, :117:26]
        state_1_8 = _RANDOM_1[28];	// @[Arbiter.scala:88:30, :117:26]
        state_1_9 = _RANDOM_1[29];	// @[Arbiter.scala:88:30, :117:26]
        state_1_10 = _RANDOM_1[30];	// @[Arbiter.scala:88:30, :117:26]
        state_1_11 = _RANDOM_1[31];	// @[Arbiter.scala:88:30, :117:26]
        beatsLeft_2 = _RANDOM_2[7:0];	// @[Arbiter.scala:88:30]
        readys_mask_2 = _RANDOM_2[18:8];	// @[Arbiter.scala:24:23, :88:30]
        state_2_0 = _RANDOM_2[19];	// @[Arbiter.scala:88:30, :117:26]
        state_2_1 = _RANDOM_2[20];	// @[Arbiter.scala:88:30, :117:26]
        state_2_2 = _RANDOM_2[21];	// @[Arbiter.scala:88:30, :117:26]
        state_2_3 = _RANDOM_2[22];	// @[Arbiter.scala:88:30, :117:26]
        state_2_4 = _RANDOM_2[23];	// @[Arbiter.scala:88:30, :117:26]
        state_2_5 = _RANDOM_2[24];	// @[Arbiter.scala:88:30, :117:26]
        state_2_6 = _RANDOM_2[25];	// @[Arbiter.scala:88:30, :117:26]
        state_2_7 = _RANDOM_2[26];	// @[Arbiter.scala:88:30, :117:26]
        state_2_8 = _RANDOM_2[27];	// @[Arbiter.scala:88:30, :117:26]
        state_2_9 = _RANDOM_2[28];	// @[Arbiter.scala:88:30, :117:26]
        state_2_10 = _RANDOM_2[29];	// @[Arbiter.scala:88:30, :117:26]
        beatsLeft_3 = _RANDOM_2[30];	// @[Arbiter.scala:88:30]
        readys_mask_3 = {_RANDOM_2[31], _RANDOM_3[9:0]};	// @[Arbiter.scala:24:23, :88:30]
        state_3_0 = _RANDOM_3[10];	// @[Arbiter.scala:24:23, :117:26]
        state_3_1 = _RANDOM_3[11];	// @[Arbiter.scala:24:23, :117:26]
        state_3_2 = _RANDOM_3[12];	// @[Arbiter.scala:24:23, :117:26]
        state_3_3 = _RANDOM_3[13];	// @[Arbiter.scala:24:23, :117:26]
        state_3_4 = _RANDOM_3[14];	// @[Arbiter.scala:24:23, :117:26]
        state_3_5 = _RANDOM_3[15];	// @[Arbiter.scala:24:23, :117:26]
        state_3_6 = _RANDOM_3[16];	// @[Arbiter.scala:24:23, :117:26]
        state_3_7 = _RANDOM_3[17];	// @[Arbiter.scala:24:23, :117:26]
        state_3_8 = _RANDOM_3[18];	// @[Arbiter.scala:24:23, :117:26]
        state_3_9 = _RANDOM_3[19];	// @[Arbiter.scala:24:23, :117:26]
        state_3_10 = _RANDOM_3[20];	// @[Arbiter.scala:24:23, :117:26]
        beatsLeft_4 = _RANDOM_3[28:21];	// @[Arbiter.scala:24:23, :88:30]
        readys_mask_4 = _RANDOM_3[30:29];	// @[Arbiter.scala:24:23]
        state_4_0 = _RANDOM_3[31];	// @[Arbiter.scala:24:23, :117:26]
        state_4_1 = _RANDOM_4[0];	// @[Arbiter.scala:117:26]
        beatsLeft_5 = _RANDOM_4[8:1];	// @[Arbiter.scala:88:30, :117:26]
        readys_mask_5 = _RANDOM_4[10:9];	// @[Arbiter.scala:24:23, :117:26]
        state_5_0 = _RANDOM_4[11];	// @[Arbiter.scala:117:26]
        state_5_1 = _RANDOM_4[12];	// @[Arbiter.scala:117:26]
        beatsLeft_6 = _RANDOM_4[20:13];	// @[Arbiter.scala:88:30, :117:26]
        readys_mask_6 = _RANDOM_4[22:21];	// @[Arbiter.scala:24:23, :117:26]
        state_6_0 = _RANDOM_4[23];	// @[Arbiter.scala:117:26]
        state_6_1 = _RANDOM_4[24];	// @[Arbiter.scala:117:26]
        beatsLeft_7 = {_RANDOM_4[31:25], _RANDOM_5[0]};	// @[Arbiter.scala:88:30, :117:26]
        readys_mask_7 = _RANDOM_5[2:1];	// @[Arbiter.scala:24:23, :88:30]
        state_7_0 = _RANDOM_5[3];	// @[Arbiter.scala:88:30, :117:26]
        state_7_1 = _RANDOM_5[4];	// @[Arbiter.scala:88:30, :117:26]
        beatsLeft_8 = _RANDOM_5[12:5];	// @[Arbiter.scala:88:30]
        readys_mask_8 = _RANDOM_5[14:13];	// @[Arbiter.scala:24:23, :88:30]
        state_8_0 = _RANDOM_5[15];	// @[Arbiter.scala:88:30, :117:26]
        state_8_1 = _RANDOM_5[16];	// @[Arbiter.scala:88:30, :117:26]
        beatsLeft_9 = _RANDOM_5[24:17];	// @[Arbiter.scala:88:30]
        readys_mask_9 = _RANDOM_5[26:25];	// @[Arbiter.scala:24:23, :88:30]
        state_9_0 = _RANDOM_5[27];	// @[Arbiter.scala:88:30, :117:26]
        state_9_1 = _RANDOM_5[28];	// @[Arbiter.scala:88:30, :117:26]
        beatsLeft_10 = {_RANDOM_5[31:29], _RANDOM_6[4:0]};	// @[Arbiter.scala:88:30]
        readys_mask_10 = _RANDOM_6[6:5];	// @[Arbiter.scala:24:23, :88:30]
        state_10_0 = _RANDOM_6[7];	// @[Arbiter.scala:88:30, :117:26]
        state_10_1 = _RANDOM_6[8];	// @[Arbiter.scala:88:30, :117:26]
        beatsLeft_11 = _RANDOM_6[16:9];	// @[Arbiter.scala:88:30]
        readys_mask_11 = _RANDOM_6[18:17];	// @[Arbiter.scala:24:23, :88:30]
        state_11_0 = _RANDOM_6[19];	// @[Arbiter.scala:88:30, :117:26]
        state_11_1 = _RANDOM_6[20];	// @[Arbiter.scala:88:30, :117:26]
        beatsLeft_12 = _RANDOM_6[28:21];	// @[Arbiter.scala:88:30]
        readys_mask_12 = _RANDOM_6[30:29];	// @[Arbiter.scala:24:23, :88:30]
        state_12_0 = _RANDOM_6[31];	// @[Arbiter.scala:88:30, :117:26]
        state_12_1 = _RANDOM_7[0];	// @[Arbiter.scala:117:26]
        beatsLeft_13 = _RANDOM_7[8:1];	// @[Arbiter.scala:88:30, :117:26]
        readys_mask_13 = _RANDOM_7[10:9];	// @[Arbiter.scala:24:23, :117:26]
        state_13_0 = _RANDOM_7[11];	// @[Arbiter.scala:117:26]
        state_13_1 = _RANDOM_7[12];	// @[Arbiter.scala:117:26]
        beatsLeft_14 = _RANDOM_7[20:13];	// @[Arbiter.scala:88:30, :117:26]
        readys_mask_14 = _RANDOM_7[22:21];	// @[Arbiter.scala:24:23, :117:26]
        state_14_0 = _RANDOM_7[23];	// @[Arbiter.scala:117:26]
        state_14_1 = _RANDOM_7[24];	// @[Arbiter.scala:117:26]
        beatsLeft_15 = {_RANDOM_7[31:25], _RANDOM_8[0]};	// @[Arbiter.scala:88:30, :117:26]
        readys_mask_15 = _RANDOM_8[2:1];	// @[Arbiter.scala:24:23, :88:30]
        state_15_0 = _RANDOM_8[3];	// @[Arbiter.scala:88:30, :117:26]
        state_15_1 = _RANDOM_8[4];	// @[Arbiter.scala:88:30, :117:26]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  TLMonitor monitor (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_0_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_0_a_valid),
    .io_in_a_bits_opcode  (auto_in_0_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_0_a_bits_param),
    .io_in_a_bits_size    (auto_in_0_a_bits_size),
    .io_in_a_bits_source  (auto_in_0_a_bits_source),
    .io_in_a_bits_address (auto_in_0_a_bits_address),
    .io_in_a_bits_mask    (auto_in_0_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_0_a_bits_corrupt),
    .io_in_d_ready        (auto_in_0_d_ready),
    .io_in_d_valid        (out_42_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_42_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_42_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_42_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_42_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_42_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_42_bits_corrupt)	// @[Mux.scala:27:73]
  );
  TLMonitor_1 monitor_1 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_1_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_1_a_valid),
    .io_in_a_bits_opcode  (auto_in_1_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_1_a_bits_param),
    .io_in_a_bits_size    (auto_in_1_a_bits_size),
    .io_in_a_bits_source  (auto_in_1_a_bits_source),
    .io_in_a_bits_address (auto_in_1_a_bits_address),
    .io_in_a_bits_mask    (auto_in_1_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_1_a_bits_corrupt),
    .io_in_b_valid        (out_44_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[3:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_15_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_1_c_valid),
    .io_in_c_bits_opcode  (auto_in_1_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_1_c_bits_param),
    .io_in_c_bits_size    (auto_in_1_c_bits_size),
    .io_in_c_bits_source  (auto_in_1_c_bits_source),
    .io_in_c_bits_address (auto_in_1_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_1_c_bits_corrupt),
    .io_in_d_ready        (auto_in_1_d_ready),
    .io_in_d_valid        (out_47_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_47_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_47_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_47_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_1_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_47_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_47_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_47_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_27_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_1_e_valid),
    .io_in_e_bits_sink    (auto_in_1_e_bits_sink)
  );
  TLMonitor_1 monitor_2 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_2_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_2_a_valid),
    .io_in_a_bits_opcode  (auto_in_2_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_2_a_bits_param),
    .io_in_a_bits_size    (auto_in_2_a_bits_size),
    .io_in_a_bits_source  (auto_in_2_a_bits_source),
    .io_in_a_bits_address (auto_in_2_a_bits_address),
    .io_in_a_bits_mask    (auto_in_2_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_2_a_bits_corrupt),
    .io_in_b_valid        (out_49_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[3:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_16_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_2_c_valid),
    .io_in_c_bits_opcode  (auto_in_2_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_2_c_bits_param),
    .io_in_c_bits_size    (auto_in_2_c_bits_size),
    .io_in_c_bits_source  (auto_in_2_c_bits_source),
    .io_in_c_bits_address (auto_in_2_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_2_c_bits_corrupt),
    .io_in_d_ready        (auto_in_2_d_ready),
    .io_in_d_valid        (out_52_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_52_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_52_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_52_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_2_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_52_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_52_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_52_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_28_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_2_e_valid),
    .io_in_e_bits_sink    (auto_in_2_e_bits_sink)
  );
  TLMonitor_1 monitor_3 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_3_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_3_a_valid),
    .io_in_a_bits_opcode  (auto_in_3_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_3_a_bits_param),
    .io_in_a_bits_size    (auto_in_3_a_bits_size),
    .io_in_a_bits_source  (auto_in_3_a_bits_source),
    .io_in_a_bits_address (auto_in_3_a_bits_address),
    .io_in_a_bits_mask    (auto_in_3_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_3_a_bits_corrupt),
    .io_in_b_valid        (out_54_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[3:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_17_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_3_c_valid),
    .io_in_c_bits_opcode  (auto_in_3_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_3_c_bits_param),
    .io_in_c_bits_size    (auto_in_3_c_bits_size),
    .io_in_c_bits_source  (auto_in_3_c_bits_source),
    .io_in_c_bits_address (auto_in_3_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_3_c_bits_corrupt),
    .io_in_d_ready        (auto_in_3_d_ready),
    .io_in_d_valid        (out_57_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_57_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_57_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_57_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_3_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_57_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_57_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_57_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_29_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_3_e_valid),
    .io_in_e_bits_sink    (auto_in_3_e_bits_sink)
  );
  TLMonitor_4 monitor_4 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_4_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_4_a_valid),
    .io_in_a_bits_opcode  (auto_in_4_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_4_a_bits_param),
    .io_in_a_bits_size    (auto_in_4_a_bits_size),
    .io_in_a_bits_source  (auto_in_4_a_bits_source),
    .io_in_a_bits_address (auto_in_4_a_bits_address),
    .io_in_a_bits_mask    (auto_in_4_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_4_a_bits_corrupt),
    .io_in_b_valid        (out_59_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[2:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_18_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_4_c_valid),
    .io_in_c_bits_opcode  (auto_in_4_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_4_c_bits_param),
    .io_in_c_bits_size    (auto_in_4_c_bits_size),
    .io_in_c_bits_source  (auto_in_4_c_bits_source),
    .io_in_c_bits_address (auto_in_4_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_4_c_bits_corrupt),
    .io_in_d_ready        (auto_in_4_d_ready),
    .io_in_d_valid        (out_62_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_62_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_62_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_62_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_4_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_62_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_62_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_62_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_30_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_4_e_valid),
    .io_in_e_bits_sink    (auto_in_4_e_bits_sink)
  );
  TLMonitor_4 monitor_5 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_5_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_5_a_valid),
    .io_in_a_bits_opcode  (auto_in_5_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_5_a_bits_param),
    .io_in_a_bits_size    (auto_in_5_a_bits_size),
    .io_in_a_bits_source  (auto_in_5_a_bits_source),
    .io_in_a_bits_address (auto_in_5_a_bits_address),
    .io_in_a_bits_mask    (auto_in_5_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_5_a_bits_corrupt),
    .io_in_b_valid        (out_64_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[2:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_19_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_5_c_valid),
    .io_in_c_bits_opcode  (auto_in_5_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_5_c_bits_param),
    .io_in_c_bits_size    (auto_in_5_c_bits_size),
    .io_in_c_bits_source  (auto_in_5_c_bits_source),
    .io_in_c_bits_address (auto_in_5_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_5_c_bits_corrupt),
    .io_in_d_ready        (auto_in_5_d_ready),
    .io_in_d_valid        (out_67_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_67_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_67_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_67_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_5_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_67_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_67_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_67_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_31_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_5_e_valid),
    .io_in_e_bits_sink    (auto_in_5_e_bits_sink)
  );
  TLMonitor_4 monitor_6 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_6_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_6_a_valid),
    .io_in_a_bits_opcode  (auto_in_6_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_6_a_bits_param),
    .io_in_a_bits_size    (auto_in_6_a_bits_size),
    .io_in_a_bits_source  (auto_in_6_a_bits_source),
    .io_in_a_bits_address (auto_in_6_a_bits_address),
    .io_in_a_bits_mask    (auto_in_6_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_6_a_bits_corrupt),
    .io_in_b_valid        (out_69_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[2:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_20_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_6_c_valid),
    .io_in_c_bits_opcode  (auto_in_6_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_6_c_bits_param),
    .io_in_c_bits_size    (auto_in_6_c_bits_size),
    .io_in_c_bits_source  (auto_in_6_c_bits_source),
    .io_in_c_bits_address (auto_in_6_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_6_c_bits_corrupt),
    .io_in_d_ready        (auto_in_6_d_ready),
    .io_in_d_valid        (out_72_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_72_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_72_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_72_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_6_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_72_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_72_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_72_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_32_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_6_e_valid),
    .io_in_e_bits_sink    (auto_in_6_e_bits_sink)
  );
  TLMonitor_4 monitor_7 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_7_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_7_a_valid),
    .io_in_a_bits_opcode  (auto_in_7_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_7_a_bits_param),
    .io_in_a_bits_size    (auto_in_7_a_bits_size),
    .io_in_a_bits_source  (auto_in_7_a_bits_source),
    .io_in_a_bits_address (auto_in_7_a_bits_address),
    .io_in_a_bits_mask    (auto_in_7_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_7_a_bits_corrupt),
    .io_in_b_valid        (out_74_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[2:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_21_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_7_c_valid),
    .io_in_c_bits_opcode  (auto_in_7_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_7_c_bits_param),
    .io_in_c_bits_size    (auto_in_7_c_bits_size),
    .io_in_c_bits_source  (auto_in_7_c_bits_source),
    .io_in_c_bits_address (auto_in_7_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_7_c_bits_corrupt),
    .io_in_d_ready        (auto_in_7_d_ready),
    .io_in_d_valid        (out_77_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_77_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_77_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_77_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_7_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_77_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_77_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_77_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_33_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_7_e_valid),
    .io_in_e_bits_sink    (auto_in_7_e_bits_sink)
  );
  TLMonitor_4 monitor_8 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_8_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_8_a_valid),
    .io_in_a_bits_opcode  (auto_in_8_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_8_a_bits_param),
    .io_in_a_bits_size    (auto_in_8_a_bits_size),
    .io_in_a_bits_source  (auto_in_8_a_bits_source),
    .io_in_a_bits_address (auto_in_8_a_bits_address),
    .io_in_a_bits_mask    (auto_in_8_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_8_a_bits_corrupt),
    .io_in_b_valid        (out_79_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[2:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_22_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_8_c_valid),
    .io_in_c_bits_opcode  (auto_in_8_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_8_c_bits_param),
    .io_in_c_bits_size    (auto_in_8_c_bits_size),
    .io_in_c_bits_source  (auto_in_8_c_bits_source),
    .io_in_c_bits_address (auto_in_8_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_8_c_bits_corrupt),
    .io_in_d_ready        (auto_in_8_d_ready),
    .io_in_d_valid        (out_82_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_82_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_82_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_82_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_8_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_82_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_82_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_82_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_34_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_8_e_valid),
    .io_in_e_bits_sink    (auto_in_8_e_bits_sink)
  );
  TLMonitor_4 monitor_9 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_9_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_9_a_valid),
    .io_in_a_bits_opcode  (auto_in_9_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_9_a_bits_param),
    .io_in_a_bits_size    (auto_in_9_a_bits_size),
    .io_in_a_bits_source  (auto_in_9_a_bits_source),
    .io_in_a_bits_address (auto_in_9_a_bits_address),
    .io_in_a_bits_mask    (auto_in_9_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_9_a_bits_corrupt),
    .io_in_b_valid        (out_84_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[2:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_23_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_9_c_valid),
    .io_in_c_bits_opcode  (auto_in_9_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_9_c_bits_param),
    .io_in_c_bits_size    (auto_in_9_c_bits_size),
    .io_in_c_bits_source  (auto_in_9_c_bits_source),
    .io_in_c_bits_address (auto_in_9_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_9_c_bits_corrupt),
    .io_in_d_ready        (auto_in_9_d_ready),
    .io_in_d_valid        (out_87_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_87_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_87_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_87_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_9_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_87_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_87_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_87_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_35_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_9_e_valid),
    .io_in_e_bits_sink    (auto_in_9_e_bits_sink)
  );
  TLMonitor_4 monitor_10 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_10_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_10_a_valid),
    .io_in_a_bits_opcode  (auto_in_10_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_10_a_bits_param),
    .io_in_a_bits_size    (auto_in_10_a_bits_size),
    .io_in_a_bits_source  (auto_in_10_a_bits_source),
    .io_in_a_bits_address (auto_in_10_a_bits_address),
    .io_in_a_bits_mask    (auto_in_10_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_10_a_bits_corrupt),
    .io_in_b_valid        (out_89_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[2:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_24_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_10_c_valid),
    .io_in_c_bits_opcode  (auto_in_10_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_10_c_bits_param),
    .io_in_c_bits_size    (auto_in_10_c_bits_size),
    .io_in_c_bits_source  (auto_in_10_c_bits_source),
    .io_in_c_bits_address (auto_in_10_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_10_c_bits_corrupt),
    .io_in_d_ready        (auto_in_10_d_ready),
    .io_in_d_valid        (out_92_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_92_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_92_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_92_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_10_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_92_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_92_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_92_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_36_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_10_e_valid),
    .io_in_e_bits_sink    (auto_in_10_e_bits_sink)
  );
  TLMonitor_4 monitor_11 (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_portsAOI_in_11_a_ready_WIRE),	// @[Mux.scala:27:73]
    .io_in_a_valid        (auto_in_11_a_valid),
    .io_in_a_bits_opcode  (auto_in_11_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_11_a_bits_param),
    .io_in_a_bits_size    (auto_in_11_a_bits_size),
    .io_in_a_bits_source  (auto_in_11_a_bits_source),
    .io_in_a_bits_address (auto_in_11_a_bits_address),
    .io_in_a_bits_mask    (auto_in_11_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_11_a_bits_corrupt),
    .io_in_b_valid        (out_94_valid),	// @[Xbar.scala:182:40]
    .io_in_b_bits_param   (auto_out_1_b_bits_param),
    .io_in_b_bits_size    (4'h6),	// @[BundleMap.scala:247:19]
    .io_in_b_bits_source  (auto_out_1_b_bits_source[2:0]),	// @[Xbar.scala:231:69]
    .io_in_b_bits_address (auto_out_1_b_bits_address),
    .io_in_c_ready        (out_25_ready),	// @[Arbiter.scala:124:31]
    .io_in_c_valid        (auto_in_11_c_valid),
    .io_in_c_bits_opcode  (auto_in_11_c_bits_opcode),
    .io_in_c_bits_param   (auto_in_11_c_bits_param),
    .io_in_c_bits_size    (auto_in_11_c_bits_size),
    .io_in_c_bits_source  (auto_in_11_c_bits_source),
    .io_in_c_bits_address (auto_in_11_c_bits_address),
    .io_in_c_bits_corrupt (auto_in_11_c_bits_corrupt),
    .io_in_d_ready        (auto_in_11_d_ready),
    .io_in_d_valid        (out_97_valid),	// @[Arbiter.scala:126:29]
    .io_in_d_bits_opcode  (out_97_bits_opcode),	// @[Mux.scala:27:73]
    .io_in_d_bits_param   (out_97_bits_param),	// @[Mux.scala:27:73]
    .io_in_d_bits_size    (out_97_bits_size),	// @[Mux.scala:27:73]
    .io_in_d_bits_source  (out_11_d_bits_source),	// @[Mux.scala:27:73]
    .io_in_d_bits_sink    (out_97_bits_sink),	// @[Mux.scala:27:73]
    .io_in_d_bits_denied  (out_97_bits_denied),	// @[Mux.scala:27:73]
    .io_in_d_bits_corrupt (out_97_bits_corrupt),	// @[Mux.scala:27:73]
    .io_in_e_ready        (out_37_ready),	// @[Arbiter.scala:122:24]
    .io_in_e_valid        (auto_in_11_e_valid),
    .io_in_e_bits_sink    (auto_in_11_e_bits_sink)
  );
  assign auto_in_11_a_ready = _portsAOI_in_11_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_11_b_valid = out_94_valid;	// @[Xbar.scala:182:40]
  assign auto_in_11_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_11_b_bits_source = auto_out_1_b_bits_source[2:0];	// @[Xbar.scala:231:69]
  assign auto_in_11_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_11_c_ready = out_25_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_11_d_valid = out_97_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_11_d_bits_opcode = out_97_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_11_d_bits_param = out_97_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_11_d_bits_size = out_97_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_11_d_bits_source = out_11_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_11_d_bits_sink = out_97_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_11_d_bits_denied = out_97_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_11_d_bits_data = (muxStateEarly_15_0 ? auto_out_0_d_bits_data : 128'h0) | (muxStateEarly_15_1 ? auto_out_1_d_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_11_d_bits_corrupt = out_97_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_11_e_ready = out_37_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_10_a_ready = _portsAOI_in_10_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_10_b_valid = out_89_valid;	// @[Xbar.scala:182:40]
  assign auto_in_10_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_10_b_bits_source = auto_out_1_b_bits_source[2:0];	// @[Xbar.scala:231:69]
  assign auto_in_10_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_10_c_ready = out_24_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_10_d_valid = out_92_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_10_d_bits_opcode = out_92_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_10_d_bits_param = out_92_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_10_d_bits_size = out_92_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_10_d_bits_source = out_10_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_10_d_bits_sink = out_92_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_10_d_bits_denied = out_92_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_10_d_bits_data = (muxStateEarly_14_0 ? auto_out_0_d_bits_data : 128'h0) | (muxStateEarly_14_1 ? auto_out_1_d_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_10_d_bits_corrupt = out_92_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_10_e_ready = out_36_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_9_a_ready = _portsAOI_in_9_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_9_b_valid = out_84_valid;	// @[Xbar.scala:182:40]
  assign auto_in_9_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_9_b_bits_source = auto_out_1_b_bits_source[2:0];	// @[Xbar.scala:231:69]
  assign auto_in_9_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_9_c_ready = out_23_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_9_d_valid = out_87_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_9_d_bits_opcode = out_87_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_9_d_bits_param = out_87_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_9_d_bits_size = out_87_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_9_d_bits_source = out_9_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_9_d_bits_sink = out_87_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_9_d_bits_denied = out_87_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_9_d_bits_data = (muxStateEarly_13_0 ? auto_out_0_d_bits_data : 128'h0) | (muxStateEarly_13_1 ? auto_out_1_d_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_9_d_bits_corrupt = out_87_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_9_e_ready = out_35_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_8_a_ready = _portsAOI_in_8_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_8_b_valid = out_79_valid;	// @[Xbar.scala:182:40]
  assign auto_in_8_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_8_b_bits_source = auto_out_1_b_bits_source[2:0];	// @[Xbar.scala:231:69]
  assign auto_in_8_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_8_c_ready = out_22_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_8_d_valid = out_82_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_8_d_bits_opcode = out_82_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_8_d_bits_param = out_82_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_8_d_bits_size = out_82_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_8_d_bits_source = out_8_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_8_d_bits_sink = out_82_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_8_d_bits_denied = out_82_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_8_d_bits_data = (muxStateEarly_12_0 ? auto_out_0_d_bits_data : 128'h0) | (muxStateEarly_12_1 ? auto_out_1_d_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_8_d_bits_corrupt = out_82_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_8_e_ready = out_34_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_7_a_ready = _portsAOI_in_7_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_7_b_valid = out_74_valid;	// @[Xbar.scala:182:40]
  assign auto_in_7_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_7_b_bits_source = auto_out_1_b_bits_source[2:0];	// @[Xbar.scala:231:69]
  assign auto_in_7_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_7_c_ready = out_21_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_7_d_valid = out_77_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_7_d_bits_opcode = out_77_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_7_d_bits_param = out_77_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_7_d_bits_size = out_77_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_7_d_bits_source = out_7_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_7_d_bits_sink = out_77_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_7_d_bits_denied = out_77_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_7_d_bits_data = (muxStateEarly_11_0 ? auto_out_0_d_bits_data : 128'h0) | (muxStateEarly_11_1 ? auto_out_1_d_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_7_d_bits_corrupt = out_77_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_7_e_ready = out_33_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_6_a_ready = _portsAOI_in_6_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_6_b_valid = out_69_valid;	// @[Xbar.scala:182:40]
  assign auto_in_6_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_6_b_bits_source = auto_out_1_b_bits_source[2:0];	// @[Xbar.scala:231:69]
  assign auto_in_6_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_6_c_ready = out_20_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_6_d_valid = out_72_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_6_d_bits_opcode = out_72_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_6_d_bits_param = out_72_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_6_d_bits_size = out_72_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_6_d_bits_source = out_6_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_6_d_bits_sink = out_72_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_6_d_bits_denied = out_72_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_6_d_bits_data = (muxStateEarly_10_0 ? auto_out_0_d_bits_data : 128'h0) | (muxStateEarly_10_1 ? auto_out_1_d_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_6_d_bits_corrupt = out_72_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_6_e_ready = out_32_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_5_a_ready = _portsAOI_in_5_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_5_b_valid = out_64_valid;	// @[Xbar.scala:182:40]
  assign auto_in_5_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_5_b_bits_source = auto_out_1_b_bits_source[2:0];	// @[Xbar.scala:231:69]
  assign auto_in_5_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_5_c_ready = out_19_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_5_d_valid = out_67_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_5_d_bits_opcode = out_67_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_5_d_bits_param = out_67_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_5_d_bits_size = out_67_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_5_d_bits_source = out_5_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_5_d_bits_sink = out_67_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_5_d_bits_denied = out_67_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_5_d_bits_data = (muxStateEarly_9_0 ? auto_out_0_d_bits_data : 128'h0) | (muxStateEarly_9_1 ? auto_out_1_d_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_5_d_bits_corrupt = out_67_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_5_e_ready = out_31_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_4_a_ready = _portsAOI_in_4_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_4_b_valid = out_59_valid;	// @[Xbar.scala:182:40]
  assign auto_in_4_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_4_b_bits_source = auto_out_1_b_bits_source[2:0];	// @[Xbar.scala:231:69]
  assign auto_in_4_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_4_c_ready = out_18_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_4_d_valid = out_62_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_4_d_bits_opcode = out_62_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_4_d_bits_param = out_62_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_4_d_bits_size = out_62_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_4_d_bits_source = out_4_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_4_d_bits_sink = out_62_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_4_d_bits_denied = out_62_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_4_d_bits_data = (muxStateEarly_8_0 ? auto_out_0_d_bits_data : 128'h0) | (muxStateEarly_8_1 ? auto_out_1_d_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_4_d_bits_corrupt = out_62_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_4_e_ready = out_30_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_3_a_ready = _portsAOI_in_3_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_3_b_valid = out_54_valid;	// @[Xbar.scala:182:40]
  assign auto_in_3_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_3_b_bits_source = auto_out_1_b_bits_source[3:0];	// @[Xbar.scala:231:69]
  assign auto_in_3_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_3_c_ready = out_17_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_3_d_valid = out_57_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_3_d_bits_opcode = out_57_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_3_d_bits_param = out_57_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_3_d_bits_size = out_57_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_3_d_bits_source = out_3_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_3_d_bits_sink = out_57_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_3_d_bits_denied = out_57_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_3_d_bits_data = (muxStateEarly_7_0 ? auto_out_0_d_bits_data : 128'h0) | (muxStateEarly_7_1 ? auto_out_1_d_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_3_d_bits_corrupt = out_57_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_3_e_ready = out_29_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_2_a_ready = _portsAOI_in_2_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_2_b_valid = out_49_valid;	// @[Xbar.scala:182:40]
  assign auto_in_2_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_2_b_bits_source = auto_out_1_b_bits_source[3:0];	// @[Xbar.scala:231:69]
  assign auto_in_2_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_2_c_ready = out_16_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_2_d_valid = out_52_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_2_d_bits_opcode = out_52_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_2_d_bits_param = out_52_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_2_d_bits_size = out_52_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_2_d_bits_source = out_2_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_2_d_bits_sink = out_52_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_2_d_bits_denied = out_52_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_2_d_bits_data = (muxStateEarly_6_0 ? auto_out_0_d_bits_data : 128'h0) | (muxStateEarly_6_1 ? auto_out_1_d_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_2_d_bits_corrupt = out_52_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_2_e_ready = out_28_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_1_a_ready = _portsAOI_in_1_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_1_b_valid = out_44_valid;	// @[Xbar.scala:182:40]
  assign auto_in_1_b_bits_param = auto_out_1_b_bits_param;
  assign auto_in_1_b_bits_source = auto_out_1_b_bits_source[3:0];	// @[Xbar.scala:231:69]
  assign auto_in_1_b_bits_address = auto_out_1_b_bits_address;
  assign auto_in_1_c_ready = out_15_ready;	// @[Arbiter.scala:124:31]
  assign auto_in_1_d_valid = out_47_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_1_d_bits_opcode = out_47_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_1_d_bits_param = out_47_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_1_d_bits_size = out_47_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_1_d_bits_source = out_1_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_1_d_bits_sink = out_47_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_1_d_bits_denied = out_47_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_1_d_bits_data = (muxStateEarly_5_0 ? auto_out_0_d_bits_data : 128'h0) | (muxStateEarly_5_1 ? auto_out_1_d_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_1_d_bits_corrupt = out_47_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_in_1_e_ready = out_27_ready;	// @[Arbiter.scala:122:24]
  assign auto_in_0_a_ready = _portsAOI_in_0_a_ready_WIRE;	// @[Mux.scala:27:73]
  assign auto_in_0_d_valid = out_42_valid;	// @[Arbiter.scala:126:29]
  assign auto_in_0_d_bits_opcode = out_42_bits_opcode;	// @[Mux.scala:27:73]
  assign auto_in_0_d_bits_param = out_42_bits_param;	// @[Mux.scala:27:73]
  assign auto_in_0_d_bits_size = out_42_bits_size;	// @[Mux.scala:27:73]
  assign auto_in_0_d_bits_source = out_d_bits_source;	// @[Mux.scala:27:73]
  assign auto_in_0_d_bits_sink = out_42_bits_sink;	// @[Mux.scala:27:73]
  assign auto_in_0_d_bits_denied = out_42_bits_denied;	// @[Mux.scala:27:73]
  assign auto_in_0_d_bits_data = (muxStateEarly_4_0 ? auto_out_0_d_bits_data : 128'h0) | (muxStateEarly_4_1 ? auto_out_1_d_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_in_0_d_bits_corrupt = out_42_bits_corrupt;	// @[Mux.scala:27:73]
  assign auto_out_1_a_valid = bundleOut_1_out_1_valid;	// @[Arbiter.scala:126:29]
  assign auto_out_1_a_bits_opcode = (muxStateEarly_1_0 ? auto_in_0_a_bits_opcode : 3'h0) | (muxStateEarly_1_1 ? auto_in_1_a_bits_opcode : 3'h0) | (muxStateEarly_1_2 ? auto_in_2_a_bits_opcode : 3'h0) | (muxStateEarly_1_3 ? auto_in_3_a_bits_opcode : 3'h0) | (muxStateEarly_1_4 ? auto_in_4_a_bits_opcode : 3'h0) | (muxStateEarly_1_5 ? auto_in_5_a_bits_opcode : 3'h0) | (muxStateEarly_1_6 ? auto_in_6_a_bits_opcode : 3'h0) | (muxStateEarly_1_7 ? auto_in_7_a_bits_opcode : 3'h0) | (muxStateEarly_1_8 ? auto_in_8_a_bits_opcode : 3'h0) | (muxStateEarly_1_9 ? auto_in_9_a_bits_opcode : 3'h0) | (muxStateEarly_1_10 ? auto_in_10_a_bits_opcode : 3'h0) | (muxStateEarly_1_11 ? auto_in_11_a_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_a_bits_param = (muxStateEarly_1_0 ? auto_in_0_a_bits_param : 3'h0) | (muxStateEarly_1_1 ? auto_in_1_a_bits_param : 3'h0) | (muxStateEarly_1_2 ? auto_in_2_a_bits_param : 3'h0) | (muxStateEarly_1_3 ? auto_in_3_a_bits_param : 3'h0) | (muxStateEarly_1_4 ? auto_in_4_a_bits_param : 3'h0) | (muxStateEarly_1_5 ? auto_in_5_a_bits_param : 3'h0) | (muxStateEarly_1_6 ? auto_in_6_a_bits_param : 3'h0) | (muxStateEarly_1_7 ? auto_in_7_a_bits_param : 3'h0) | (muxStateEarly_1_8 ? auto_in_8_a_bits_param : 3'h0) | (muxStateEarly_1_9 ? auto_in_9_a_bits_param : 3'h0) | (muxStateEarly_1_10 ? auto_in_10_a_bits_param : 3'h0) | (muxStateEarly_1_11 ? auto_in_11_a_bits_param : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_a_bits_size = (muxStateEarly_1_0 ? auto_in_0_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_1 ? auto_in_1_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_2 ? auto_in_2_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_3 ? auto_in_3_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_4 ? auto_in_4_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_5 ? auto_in_5_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_6 ? auto_in_6_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_7 ? auto_in_7_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_8 ? auto_in_8_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_9 ? auto_in_9_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_10 ? auto_in_10_a_bits_size[2:0] : 3'h0) | (muxStateEarly_1_11 ? auto_in_11_a_bits_size[2:0] : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_a_bits_source = (muxStateEarly_1_0 ? portsAOI_filtered_1_bits_source : 7'h0) | (muxStateEarly_1_1 ? portsAOI_filtered_1_1_bits_source : 7'h0) | (muxStateEarly_1_2 ? portsAOI_filtered_2_1_bits_source : 7'h0) | (muxStateEarly_1_3 ? portsAOI_filtered_3_1_bits_source : 7'h0) | (muxStateEarly_1_4 ? portsAOI_filtered_4_1_bits_source : 7'h0) | (muxStateEarly_1_5 ? portsAOI_filtered_5_1_bits_source : 7'h0) | (muxStateEarly_1_6 ? portsAOI_filtered_6_1_bits_source : 7'h0) | (muxStateEarly_1_7 ? portsAOI_filtered_7_1_bits_source : 7'h0) | (muxStateEarly_1_8 ? portsAOI_filtered_8_1_bits_source : 7'h0) | (muxStateEarly_1_9 ? portsAOI_filtered_9_1_bits_source : 7'h0) | (muxStateEarly_1_10 ? portsAOI_filtered_10_1_bits_source : 7'h0) | (muxStateEarly_1_11 ? portsAOI_filtered_11_1_bits_source : 7'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73, Xbar.scala:240:{29,55}, :265:23]
  assign auto_out_1_a_bits_address = (muxStateEarly_1_0 ? auto_in_0_a_bits_address : 32'h0) | (muxStateEarly_1_1 ? auto_in_1_a_bits_address : 32'h0) | (muxStateEarly_1_2 ? auto_in_2_a_bits_address : 32'h0) | (muxStateEarly_1_3 ? auto_in_3_a_bits_address : 32'h0) | (muxStateEarly_1_4 ? auto_in_4_a_bits_address : 32'h0) | (muxStateEarly_1_5 ? auto_in_5_a_bits_address : 32'h0) | (muxStateEarly_1_6 ? auto_in_6_a_bits_address : 32'h0) | (muxStateEarly_1_7 ? auto_in_7_a_bits_address : 32'h0) | (muxStateEarly_1_8 ? auto_in_8_a_bits_address : 32'h0) | (muxStateEarly_1_9 ? auto_in_9_a_bits_address : 32'h0) | (muxStateEarly_1_10 ? auto_in_10_a_bits_address : 32'h0) | (muxStateEarly_1_11 ? auto_in_11_a_bits_address : 32'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_a_bits_mask = (muxStateEarly_1_0 ? auto_in_0_a_bits_mask : 16'h0) | (muxStateEarly_1_1 ? auto_in_1_a_bits_mask : 16'h0) | (muxStateEarly_1_2 ? auto_in_2_a_bits_mask : 16'h0) | (muxStateEarly_1_3 ? auto_in_3_a_bits_mask : 16'h0) | (muxStateEarly_1_4 ? auto_in_4_a_bits_mask : 16'h0) | (muxStateEarly_1_5 ? auto_in_5_a_bits_mask : 16'h0) | (muxStateEarly_1_6 ? auto_in_6_a_bits_mask : 16'h0) | (muxStateEarly_1_7 ? auto_in_7_a_bits_mask : 16'h0) | (muxStateEarly_1_8 ? auto_in_8_a_bits_mask : 16'h0) | (muxStateEarly_1_9 ? auto_in_9_a_bits_mask : 16'h0) | (muxStateEarly_1_10 ? auto_in_10_a_bits_mask : 16'h0) | (muxStateEarly_1_11 ? auto_in_11_a_bits_mask : 16'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_a_bits_data = (muxStateEarly_1_0 ? auto_in_0_a_bits_data : 128'h0) | (muxStateEarly_1_1 ? auto_in_1_a_bits_data : 128'h0) | (muxStateEarly_1_2 ? auto_in_2_a_bits_data : 128'h0) | (muxStateEarly_1_3 ? auto_in_3_a_bits_data : 128'h0) | (muxStateEarly_1_4 ? auto_in_4_a_bits_data : 128'h0) | (muxStateEarly_1_5 ? auto_in_5_a_bits_data : 128'h0) | (muxStateEarly_1_6 ? auto_in_6_a_bits_data : 128'h0) | (muxStateEarly_1_7 ? auto_in_7_a_bits_data : 128'h0) | (muxStateEarly_1_8 ? auto_in_8_a_bits_data : 128'h0) | (muxStateEarly_1_9 ? auto_in_9_a_bits_data : 128'h0) | (muxStateEarly_1_10 ? auto_in_10_a_bits_data : 128'h0) | (muxStateEarly_1_11 ? auto_in_11_a_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_1_a_bits_corrupt = muxStateEarly_1_0 & auto_in_0_a_bits_corrupt | muxStateEarly_1_1 & auto_in_1_a_bits_corrupt | muxStateEarly_1_2 & auto_in_2_a_bits_corrupt | muxStateEarly_1_3 & auto_in_3_a_bits_corrupt | muxStateEarly_1_4 & auto_in_4_a_bits_corrupt | muxStateEarly_1_5 & auto_in_5_a_bits_corrupt | muxStateEarly_1_6 & auto_in_6_a_bits_corrupt | muxStateEarly_1_7 & auto_in_7_a_bits_corrupt | muxStateEarly_1_8 & auto_in_8_a_bits_corrupt | muxStateEarly_1_9 & auto_in_9_a_bits_corrupt | muxStateEarly_1_10 & auto_in_10_a_bits_corrupt | muxStateEarly_1_11 & auto_in_11_a_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_1_b_ready = requestBOI_1_1 & auto_in_1_b_ready | requestBOI_1_2 & auto_in_2_b_ready | requestBOI_1_3 & auto_in_3_b_ready | (&(auto_out_1_b_bits_source[6:3])) & auto_in_4_b_ready | requestBOI_1_5 & auto_in_5_b_ready | requestBOI_1_6 & auto_in_6_b_ready | requestBOI_1_7 & auto_in_7_b_ready | requestBOI_1_8 & auto_in_8_b_ready | requestBOI_1_9 & auto_in_9_b_ready | requestBOI_1_10 & auto_in_10_b_ready | requestBOI_1_11 & auto_in_11_b_ready;	// @[Mux.scala:27:73, Parameters.scala:54:{10,32}]
  assign auto_out_1_c_valid = bundleOut_1_out_c_valid;	// @[Arbiter.scala:126:29]
  assign auto_out_1_c_bits_opcode = (muxStateEarly_2_0 ? auto_in_1_c_bits_opcode : 3'h0) | (muxStateEarly_2_1 ? auto_in_2_c_bits_opcode : 3'h0) | (muxStateEarly_2_2 ? auto_in_3_c_bits_opcode : 3'h0) | (muxStateEarly_2_3 ? auto_in_4_c_bits_opcode : 3'h0) | (muxStateEarly_2_4 ? auto_in_5_c_bits_opcode : 3'h0) | (muxStateEarly_2_5 ? auto_in_6_c_bits_opcode : 3'h0) | (muxStateEarly_2_6 ? auto_in_7_c_bits_opcode : 3'h0) | (muxStateEarly_2_7 ? auto_in_8_c_bits_opcode : 3'h0) | (muxStateEarly_2_8 ? auto_in_9_c_bits_opcode : 3'h0) | (muxStateEarly_2_9 ? auto_in_10_c_bits_opcode : 3'h0) | (muxStateEarly_2_10 ? auto_in_11_c_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_c_bits_param = (muxStateEarly_2_0 ? auto_in_1_c_bits_param : 3'h0) | (muxStateEarly_2_1 ? auto_in_2_c_bits_param : 3'h0) | (muxStateEarly_2_2 ? auto_in_3_c_bits_param : 3'h0) | (muxStateEarly_2_3 ? auto_in_4_c_bits_param : 3'h0) | (muxStateEarly_2_4 ? auto_in_5_c_bits_param : 3'h0) | (muxStateEarly_2_5 ? auto_in_6_c_bits_param : 3'h0) | (muxStateEarly_2_6 ? auto_in_7_c_bits_param : 3'h0) | (muxStateEarly_2_7 ? auto_in_8_c_bits_param : 3'h0) | (muxStateEarly_2_8 ? auto_in_9_c_bits_param : 3'h0) | (muxStateEarly_2_9 ? auto_in_10_c_bits_param : 3'h0) | (muxStateEarly_2_10 ? auto_in_11_c_bits_param : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_c_bits_size = (muxStateEarly_2_0 ? auto_in_1_c_bits_size[2:0] : 3'h0) | (muxStateEarly_2_1 ? auto_in_2_c_bits_size[2:0] : 3'h0) | (muxStateEarly_2_2 ? auto_in_3_c_bits_size[2:0] : 3'h0) | (muxStateEarly_2_3 ? auto_in_4_c_bits_size[2:0] : 3'h0) | (muxStateEarly_2_4 ? auto_in_5_c_bits_size[2:0] : 3'h0) | (muxStateEarly_2_5 ? auto_in_6_c_bits_size[2:0] : 3'h0) | (muxStateEarly_2_6 ? auto_in_7_c_bits_size[2:0] : 3'h0) | (muxStateEarly_2_7 ? auto_in_8_c_bits_size[2:0] : 3'h0) | (muxStateEarly_2_8 ? auto_in_9_c_bits_size[2:0] : 3'h0) | (muxStateEarly_2_9 ? auto_in_10_c_bits_size[2:0] : 3'h0) | (muxStateEarly_2_10 ? auto_in_11_c_bits_size[2:0] : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_c_bits_source = (muxStateEarly_2_0 ? {3'h2, auto_in_1_c_bits_source} : 7'h0) | (muxStateEarly_2_1 ? {3'h1, auto_in_2_c_bits_source} : 7'h0) | (muxStateEarly_2_2 ? {3'h0, auto_in_3_c_bits_source} : 7'h0) | (muxStateEarly_2_3 ? {4'hF, auto_in_4_c_bits_source} : 7'h0) | (muxStateEarly_2_4 ? {4'hE, auto_in_5_c_bits_source} : 7'h0) | (muxStateEarly_2_5 ? {4'hD, auto_in_6_c_bits_source} : 7'h0) | (muxStateEarly_2_6 ? {4'hC, auto_in_7_c_bits_source} : 7'h0) | (muxStateEarly_2_7 ? {4'hB, auto_in_8_c_bits_source} : 7'h0) | (muxStateEarly_2_8 ? {4'hA, auto_in_9_c_bits_source} : 7'h0) | (muxStateEarly_2_9 ? {4'h9, auto_in_10_c_bits_source} : 7'h0) | (muxStateEarly_2_10 ? {4'h8, auto_in_11_c_bits_source} : 7'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73, Parameters.scala:54:32, Xbar.scala:262:{29,55}, :265:23]
  assign auto_out_1_c_bits_address = (muxStateEarly_2_0 ? auto_in_1_c_bits_address : 32'h0) | (muxStateEarly_2_1 ? auto_in_2_c_bits_address : 32'h0) | (muxStateEarly_2_2 ? auto_in_3_c_bits_address : 32'h0) | (muxStateEarly_2_3 ? auto_in_4_c_bits_address : 32'h0) | (muxStateEarly_2_4 ? auto_in_5_c_bits_address : 32'h0) | (muxStateEarly_2_5 ? auto_in_6_c_bits_address : 32'h0) | (muxStateEarly_2_6 ? auto_in_7_c_bits_address : 32'h0) | (muxStateEarly_2_7 ? auto_in_8_c_bits_address : 32'h0) | (muxStateEarly_2_8 ? auto_in_9_c_bits_address : 32'h0) | (muxStateEarly_2_9 ? auto_in_10_c_bits_address : 32'h0) | (muxStateEarly_2_10 ? auto_in_11_c_bits_address : 32'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_1_c_bits_data = (muxStateEarly_2_0 ? auto_in_1_c_bits_data : 128'h0) | (muxStateEarly_2_1 ? auto_in_2_c_bits_data : 128'h0) | (muxStateEarly_2_2 ? auto_in_3_c_bits_data : 128'h0) | (muxStateEarly_2_3 ? auto_in_4_c_bits_data : 128'h0) | (muxStateEarly_2_4 ? auto_in_5_c_bits_data : 128'h0) | (muxStateEarly_2_5 ? auto_in_6_c_bits_data : 128'h0) | (muxStateEarly_2_6 ? auto_in_7_c_bits_data : 128'h0) | (muxStateEarly_2_7 ? auto_in_8_c_bits_data : 128'h0) | (muxStateEarly_2_8 ? auto_in_9_c_bits_data : 128'h0) | (muxStateEarly_2_9 ? auto_in_10_c_bits_data : 128'h0) | (muxStateEarly_2_10 ? auto_in_11_c_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_1_c_bits_corrupt = muxStateEarly_2_0 & auto_in_1_c_bits_corrupt | muxStateEarly_2_1 & auto_in_2_c_bits_corrupt | muxStateEarly_2_2 & auto_in_3_c_bits_corrupt | muxStateEarly_2_3 & auto_in_4_c_bits_corrupt | muxStateEarly_2_4 & auto_in_5_c_bits_corrupt | muxStateEarly_2_5 & auto_in_6_c_bits_corrupt | muxStateEarly_2_6 & auto_in_7_c_bits_corrupt | muxStateEarly_2_7 & auto_in_8_c_bits_corrupt | muxStateEarly_2_8 & auto_in_9_c_bits_corrupt | muxStateEarly_2_9 & auto_in_10_c_bits_corrupt | muxStateEarly_2_10 & auto_in_11_c_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_1_d_ready = requestDOI_1_0 & auto_in_0_d_ready & allowed_4_1 | requestDOI_1_1 & auto_in_1_d_ready & allowed_5_1 | requestDOI_1_2 & auto_in_2_d_ready & allowed_6_1 | requestDOI_1_3 & auto_in_3_d_ready & allowed_7_1 | (&(auto_out_1_d_bits_source[6:3])) & auto_in_4_d_ready & allowed_8_1 | requestDOI_1_5 & auto_in_5_d_ready & allowed_9_1 | requestDOI_1_6 & auto_in_6_d_ready & allowed_10_1 | requestDOI_1_7 & auto_in_7_d_ready & allowed_11_1 | requestDOI_1_8 & auto_in_8_d_ready & allowed_12_1 | requestDOI_1_9 & auto_in_9_d_ready & allowed_13_1 | requestDOI_1_10 & auto_in_10_d_ready & allowed_14_1 | requestDOI_1_11 & auto_in_11_d_ready & allowed_15_1;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:54:{10,32}]
  assign auto_out_1_e_valid = bundleOut_1_out_e_valid;	// @[Arbiter.scala:126:29]
  assign auto_out_1_e_bits_sink = ((beatsLeft_3 ? state_3_0 : earlyWinner_3_0) ? auto_in_1_e_bits_sink : 4'h0) | ((beatsLeft_3 ? state_3_1 : earlyWinner_3_1) ? auto_in_2_e_bits_sink : 4'h0) | ((beatsLeft_3 ? state_3_2 : earlyWinner_3_2) ? auto_in_3_e_bits_sink : 4'h0) | ((beatsLeft_3 ? state_3_3 : earlyWinner_3_3) ? auto_in_4_e_bits_sink : 4'h0) | ((beatsLeft_3 ? state_3_4 : earlyWinner_3_4) ? auto_in_5_e_bits_sink : 4'h0) | ((beatsLeft_3 ? state_3_5 : earlyWinner_3_5) ? auto_in_6_e_bits_sink : 4'h0) | ((beatsLeft_3 ? state_3_6 : earlyWinner_3_6) ? auto_in_7_e_bits_sink : 4'h0) | ((beatsLeft_3 ? state_3_7 : earlyWinner_3_7) ? auto_in_8_e_bits_sink : 4'h0) | ((beatsLeft_3 ? state_3_8 : earlyWinner_3_8) ? auto_in_9_e_bits_sink : 4'h0) | ((beatsLeft_3 ? state_3_9 : earlyWinner_3_9) ? auto_in_10_e_bits_sink : 4'h0) | ((beatsLeft_3 ? state_3_10 : earlyWinner_3_10) ? auto_in_11_e_bits_sink : 4'h0);	// @[Arbiter.scala:88:30, :98:79, :117:26, :118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_0_a_valid = x1_out_1_valid;	// @[Arbiter.scala:126:29]
  assign auto_out_0_a_bits_opcode = (muxStateEarly_0 ? auto_in_0_a_bits_opcode : 3'h0) | (muxStateEarly_1 ? auto_in_1_a_bits_opcode : 3'h0) | (muxStateEarly_2 ? auto_in_2_a_bits_opcode : 3'h0) | (muxStateEarly_3 ? auto_in_3_a_bits_opcode : 3'h0) | (muxStateEarly_4 ? auto_in_4_a_bits_opcode : 3'h0) | (muxStateEarly_5 ? auto_in_5_a_bits_opcode : 3'h0) | (muxStateEarly_6 ? auto_in_6_a_bits_opcode : 3'h0) | (muxStateEarly_7 ? auto_in_7_a_bits_opcode : 3'h0) | (muxStateEarly_8 ? auto_in_8_a_bits_opcode : 3'h0) | (muxStateEarly_9 ? auto_in_9_a_bits_opcode : 3'h0) | (muxStateEarly_10 ? auto_in_10_a_bits_opcode : 3'h0) | (muxStateEarly_11 ? auto_in_11_a_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_0_a_bits_param = (muxStateEarly_0 ? auto_in_0_a_bits_param : 3'h0) | (muxStateEarly_1 ? auto_in_1_a_bits_param : 3'h0) | (muxStateEarly_2 ? auto_in_2_a_bits_param : 3'h0) | (muxStateEarly_3 ? auto_in_3_a_bits_param : 3'h0) | (muxStateEarly_4 ? auto_in_4_a_bits_param : 3'h0) | (muxStateEarly_5 ? auto_in_5_a_bits_param : 3'h0) | (muxStateEarly_6 ? auto_in_6_a_bits_param : 3'h0) | (muxStateEarly_7 ? auto_in_7_a_bits_param : 3'h0) | (muxStateEarly_8 ? auto_in_8_a_bits_param : 3'h0) | (muxStateEarly_9 ? auto_in_9_a_bits_param : 3'h0) | (muxStateEarly_10 ? auto_in_10_a_bits_param : 3'h0) | (muxStateEarly_11 ? auto_in_11_a_bits_param : 3'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_0_a_bits_size = (muxStateEarly_0 ? auto_in_0_a_bits_size : 4'h0) | (muxStateEarly_1 ? auto_in_1_a_bits_size : 4'h0) | (muxStateEarly_2 ? auto_in_2_a_bits_size : 4'h0) | (muxStateEarly_3 ? auto_in_3_a_bits_size : 4'h0) | (muxStateEarly_4 ? auto_in_4_a_bits_size : 4'h0) | (muxStateEarly_5 ? auto_in_5_a_bits_size : 4'h0) | (muxStateEarly_6 ? auto_in_6_a_bits_size : 4'h0) | (muxStateEarly_7 ? auto_in_7_a_bits_size : 4'h0) | (muxStateEarly_8 ? auto_in_8_a_bits_size : 4'h0) | (muxStateEarly_9 ? auto_in_9_a_bits_size : 4'h0) | (muxStateEarly_10 ? auto_in_10_a_bits_size : 4'h0) | (muxStateEarly_11 ? auto_in_11_a_bits_size : 4'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_0_a_bits_source = (muxStateEarly_0 ? portsAOI_filtered_1_bits_source : 7'h0) | (muxStateEarly_1 ? portsAOI_filtered_1_1_bits_source : 7'h0) | (muxStateEarly_2 ? portsAOI_filtered_2_1_bits_source : 7'h0) | (muxStateEarly_3 ? portsAOI_filtered_3_1_bits_source : 7'h0) | (muxStateEarly_4 ? portsAOI_filtered_4_1_bits_source : 7'h0) | (muxStateEarly_5 ? portsAOI_filtered_5_1_bits_source : 7'h0) | (muxStateEarly_6 ? portsAOI_filtered_6_1_bits_source : 7'h0) | (muxStateEarly_7 ? portsAOI_filtered_7_1_bits_source : 7'h0) | (muxStateEarly_8 ? portsAOI_filtered_8_1_bits_source : 7'h0) | (muxStateEarly_9 ? portsAOI_filtered_9_1_bits_source : 7'h0) | (muxStateEarly_10 ? portsAOI_filtered_10_1_bits_source : 7'h0) | (muxStateEarly_11 ? portsAOI_filtered_11_1_bits_source : 7'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73, Xbar.scala:240:{29,55}, :265:23]
  assign auto_out_0_a_bits_address = (muxStateEarly_0 ? auto_in_0_a_bits_address[30:0] : 31'h0) | (muxStateEarly_1 ? auto_in_1_a_bits_address[30:0] : 31'h0) | (muxStateEarly_2 ? auto_in_2_a_bits_address[30:0] : 31'h0) | (muxStateEarly_3 ? auto_in_3_a_bits_address[30:0] : 31'h0) | (muxStateEarly_4 ? auto_in_4_a_bits_address[30:0] : 31'h0) | (muxStateEarly_5 ? auto_in_5_a_bits_address[30:0] : 31'h0) | (muxStateEarly_6 ? auto_in_6_a_bits_address[30:0] : 31'h0) | (muxStateEarly_7 ? auto_in_7_a_bits_address[30:0] : 31'h0) | (muxStateEarly_8 ? auto_in_8_a_bits_address[30:0] : 31'h0) | (muxStateEarly_9 ? auto_in_9_a_bits_address[30:0] : 31'h0) | (muxStateEarly_10 ? auto_in_10_a_bits_address[30:0] : 31'h0) | (muxStateEarly_11 ? auto_in_11_a_bits_address[30:0] : 31'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_0_a_bits_mask = (muxStateEarly_0 ? auto_in_0_a_bits_mask : 16'h0) | (muxStateEarly_1 ? auto_in_1_a_bits_mask : 16'h0) | (muxStateEarly_2 ? auto_in_2_a_bits_mask : 16'h0) | (muxStateEarly_3 ? auto_in_3_a_bits_mask : 16'h0) | (muxStateEarly_4 ? auto_in_4_a_bits_mask : 16'h0) | (muxStateEarly_5 ? auto_in_5_a_bits_mask : 16'h0) | (muxStateEarly_6 ? auto_in_6_a_bits_mask : 16'h0) | (muxStateEarly_7 ? auto_in_7_a_bits_mask : 16'h0) | (muxStateEarly_8 ? auto_in_8_a_bits_mask : 16'h0) | (muxStateEarly_9 ? auto_in_9_a_bits_mask : 16'h0) | (muxStateEarly_10 ? auto_in_10_a_bits_mask : 16'h0) | (muxStateEarly_11 ? auto_in_11_a_bits_mask : 16'h0);	// @[Arbiter.scala:118:30, Bundles.scala:259:74, Mux.scala:27:73]
  assign auto_out_0_a_bits_data = (muxStateEarly_0 ? auto_in_0_a_bits_data : 128'h0) | (muxStateEarly_1 ? auto_in_1_a_bits_data : 128'h0) | (muxStateEarly_2 ? auto_in_2_a_bits_data : 128'h0) | (muxStateEarly_3 ? auto_in_3_a_bits_data : 128'h0) | (muxStateEarly_4 ? auto_in_4_a_bits_data : 128'h0) | (muxStateEarly_5 ? auto_in_5_a_bits_data : 128'h0) | (muxStateEarly_6 ? auto_in_6_a_bits_data : 128'h0) | (muxStateEarly_7 ? auto_in_7_a_bits_data : 128'h0) | (muxStateEarly_8 ? auto_in_8_a_bits_data : 128'h0) | (muxStateEarly_9 ? auto_in_9_a_bits_data : 128'h0) | (muxStateEarly_10 ? auto_in_10_a_bits_data : 128'h0) | (muxStateEarly_11 ? auto_in_11_a_bits_data : 128'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_0_a_bits_corrupt = muxStateEarly_0 & auto_in_0_a_bits_corrupt | muxStateEarly_1 & auto_in_1_a_bits_corrupt | muxStateEarly_2 & auto_in_2_a_bits_corrupt | muxStateEarly_3 & auto_in_3_a_bits_corrupt | muxStateEarly_4 & auto_in_4_a_bits_corrupt | muxStateEarly_5 & auto_in_5_a_bits_corrupt | muxStateEarly_6 & auto_in_6_a_bits_corrupt | muxStateEarly_7 & auto_in_7_a_bits_corrupt | muxStateEarly_8 & auto_in_8_a_bits_corrupt | muxStateEarly_9 & auto_in_9_a_bits_corrupt | muxStateEarly_10 & auto_in_10_a_bits_corrupt | muxStateEarly_11 & auto_in_11_a_bits_corrupt;	// @[Arbiter.scala:118:30, Mux.scala:27:73]
  assign auto_out_0_d_ready = requestDOI_0_0 & auto_in_0_d_ready & allowed_4_0 | requestDOI_0_1 & auto_in_1_d_ready & allowed_5_0 | requestDOI_0_2 & auto_in_2_d_ready & allowed_6_0 | requestDOI_0_3 & auto_in_3_d_ready & allowed_7_0 | (&(auto_out_0_d_bits_source[6:3])) & auto_in_4_d_ready & allowed_8_0 | requestDOI_0_5 & auto_in_5_d_ready & allowed_9_0 | requestDOI_0_6 & auto_in_6_d_ready & allowed_10_0 | requestDOI_0_7 & auto_in_7_d_ready & allowed_11_0 | requestDOI_0_8 & auto_in_8_d_ready & allowed_12_0 | requestDOI_0_9 & auto_in_9_d_ready & allowed_13_0 | requestDOI_0_10 & auto_in_10_d_ready & allowed_14_0 | requestDOI_0_11 & auto_in_11_d_ready & allowed_15_0;	// @[Arbiter.scala:122:24, Mux.scala:27:73, Parameters.scala:54:{10,32}]
endmodule

